{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4","program":"/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing_futures","--edition=2018","/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"pin-project\"","--cfg","feature=\"std\"","--cfg","feature=\"std-future\"","-C","metadata=0f4eebd2d0a78a67","-C","extra-filename=-0f4eebd2d0a78a67","--out-dir","/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","-L","dependency=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","--extern","pin_project=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libpin_project-df5ea42b8e7cee12.rmeta","--extern","tracing=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libtracing-b8ed56fffcd2e4ba.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libtracing_futures-0f4eebd2d0a78a67.rmeta"},"prelude":{"crate_id":{"name":"tracing_futures","disambiguator":[6077145254672182586,8535872987503531678]},"crate_root":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src","external_crates":[{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5454670041059415339,14778898676712446032]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17323693314265278435,11165935492680790011]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1758524798956620560,9236974138540026415]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":18,"id":{"name":"pin_project","disambiguator":[9454474957317680167,8191217402051710922]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":19,"id":{"name":"pin_project_internal","disambiguator":[9503423840931450044,11574535183330984720]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":20,"id":{"name":"tracing","disambiguator":[13993872455082217232,16562124698579085861]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":22,"id":{"name":"tracing_core","disambiguator":[11099356479621910520,18239274797054692367]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":23,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":24,"id":{"name":"tracing_attributes","disambiguator":[15393456623763710225,136235899873427685]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[10309433098055336058,16629781825217955551]}}],"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":0,"byte_end":23182,"line_start":1,"line_end":684,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":0,"byte_end":23182,"line_start":1,"line_end":684,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":54},{"krate":0,"index":98},{"krate":0,"index":95},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":68},{"krate":0,"index":101},{"krate":0,"index":145},{"krate":0,"index":142},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":115},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":44}],"decl_id":null,"docs":" Futures compatibility for [`tracing`].","sig":null,"attributes":[{"value":"/ Futures compatibility for [`tracing`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":0,"byte_end":42,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":43,"byte_end":46,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":47,"byte_end":61,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":62,"byte_end":65,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":66,"byte_end":139,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ structured, event-based diagnostic information. This crate provides utilities","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":140,"byte_end":221,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/ for using `tracing` to instrument asynchronous code written using futures and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":222,"byte_end":303,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/ async/await.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":304,"byte_end":320,"line_start":8,"line_end":8,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":321,"byte_end":324,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The crate provides the following traits:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":325,"byte_end":369,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":370,"byte_end":373,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`Instrument`] allows a `tracing` [span] to be attached to a future, sink,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":374,"byte_end":454,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/   stream, or executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":455,"byte_end":481,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":482,"byte_end":485,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * [`WithSubscriber`] allows a `tracing` [`Subscriber`] to be attached to a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":486,"byte_end":564,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   future, sink, stream, or executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":565,"byte_end":605,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":606,"byte_end":609,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Feature flags","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":610,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":630,"byte_end":633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate provides a number of feature flags that enable compatibility","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":634,"byte_end":709,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ features with other crates in the asynchronous ecosystem:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":710,"byte_end":771,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":772,"byte_end":775,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `tokio`: Enables compatibility with the `tokio` crate, including","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":776,"byte_end":846,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/    [`Instrument`] and [`WithSubscriber`] implementations for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":847,"byte_end":911,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/    `tokio::executor::Executor`, `tokio::runtime::Runtime`, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":912,"byte_end":978,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/    `tokio::runtime::current_thread`. Enabled by default.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":979,"byte_end":1039,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ - `tokio-executor`: Enables compatibility with the `tokio-executor`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1040,"byte_end":1111,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/    crate, including  [`Instrument`] and [`WithSubscriber`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1112,"byte_end":1174,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/    implementations for types implementing `tokio_executor::Executor`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1175,"byte_end":1248,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/    This is intended primarily for use in crates which depend on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1249,"byte_end":1316,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/    `tokio-executor` rather than `tokio`; in general the `tokio` feature","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1317,"byte_end":1392,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/    should be used instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1393,"byte_end":1423,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/ - `std-future`: Enables compatibility with `std::future::Future`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1424,"byte_end":1493,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ - `futures-01`: Enables compatibility with version 0.1.x of the [`futures`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1494,"byte_end":1573,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/   crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1574,"byte_end":1586,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/ - `futures-03`: Enables compatibility with version 0.3.x of the `futures`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1587,"byte_end":1664,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/   crate's `Spawn` and `LocalSpawn` traits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1665,"byte_end":1711,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ - `tokio-alpha`: Enables compatibility with `tokio` 0.2's alpha releases,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1712,"byte_end":1789,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/   including the `tokio` 0.2 `Executor` and `TypedExecutor` traits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1790,"byte_end":1860,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ - `std`: Depend on the Rust standard library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1861,"byte_end":1910,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1915,"byte_end":1993,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1994,"byte_end":1997,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":1998,"byte_end":2011,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2012,"byte_end":2032,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/   tracing-futures = { version = \"0.2.3\", default-features = false }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2033,"byte_end":2104,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/   ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2105,"byte_end":2114,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2115,"byte_end":2118,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The `tokio`, `std-future` and `std` features are enabled by default.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2119,"byte_end":2191,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2192,"byte_end":2195,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2196,"byte_end":2245,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"/ [span]: https://docs.rs/tracing/latest/tracing/span/index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2246,"byte_end":2312,"line_start":52,"line_end":52,"column_start":1,"column_end":67}},{"value":"/ [`Subscriber`]: https://docs.rs/tracing/latest/tracing/subscriber/index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2313,"byte_end":2393,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ [`Instrument`]: trait.Instrument.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2394,"byte_end":2435,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ [`WithSubscriber`]: trait.WithSubscriber.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2436,"byte_end":2485,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ [`futures`]: https://crates.io/crates/futures","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2486,"byte_end":2535,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":2601,"byte_end":3063,"line_start":58,"line_end":79,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/executor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/executor/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Implementations for `Instrument`ed future executors.\n","sig":null,"attributes":[{"value":"/ Implementations for `Instrument`ed future executors.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3367,"byte_end":3423,"line_start":93,"line_end":93,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3640,"byte_end":3650,"line_start":100,"line_end":100,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Extension trait allowing futures, streams, sinks, and executors to be\n instrumented with a `tracing` [span].","sig":null,"attributes":[{"value":"/ Extension trait allowing futures, streams, sinks, and executors to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3443,"byte_end":3516,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3517,"byte_end":3558,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3559,"byte_end":3562,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [span]: https://docs.rs/tracing/latest/tracing/span/index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3563,"byte_end":3629,"line_start":99,"line_end":99,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4572,"byte_end":4582,"line_start":129,"line_end":129,"column_start":8,"column_end":18},"name":"instrument","qualname":"::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Instruments this type with the provided `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided `Span`, returning an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3664,"byte_end":3728,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3733,"byte_end":3760,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3765,"byte_end":3768,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the instrumented type is a future, stream, or sink, the attached `Span`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3773,"byte_end":3851,"line_start":104,"line_end":104,"column_start":5,"column_end":83}},{"value":"/ will be [entered] every time it is polled. If the instrumented type","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3856,"byte_end":3927,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ is a future executor, every future spawned on that executor will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3932,"byte_end":4003,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/ instrumented by the attached `Span`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4008,"byte_end":4048,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4053,"byte_end":4056,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4061,"byte_end":4075,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4080,"byte_end":4083,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4088,"byte_end":4115,"line_start":111,"line_end":111,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4180,"byte_end":4198,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"/ use tracing_futures::Instrument;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4203,"byte_end":4239,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4244,"byte_end":4247,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4252,"byte_end":4274,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4279,"byte_end":4306,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4311,"byte_end":4325,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4330,"byte_end":4336,"line_start":120,"line_end":120,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4341,"byte_end":4344,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4349,"byte_end":4362,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4367,"byte_end":4420,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4425,"byte_end":4439,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4444,"byte_end":4451,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4456,"byte_end":4463,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4468,"byte_end":4471,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [entered]: https://docs.rs/tracing/latest/tracing/span/struct.Span.html#method.enter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4476,"byte_end":4564,"line_start":128,"line_end":128,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5878,"byte_end":5893,"line_start":166,"line_end":166,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] `Span`, returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] `Span`, returning an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4679,"byte_end":4744,"line_start":133,"line_end":133,"column_start":5,"column_end":70}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4749,"byte_end":4776,"line_start":134,"line_end":134,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4781,"byte_end":4784,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If the instrumented type is a future, stream, or sink, the attached `Span`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4789,"byte_end":4867,"line_start":136,"line_end":136,"column_start":5,"column_end":83}},{"value":"/ will be [entered] every time it is polled. If the instrumented type","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4872,"byte_end":4943,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ is a future executor, every future spawned on that executor will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":4948,"byte_end":5019,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ instrumented by the attached `Span`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5024,"byte_end":5064,"line_start":139,"line_end":139,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5069,"byte_end":5072,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5077,"byte_end":5155,"line_start":141,"line_end":141,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5160,"byte_end":5163,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5168,"byte_end":5182,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5187,"byte_end":5190,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5247,"byte_end":5265,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ use tracing_futures::Instrument;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5270,"byte_end":5306,"line_start":147,"line_end":147,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5311,"byte_end":5314,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5319,"byte_end":5341,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5346,"byte_end":5392,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5397,"byte_end":5427,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5432,"byte_end":5435,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5440,"byte_end":5450,"line_start":153,"line_end":153,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5455,"byte_end":5458,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5463,"byte_end":5487,"line_start":155,"line_end":155,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5492,"byte_end":5558,"line_start":156,"line_end":156,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5563,"byte_end":5577,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5582,"byte_end":5588,"line_start":158,"line_end":158,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5593,"byte_end":5636,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5641,"byte_end":5648,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5653,"byte_end":5660,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5665,"byte_end":5668,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [current]: https://docs.rs/tracing/latest/tracing/span/struct.Span.html#method.current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5673,"byte_end":5763,"line_start":163,"line_end":163,"column_start":5,"column_end":95}},{"value":"/ [entered]: https://docs.rs/tracing/latest/tracing/span/struct.Span.html#method.enter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5768,"byte_end":5856,"line_start":164,"line_end":164,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5861,"byte_end":5870,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6264,"byte_end":6278,"line_start":177,"line_end":177,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":20}],"decl_id":null,"docs":" Extension trait allowing futures, streams, and sinks to be instrumented with\n a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"/ Extension trait allowing futures, streams, and sinks to be instrumented with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":5974,"byte_end":6054,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ a `tracing` [`Subscriber`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6055,"byte_end":6086,"line_start":172,"line_end":172,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6087,"byte_end":6090,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: https://docs.rs/tracing/latest/tracing/subscriber/trait.Subscriber.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6091,"byte_end":6182,"line_start":174,"line_end":174,"column_start":1,"column_end":92}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6183,"byte_end":6206,"line_start":175,"line_end":175,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6906,"byte_end":6921,"line_start":188,"line_end":188,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6292,"byte_end":6358,"line_start":178,"line_end":178,"column_start":5,"column_end":71}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6363,"byte_end":6390,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6395,"byte_end":6398,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6403,"byte_end":6471,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/ subscriber will be set as the [default] while it is being polled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6476,"byte_end":6545,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ When the wrapped type is an executor, the subscriber will be set as the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6550,"byte_end":6625,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ default for any futures spawned on that executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6630,"byte_end":6683,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6688,"byte_end":6691,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: https://docs.rs/tracing/latest/tracing/subscriber/trait.Subscriber.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6696,"byte_end":6787,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6792,"byte_end":6898,"line_start":187,"line_end":187,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7871,"byte_end":7894,"line_start":212,"line_end":212,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n `WithDispatch` wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7121,"byte_end":7196,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ `WithDispatch` wrapper.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7201,"byte_end":7228,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7233,"byte_end":7236,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7241,"byte_end":7309,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ subscriber will be set as the [default] while it is being polled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7314,"byte_end":7383,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ When the wrapped type is an executor, the subscriber will be set as the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7388,"byte_end":7463,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ default for any futures spawned on that executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7468,"byte_end":7521,"line_start":204,"line_end":204,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7526,"byte_end":7529,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7534,"byte_end":7603,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ spawning a new future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7608,"byte_end":7634,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7639,"byte_end":7642,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: https://docs.rs/tracing/latest/tracing/subscriber/trait.Subscriber.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7647,"byte_end":7738,"line_start":209,"line_end":209,"column_start":5,"column_end":96}},{"value":"/ [default]: https://docs.rs/tracing/latest/tracing/dispatcher/index.html#setting-the-default-subscriber","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7743,"byte_end":7849,"line_start":210,"line_end":210,"column_start":5,"column_end":111}},{"value":"inline","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":7854,"byte_end":7863,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8240,"byte_end":8252,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"Instrumented","qualname":"::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":56}],"decl_id":null,"docs":" A future, stream, sink, or executor that has been instrumented with a `tracing` span.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8191,"byte_end":8202,"line_start":221,"line_end":221,"column_start":36,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8191,"byte_end":8202,"line_start":221,"line_end":221,"column_start":36,"column_end":47},"name":"__Instrumented","qualname":"::_::__Instrumented","value":"__Instrumented {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8646,"byte_end":8658,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"WithDispatch","qualname":"::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":103}],"decl_id":null,"docs":" A future, stream, sink, or executor that has been instrumented with a\n `tracing` subscriber.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8491,"byte_end":8514,"line_start":234,"line_end":234,"column_start":1,"column_end":24}},{"value":"pin(__private())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8597,"byte_end":8608,"line_start":236,"line_end":236,"column_start":36,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8597,"byte_end":8608,"line_start":236,"line_end":236,"column_start":36,"column_end":47},"name":"__WithDispatch","qualname":"::_::__WithDispatch","value":"__WithDispatch {  }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12444,"byte_end":12448,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12375,"byte_end":12432,"line_start":364,"line_end":364,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12574,"byte_end":12582,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12497,"byte_end":12562,"line_start":369,"line_end":369,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12684,"byte_end":12689,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12643,"byte_end":12672,"line_start":374,"line_end":374,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12785,"byte_end":12794,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12736,"byte_end":12773,"line_start":379,"line_end":379,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13005,"byte_end":13018,"line_start":387,"line_end":387,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12853,"byte_end":12900,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"std-future\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12905,"byte_end":12935,"line_start":385,"line_end":385,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13254,"byte_end":13267,"line_start":394,"line_end":394,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13094,"byte_end":13149,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"std-future\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13154,"byte_end":13184,"line_start":392,"line_end":392,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13466,"byte_end":13476,"line_start":401,"line_end":401,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13347,"byte_end":13407,"line_start":398,"line_end":398,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13412,"byte_end":13415,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13420,"byte_end":13454,"line_start":400,"line_end":400,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14700,"byte_end":14713,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"with_dispatch","qualname":"<WithDispatch<T>>::with_dispatch","value":"pub fn with_dispatch<U>(&Self, U) -> WithDispatch<U>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a future, stream, sink or executor with the same subscriber as this WithDispatch.\n","sig":null,"attributes":[{"value":"/ Wrap a future, stream, sink or executor with the same subscriber as this WithDispatch.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14598,"byte_end":14688,"line_start":436,"line_end":436,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14936,"byte_end":14944,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<WithDispatch<T>>::dispatch","value":"pub fn dispatch(&Self) -> &Dispatch","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Dispatch` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Dispatch` that this type is instrumented by.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14863,"byte_end":14924,"line_start":444,"line_end":444,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15153,"byte_end":15166,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<WithDispatch<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15001,"byte_end":15048,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"std-future\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15053,"byte_end":15083,"line_start":450,"line_end":450,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15402,"byte_end":15415,"line_start":459,"line_end":459,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<WithDispatch<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15242,"byte_end":15297,"line_start":456,"line_end":456,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"std-future\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15302,"byte_end":15332,"line_start":457,"line_end":457,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15536,"byte_end":15541,"line_start":464,"line_end":464,"column_start":12,"column_end":17},"name":"inner","qualname":"<WithDispatch<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15495,"byte_end":15524,"line_start":463,"line_end":463,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15637,"byte_end":15646,"line_start":469,"line_end":469,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WithDispatch<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15588,"byte_end":15625,"line_start":468,"line_end":468,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15777,"byte_end":15787,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithDispatch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `WithDispatch`, returning the wrapped type.\n","sig":null,"attributes":[{"value":"/ Consumes the `WithDispatch`, returning the wrapped type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":15705,"byte_end":15765,"line_start":473,"line_end":473,"column_start":5,"column_end":65}}]}],"impls":[{"id":10,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8894,"byte_end":8895,"line_start":248,"line_end":248,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":9058,"byte_end":9070,"line_start":252,"line_end":252,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12353,"byte_end":12365,"line_start":363,"line_end":363,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13576,"byte_end":13577,"line_start":407,"line_end":407,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14217,"byte_end":14229,"line_start":423,"line_end":423,"column_start":74,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14576,"byte_end":14588,"line_start":435,"line_end":435,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3432,"byte_end":3440,"line_start":94,"line_end":94,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":13}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":3652,"byte_end":3657,"line_start":100,"line_end":100,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":6280,"byte_end":6285,"line_start":177,"line_end":177,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":8894,"byte_end":8895,"line_start":248,"line_end":248,"column_start":31,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":23},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":9058,"byte_end":9070,"line_start":252,"line_end":252,"column_start":74,"column_end":86},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":12353,"byte_end":12365,"line_start":363,"line_end":363,"column_start":9,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":13576,"byte_end":13577,"line_start":407,"line_end":407,"column_start":35,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14217,"byte_end":14229,"line_start":423,"line_end":423,"column_start":74,"column_end":86},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-futures-0.2.4/src/lib.rs","byte_start":14576,"byte_end":14588,"line_start":435,"line_end":435,"column_start":9,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}}]}