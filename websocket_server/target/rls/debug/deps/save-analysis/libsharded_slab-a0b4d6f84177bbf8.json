{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9","program":"/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sharded_slab","--edition=2018","/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a0b4d6f84177bbf8","-C","extra-filename=-a0b4d6f84177bbf8","--out-dir","/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","-L","dependency=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","--extern","lazy_static=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/liblazy_static-d07addd12a8987b7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libsharded_slab-a0b4d6f84177bbf8.rmeta"},"prelude":{"crate_id":{"name":"sharded_slab","disambiguator":[17511336945600870961,1785173855429408700]},"crate_root":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src","external_crates":[{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5454670041059415339,14778898676712446032]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17323693314265278435,11165935492680790011]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1758524798956620560,9236974138540026415]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","num":18,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}}],"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":0,"byte_end":23266,"line_start":1,"line_end":658,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9696,"byte_end":9702,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":810},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9704,"byte_end":9717,"line_start":233,"line_end":233,"column_start":23,"column_end":36},"alias_span":null,"name":"DefaultConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9735,"byte_end":9740,"line_start":234,"line_end":234,"column_start":16,"column_end":21},"alias_span":null,"name":"Clear","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9757,"byte_end":9761,"line_start":235,"line_end":235,"column_start":16,"column_end":20},"alias_span":null,"name":"Pool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9763,"byte_end":9772,"line_start":235,"line_end":235,"column_start":22,"column_end":31},"alias_span":null,"name":"PoolGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":0,"byte_end":23266,"line_start":1,"line_end":658,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":370},{"krate":0,"index":454},{"krate":0,"index":468},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":579},{"krate":0,"index":598},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":973},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":668},{"krate":0,"index":673},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":706},{"krate":0,"index":712},{"krate":0,"index":718},{"krate":0,"index":723},{"krate":0,"index":728},{"krate":0,"index":739}],"decl_id":null,"docs":" A lock-free concurrent slab.","sig":null,"attributes":[{"value":"/ A lock-free concurrent slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Slabs provide pre-allocated storage for many instances of a single data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":37,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ type. When a large number of values of a single type are required,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":113,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ this can be more efficient than allocating each item individually. Since the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":184,"byte_end":264,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ allocated items are the same size, memory fragmentation is reduced, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":265,"byte_end":340,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ creating and removing new items can be very cheap.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":341,"byte_end":395,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":396,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This crate implements a lock-free concurrent slab, indexed by `usize`s.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":400,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":476,"byte_end":479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":480,"byte_end":492,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":493,"byte_end":496,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":497,"byte_end":538,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":539,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":543,"byte_end":554,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ sharded-slab = \"0.0.9\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":555,"byte_end":581,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":582,"byte_end":589,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":590,"byte_end":593,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This crate provides two  types, [`Slab`] and [`Pool`], which provide","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":594,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ slightly different APIs for using a sharded slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":667,"byte_end":720,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":721,"byte_end":724,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Slab`] implements a slab for _storing_ small types, sharing them between","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":725,"byte_end":803,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ threads, and accessing them by index. New entries are allocated by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":804,"byte_end":874,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ [inserting] data, moving it in by value. Similarly, entries may be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":875,"byte_end":945,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ deallocated by [taking] from the slab, moving the value out. This API is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":946,"byte_end":1022,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ similar to a `Vec<Option<T>>`, but allowing lock-free concurrent insertion","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1023,"byte_end":1101,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ and removal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1102,"byte_end":1118,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1119,"byte_end":1122,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In contrast, the [`Pool`] type provides an [object pool] style API for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1123,"byte_end":1197,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ _reusing storage_. Rather than constructing values and moving them into the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1198,"byte_end":1277,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ pool, as with [`Slab`], [allocating an entry][create] from the pool takes a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1278,"byte_end":1357,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closure that's provided with a mutable reference to initialize the entry in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1358,"byte_end":1437,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ place. When entries are deallocated, they are [cleared] in place. Types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1438,"byte_end":1513,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ which own a heap allocation can be cleared by dropping any _data_ they","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1514,"byte_end":1588,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ store, but retaining any previously-allocated capacity. This means that a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1589,"byte_end":1666,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ [`Pool`] may be used to reuse a set of existing heap allocations, reducing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1667,"byte_end":1745,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ allocator load.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1746,"byte_end":1765,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1766,"byte_end":1769,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Slab`]: struct.Slab.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1770,"byte_end":1800,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ [inserting]: struct.Slab.html#method.insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1801,"byte_end":1848,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [taking]: struct.Slab.html#method.take","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1849,"byte_end":1891,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ [`Pool`]: struct.Pool.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1892,"byte_end":1922,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/ [create]: struct.Pool.html#method.create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1923,"byte_end":1967,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/ [cleared]: trait.Clear.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":1968,"byte_end":1999,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ [object pool]: https://en.wikipedia.org/wiki/Object_pool_pattern","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2000,"byte_end":2068,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2069,"byte_end":2072,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2073,"byte_end":2087,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2088,"byte_end":2091,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Inserting an item into the slab, returning an index:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2092,"byte_end":2148,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2149,"byte_end":2160,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2161,"byte_end":2190,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let slab = Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2191,"byte_end":2218,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2219,"byte_end":2222,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2223,"byte_end":2273,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2274,"byte_end":2328,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2329,"byte_end":2336,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2337,"byte_end":2340,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To share a slab across threads, it may be wrapped in an `Arc`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2341,"byte_end":2407,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2408,"byte_end":2419,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2420,"byte_end":2449,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2450,"byte_end":2473,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/ let slab = Arc::new(Slab::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2474,"byte_end":2511,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2516,"byte_end":2545,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2546,"byte_end":2592,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/     let key = slab2.insert(\"hello from thread two\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2593,"byte_end":2658,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/     assert_eq!(slab2.get(key).unwrap(), \"hello from thread two\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2659,"byte_end":2728,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/     key","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2729,"byte_end":2740,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2741,"byte_end":2748,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let key1 = slab.insert(\"hello from thread one\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2753,"byte_end":2814,"line_start":71,"line_end":71,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(slab.get(key1).unwrap(), \"hello from thread one\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2815,"byte_end":2880,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Wait for thread 2 to complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2885,"byte_end":2922,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/ let key2 = thread2.join().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2923,"byte_end":2962,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2963,"byte_end":2966,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // The item inserted by thread 2 remains in the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":2967,"byte_end":3024,"line_start":77,"line_end":77,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(slab.get(key2).unwrap(), \"hello from thread two\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3025,"byte_end":3090,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3091,"byte_end":3097,"line_start":79,"line_end":79,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3098,"byte_end":3101,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ If items in the slab must be mutated, a `Mutex` or `RwLock` may be used for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3102,"byte_end":3181,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ each item, providing granular locking of items rather than of the slab:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3182,"byte_end":3257,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3258,"byte_end":3261,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3262,"byte_end":3273,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3274,"byte_end":3303,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ use std::sync::{Arc, Mutex};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3304,"byte_end":3336,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let slab = Arc::new(Slab::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3337,"byte_end":3374,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3375,"byte_end":3378,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ let key = slab.insert(Mutex::new(String::from(\"hello world\"))).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3379,"byte_end":3455,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3456,"byte_end":3459,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3460,"byte_end":3489,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3490,"byte_end":3536,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/     let hello = slab2.get(key).expect(\"item missing\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3537,"byte_end":3595,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/     let mut hello = hello.lock().expect(\"mutex poisoned\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3596,"byte_end":3658,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/     *hello = String::from(\"hello everyone!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3659,"byte_end":3708,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3709,"byte_end":3716,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3717,"byte_end":3720,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3721,"byte_end":3749,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3750,"byte_end":3753,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let hello = slab.get(key).expect(\"item missing\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3754,"byte_end":3807,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/ let mut hello = hello.lock().expect(\"mutex poisoned\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3808,"byte_end":3866,"line_start":101,"line_end":101,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(hello.as_str(), \"hello everyone!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3867,"byte_end":3917,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3918,"byte_end":3925,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3926,"byte_end":3929,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3930,"byte_end":3949,"line_start":105,"line_end":105,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3950,"byte_end":3953,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, several values used by the slab are calculated as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":3954,"byte_end":4032,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ constants. In order to allow users to tune the slab's parameters, we provide","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4033,"byte_end":4113,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ a [`Config`] trait which defines these parameters as associated `consts`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4114,"byte_end":4191,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ The `Slab` type is generic over a `C: Config` parameter.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4192,"byte_end":4252,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4253,"byte_end":4256,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Config`]: trait.Config.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4257,"byte_end":4290,"line_start":112,"line_end":112,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4291,"byte_end":4294,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Comparison with Similar Crates","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4295,"byte_end":4331,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4332,"byte_end":4335,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ - [`slab`]: Carl Lerche's `slab` crate provides a slab implementation with a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4336,"byte_end":4416,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/   similar API, implemented by storing all data in a single vector.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4417,"byte_end":4487,"line_start":117,"line_end":117,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4488,"byte_end":4491,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/   Unlike `sharded_slab`, inserting and removing elements from the slab","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4492,"byte_end":4566,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/   requires  mutable access. This means that if the slab is accessed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4567,"byte_end":4638,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/   concurrently by multiple threads, it is necessary for it to be protected","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4639,"byte_end":4717,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/   by a `Mutex` or `RwLock`. Items may not be inserted or removed (or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4718,"byte_end":4790,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/   accessed, if a `Mutex` is used) concurrently, even when they are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4791,"byte_end":4861,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"/   unrelated. In many cases, the lock can become a significant bottleneck. On","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4862,"byte_end":4942,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/   the other hand, this crate allows separate indices in the slab to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":4943,"byte_end":5017,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/   accessed, inserted, and removed concurrently without requiring a global","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5018,"byte_end":5095,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/   lock. Therefore, when the slab is shared across multiple threads, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5096,"byte_end":5172,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/   crate offers significantly better performance than `slab`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5173,"byte_end":5237,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5238,"byte_end":5241,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/   However, the lock free slab introduces some additional constant-factor","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5242,"byte_end":5318,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/   overhead. This means that in use-cases where a slab is _not_ shared by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5319,"byte_end":5395,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/   multiple threads and locking is not required, this crate will likely offer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5396,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/   slightly worse performance.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5477,"byte_end":5510,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5511,"byte_end":5514,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/   In summary: `sharded-slab` offers significantly improved performance in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5515,"byte_end":5592,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/   concurrent use-cases, while `slab` should be preferred in single-threaded","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5593,"byte_end":5672,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/   use-cases.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5673,"byte_end":5689,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5690,"byte_end":5693,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/loom","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5694,"byte_end":5737,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5738,"byte_end":5741,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Safety and Correctness","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5742,"byte_end":5770,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5771,"byte_end":5774,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Most implementations of lock-free data structures in Rust require some","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5775,"byte_end":5849,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ amount of unsafe code, and this crate is not an exception. In order to catch","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5850,"byte_end":5930,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ potential bugs in this unsafe code, we make use of [`loom`], a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5931,"byte_end":5997,"line_start":145,"line_end":145,"column_start":1,"column_end":67}},{"value":"/ permutation-testing tool for concurrent Rust programs. All `unsafe` blocks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":5998,"byte_end":6076,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ this crate occur in accesses to `loom` `UnsafeCell`s. This means that when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6077,"byte_end":6155,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ those accesses occur in this crate's tests, `loom` will assert that they are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6156,"byte_end":6236,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ valid under the C11 memory model across multiple permutations of concurrent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6237,"byte_end":6316,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ executions of those tests.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6317,"byte_end":6347,"line_start":150,"line_end":150,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6348,"byte_end":6351,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ In order to guard against the [ABA problem][aba], this crate makes use of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6352,"byte_end":6429,"line_start":152,"line_end":152,"column_start":1,"column_end":78}},{"value":"/ _generational indices_. Each slot in the slab tracks a generation counter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6430,"byte_end":6507,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ which is incremented every time a value is inserted into that slot, and the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6508,"byte_end":6587,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/ indices returned by [`Slab::insert`] include the generation of the slot when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6588,"byte_end":6668,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"/ the value was inserted, packed into the high-order bits of the index. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6669,"byte_end":6747,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ ensures that if a value is inserted, removed,  and a new value is inserted","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6748,"byte_end":6826,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ into the same slot in the slab, the key returned by the first call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6827,"byte_end":6900,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/ `insert` will not map to the new value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6901,"byte_end":6944,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6945,"byte_end":6948,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Since a fixed number of bits are set aside to use for storing the generation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":6949,"byte_end":7029,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ counter, the counter will wrap  around after being incremented a number of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7030,"byte_end":7108,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ times. To avoid situations where a returned index lives long enough to see the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7109,"byte_end":7191,"line_start":163,"line_end":163,"column_start":1,"column_end":83}},{"value":"/ generation counter wrap around to the same value, it is good to be fairly","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7192,"byte_end":7269,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ generous when configuring the allocation of index bits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7270,"byte_end":7329,"line_start":165,"line_end":165,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7330,"byte_end":7333,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`loom`]: https://crates.io/crates/loom","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7334,"byte_end":7377,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/ [aba]: https://en.wikipedia.org/wiki/ABA_problem","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7378,"byte_end":7430,"line_start":168,"line_end":168,"column_start":1,"column_end":53}},{"value":"/ [`Slab::insert`]: struct.Slab.html#method.insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7431,"byte_end":7483,"line_start":169,"line_end":169,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7484,"byte_end":7487,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7488,"byte_end":7505,"line_start":171,"line_end":171,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7506,"byte_end":7509,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ These graphs were produced by [benchmarks] of the sharded slab implementation,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7510,"byte_end":7592,"line_start":173,"line_end":173,"column_start":1,"column_end":83}},{"value":"/ using the [`criterion`] crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7593,"byte_end":7627,"line_start":174,"line_end":174,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7628,"byte_end":7631,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The first shows the results of a benchmark where an increasing number of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7632,"byte_end":7708,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ items are inserted and then removed into a slab concurrently by five","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7709,"byte_end":7781,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ threads. It compares the performance of the sharded slab implementation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7782,"byte_end":7857,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ with a `RwLock<slab::Slab>`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7858,"byte_end":7890,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7891,"byte_end":7894,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ <img width=\"1124\" alt=\"Screen Shot 2019-10-01 at 5 09 49 PM\" src=\"https://user-images.githubusercontent.com/2796466/66078398-cd6c9f80-e516-11e9-9923-0ed6292e8498.png\">","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":7895,"byte_end":8066,"line_start":181,"line_end":181,"column_start":1,"column_end":172}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8067,"byte_end":8070,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ The second graph shows the results of a benchmark where an increasing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8071,"byte_end":8144,"line_start":183,"line_end":183,"column_start":1,"column_end":74}},{"value":"/ number of items are inserted and then removed by a _single_ thread. It","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8145,"byte_end":8219,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ compares the performance of the sharded slab implementation with an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8220,"byte_end":8291,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ `RwLock<slab::Slab>` and a `mut slab::Slab`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8292,"byte_end":8340,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8341,"byte_end":8344,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ <img width=\"925\" alt=\"Screen Shot 2019-10-01 at 5 13 45 PM\" src=\"https://user-images.githubusercontent.com/2796466/66078469-f0974f00-e516-11e9-95b5-f65f0aa7e494.png\">","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8345,"byte_end":8515,"line_start":188,"line_end":188,"column_start":1,"column_end":171}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8516,"byte_end":8519,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ These benchmarks demonstrate that, while the sharded approach introduces","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8520,"byte_end":8596,"line_start":190,"line_end":190,"column_start":1,"column_end":77}},{"value":"/ a small constant-factor overhead, it offers significantly better","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8597,"byte_end":8665,"line_start":191,"line_end":191,"column_start":1,"column_end":69}},{"value":"/ performance across concurrent accesses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8666,"byte_end":8709,"line_start":192,"line_end":192,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8710,"byte_end":8713,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ [benchmarks]: https://github.com/hawkw/sharded-slab/blob/master/benches/bench.rs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8714,"byte_end":8798,"line_start":194,"line_end":194,"column_start":1,"column_end":85}},{"value":"/ [`criterion`]: https://crates.io/crates/criterion","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8799,"byte_end":8852,"line_start":195,"line_end":195,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8853,"byte_end":8856,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Implementation Notes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8857,"byte_end":8883,"line_start":197,"line_end":197,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8884,"byte_end":8887,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ See [this page](implementation/index.html) for details on this crate's design","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8888,"byte_end":8969,"line_start":199,"line_end":199,"column_start":1,"column_end":82}},{"value":"/ and implementation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8970,"byte_end":8993,"line_start":200,"line_end":200,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":8994,"byte_end":8997,"line_start":201,"line_end":201,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24643,"byte_end":24648,"line_start":24,"line_end":24,"column_start":11,"column_end":16},"name":"Clear","qualname":"::clear::Clear","value":"Clear","parent":null,"children":[{"krate":0,"index":12}],"decl_id":null,"docs":" Trait implemented by types which can be cleared in place, retaining any\n allocated memory.","sig":null,"attributes":[{"value":"/ Trait implemented by types which can be cleared in place, retaining any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23320,"byte_end":23395,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ allocated memory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23396,"byte_end":23417,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23418,"byte_end":23421,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is essentially a generalization of methods on standard library","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23422,"byte_end":23493,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection types, including as [`Vec::clear`], [`String::clear`], and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23494,"byte_end":23567,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ [`HashMap::clear`]. These methods drop all data stored in the collection,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23568,"byte_end":23645,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ but retain the collection's heap allocation for future use. Types such as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23646,"byte_end":23723,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ `BTreeMap`, whose `clear` methods drops allocations, should not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23724,"byte_end":23791,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ implement this trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23792,"byte_end":23817,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23818,"byte_end":23821,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When implemented for types which do not own a heap allocation, `Clear`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23822,"byte_end":23896,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ should reset the type in place if possible. If the type has an empty state","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23897,"byte_end":23975,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ or stores `Option`s, those values should be reset to the empty state. For","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":23976,"byte_end":24053,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ \"plain old data\" types, which hold no pointers to other data and do not have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24054,"byte_end":24134,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ an empty or initial state, it's okay for a `Clear` implementation to be a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24135,"byte_end":24212,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ no-op. In that case, it essentially serves as a marker indicating that the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24213,"byte_end":24291,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ type may be reused to store new data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24292,"byte_end":24333,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24334,"byte_end":24337,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Vec::clear`]: https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.clear","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24338,"byte_end":24427,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ [`String::clear`]: https://doc.rust-lang.org/stable/std/string/struct.String.html#method.clear","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24428,"byte_end":24526,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`HashMap::clear`]: https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html#method.clear","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24527,"byte_end":24632,"line_start":23,"line_end":23,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24727,"byte_end":24732,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"clear","qualname":"::clear::Clear::clear","value":"pub fn clear(&mut Self)","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Clear all data in `self`, retaining the allocated capacithy.\n","sig":null,"attributes":[{"value":"/ Clear all data in `self`, retaining the allocated capacithy.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24655,"byte_end":24719,"line_start":25,"line_end":25,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"implementation","qualname":"::implementation","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","parent":null,"children":[],"decl_id":null,"docs":" Notes on `sharded-slab`'s implementation and design.","sig":null,"attributes":[{"value":"/ Notes on `sharded-slab`'s implementation and design.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":25932,"byte_end":25988,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":25989,"byte_end":25992,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":25993,"byte_end":26005,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26006,"byte_end":26009,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The sharded slab's design is strongly inspired by the ideas presented by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26010,"byte_end":26086,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ Leijen, Zorn, and de Moura in [Mimalloc: Free List Sharding in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26087,"byte_end":26153,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ Action][mimalloc]. In this report, the authors present a novel design for a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26154,"byte_end":26233,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ memory allocator based on a concept of _free list sharding_.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26234,"byte_end":26298,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26299,"byte_end":26302,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Memory allocators must keep track of what memory regions are not currently","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26303,"byte_end":26381,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ allocated (\"free\") in order to provide them to future allocation requests.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26382,"byte_end":26460,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ The term [_free list_][freelist] refers to a technique for performing this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26461,"byte_end":26539,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ bookkeeping, where each free block stores a pointer to the next free block,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26540,"byte_end":26619,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ forming a linked list. The memory allocator keeps a pointer to the most","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26620,"byte_end":26695,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ recently freed block, the _head_ of the free list. To allocate more memory,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26696,"byte_end":26775,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the allocator pops from the free list by setting the head pointer to the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26776,"byte_end":26852,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ next free block of the current head block, and returning the previous head.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26853,"byte_end":26932,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ To deallocate a block, the block is pushed to the free list by setting its","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":26933,"byte_end":27011,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ first word to the current head pointer, and the head pointer is set to point","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27012,"byte_end":27092,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ to the deallocated block. Most implementations of slab allocators backed by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27093,"byte_end":27172,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ arrays or vectors use a similar technique, where pointers are replaced by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27173,"byte_end":27250,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ indices into the backing array.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27251,"byte_end":27286,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27287,"byte_end":27290,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When allocations and deallocations can occur concurrently across threads,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27291,"byte_end":27368,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ they must synchronize accesses to the free list; either by putting the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27369,"byte_end":27443,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ entire allocator state inside of a lock, or by using atomic operations to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27444,"byte_end":27521,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ treat the free list as a lock-free structure (such as a Treiber stack). In","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27522,"byte_end":27600,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ both cases, there is a significant performance cost — even when the free","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27601,"byte_end":27679,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ list is lock-free, it is likely that a noticeable amount of time will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27680,"byte_end":27756,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ spent in compare-and-swap loops. Ideally, the global synchronzation point","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27757,"byte_end":27834,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ created by the single global free list could be avoided as much as possible.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27835,"byte_end":27915,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27916,"byte_end":27919,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The approach presented by Leijen, Zorn, and de Moura is to introduce","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27920,"byte_end":27992,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ sharding and thus increase the granularity of synchronization significantly.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":27993,"byte_end":28073,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ In mimalloc, the heap is _sharded_ so that each thread has its own","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28074,"byte_end":28144,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ thread-local heap. Objects are always allocated from the local heap of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28145,"byte_end":28223,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ thread where the allocation is performed. Because allocations are always","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28224,"byte_end":28300,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ done from a thread's local heap, they need not be synchronized.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28301,"byte_end":28368,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28369,"byte_end":28372,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ However, since objects can move between threads before being deallocated,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28373,"byte_end":28450,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ _deallocations_ may still occur concurrently. Therefore, Leijen et al.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28451,"byte_end":28525,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ introduce a concept of _local_ and _global_ free lists. When an object is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28526,"byte_end":28603,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ deallocated on the same thread it was originally allocated on, it is placed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28604,"byte_end":28683,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ on the local free list; if it is deallocated on another thread, it goes on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28684,"byte_end":28762,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ the global free list for the heap of the thread from which it originated. To","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28763,"byte_end":28843,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ allocate, the local free list is used first; if it is empty, the entire","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28844,"byte_end":28919,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ global free list is popped onto the local free list. Since the local free","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28920,"byte_end":28997,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ list is only ever accessed by the thread it belongs to, it does not require","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":28998,"byte_end":29077,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ synchronization at all, and because the global free list is popped from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29078,"byte_end":29153,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ infrequently, the cost of synchronization has a reduced impact. A majority","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29154,"byte_end":29232,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ of allocations can occur without any synchronization at all; and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29233,"byte_end":29301,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/ deallocations only require synchronization when an object has left its","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29302,"byte_end":29376,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ parent thread (a relatively uncommon case).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29377,"byte_end":29424,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29425,"byte_end":29428,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [mimalloc]: https://www.microsoft.com/en-us/research/uploads/prod/2019/06/mimalloc-tr-v1.pdf","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29429,"byte_end":29525,"line_start":58,"line_end":58,"column_start":1,"column_end":97}},{"value":"/ [freelist]: https://en.wikipedia.org/wiki/Free_list","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29526,"byte_end":29581,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29582,"byte_end":29585,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29586,"byte_end":29606,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29607,"byte_end":29610,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A slab is represented as an array of [`MAX_THREADS`] _shards_. A shard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29611,"byte_end":29685,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ consists of a vector of one or more _pages_ plus associated metadata.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29686,"byte_end":29759,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ Finally, a page consists of an array of _slots_, head indices for the local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29760,"byte_end":29839,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ and remote free lists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29840,"byte_end":29866,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ ```text","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29867,"byte_end":29878,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ ┌─────────────┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29879,"byte_end":29928,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ │ shard 1     │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29929,"byte_end":29952,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/ │             │    ┌─────────────┐        ┌────────┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":29953,"byte_end":30063,"line_start":70,"line_end":70,"column_start":1,"column_end":57}},{"value":"/ │ pages───────┼───▶│ page 1      │        │        │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30064,"byte_end":30154,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/ ├─────────────┤    ├─────────────┤  ┌────▶│  next──┼─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30155,"byte_end":30297,"line_start":72,"line_end":72,"column_start":1,"column_end":59}},{"value":"/ │ shard 2     │    │ page 2      │  │     ├────────┤ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30298,"byte_end":30388,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/ ├─────────────┤    │             │  │     │XXXXXXXX│ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30389,"byte_end":30489,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"/ │ shard 3     │    │ local_head──┼──┘     ├────────┤ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30490,"byte_end":30588,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/ └─────────────┘    │ remote_head─┼──┐     │        │◀┘","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30589,"byte_end":30697,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/       ...          ├─────────────┤  │     │  next──┼─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30698,"byte_end":30800,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/ ┌─────────────┐    │   page 3    │  │     ├────────┤ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30801,"byte_end":30917,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"/ │ shard n     │    └─────────────┘  │     │XXXXXXXX│ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":30918,"byte_end":31018,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ └─────────────┘          ...        │     ├────────┤ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31019,"byte_end":31131,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/                    ┌─────────────┐  │     │XXXXXXXX│ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31132,"byte_end":31228,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/                    │ page n      │  │     ├────────┤ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31229,"byte_end":31315,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/                    └─────────────┘  │     │        │◀┘","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31316,"byte_end":31414,"line_start":83,"line_end":83,"column_start":1,"column_end":59}},{"value":"/                                     └────▶│  next──┼───▶  ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31415,"byte_end":31508,"line_start":84,"line_end":84,"column_start":1,"column_end":66}},{"value":"/                                           ├────────┤","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31509,"byte_end":31585,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/                                           │XXXXXXXX│","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31586,"byte_end":31646,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/                                           └────────┘","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31647,"byte_end":31723,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31724,"byte_end":31731,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31732,"byte_end":31735,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The size of the first page in a shard is always a power of two, and every","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31736,"byte_end":31813,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ subsequent page added after the first is twice as large as the page that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31814,"byte_end":31890,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ preceeds it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31891,"byte_end":31907,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ ```text","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31908,"byte_end":31919,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31920,"byte_end":31923,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/  pg.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31924,"byte_end":31932,"line_start":95,"line_end":95,"column_start":1,"column_end":9}},{"value":"/ ┌───┐   ┌─┬─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31933,"byte_end":31970,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ │ 0 │───▶ │ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":31971,"byte_end":32004,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/ ├───┤   ├─┼─┼─┬─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32005,"byte_end":32054,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/ │ 1 │───▶ │ │ │ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32055,"byte_end":32096,"line_start":99,"line_end":99,"column_start":1,"column_end":22}},{"value":"/ ├───┤   ├─┼─┼─┼─┼─┬─┬─┬─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32097,"byte_end":32170,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/ │ 2 │───▶ │ │ │ │ │ │ │ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32171,"byte_end":32228,"line_start":101,"line_end":101,"column_start":1,"column_end":30}},{"value":"/ ├───┤   ├─┼─┼─┼─┼─┼─┼─┼─┼─┬─┬─┬─┬─┬─┬─┬─┐","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32229,"byte_end":32350,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/ │ 3 │───▶ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32351,"byte_end":32440,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ └───┘   └─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┘","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32441,"byte_end":32562,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32563,"byte_end":32570,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ When searching for a free slot, the smallest page is searched first, and if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32571,"byte_end":32650,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ it is full, the search proceeds to the next page until either a free slot is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32651,"byte_end":32731,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"/ found or all available pages have been searched. If all available pages have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32732,"byte_end":32812,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ been searched and the maximum number of pages has not yet been reached, a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32813,"byte_end":32890,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ new page is then allocated.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32891,"byte_end":32922,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32923,"byte_end":32926,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Since every page is twice as large as the previous page, and all page sizes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":32927,"byte_end":33006,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ are powers of two, we can determine the page index that contains a given","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33007,"byte_end":33083,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ address by shifting the address down by the smallest page size and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33084,"byte_end":33154,"line_start":114,"line_end":114,"column_start":1,"column_end":71}},{"value":"/ looking at how many twos places necessary to represent that number,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33155,"byte_end":33226,"line_start":115,"line_end":115,"column_start":1,"column_end":72}},{"value":"/ telling us what power of two page size it fits inside of. We can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33227,"byte_end":33295,"line_start":116,"line_end":116,"column_start":1,"column_end":69}},{"value":"/ determine the number of twos places by counting the number of leading","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33296,"byte_end":33369,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/ zeros (unused twos places) in the number's binary representation, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33370,"byte_end":33443,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ subtracting that count from the total number of bits in a word.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33444,"byte_end":33511,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33512,"byte_end":33515,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The formula for determining the page number that contains an offset is thus:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33516,"byte_end":33596,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33597,"byte_end":33615,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ WIDTH - ((offset + INITIAL_PAGE_SIZE) >> INDEX_SHIFT).leading_zeros()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33616,"byte_end":33689,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33690,"byte_end":33697,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ where `WIDTH` is the number of bits in a `usize`, and `INDEX_SHIFT` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33698,"byte_end":33772,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33773,"byte_end":33791,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ INITIAL_PAGE_SIZE.trailing_zeros() + 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33792,"byte_end":33835,"line_start":127,"line_end":127,"column_start":1,"column_end":44}},{"value":"/```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33836,"byte_end":33842,"line_start":128,"line_end":128,"column_start":1,"column_end":7}},{"value":"/[`MAX_THREADS`]: ../trait.Config.html#associatedconstant.MAX_THREADS","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/implementation.rs","byte_start":33843,"byte_end":33914,"line_start":129,"line_end":129,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75689,"byte_end":75693,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"Pool","qualname":"::pool::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"decl_id":null,"docs":" A lock-free concurrent object pool.","sig":null,"attributes":[{"value":"/ A lock-free concurrent object pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73367,"byte_end":73406,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73407,"byte_end":73410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Slabs provide pre-allocated storage for many instances of a single type. But, when working with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73411,"byte_end":73510,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ heap allocated objects, the advantages of a slab are lost, as the memory allocated for the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73511,"byte_end":73605,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ object is freed when the object is removed from the slab. With a pool, we can instead reuse","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73606,"byte_end":73701,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ this memory for objects being added to the pool in the future, therefore reducing memory","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73702,"byte_end":73794,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ fragmentation and avoiding additional allocations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73795,"byte_end":73849,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73850,"byte_end":73853,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type implements a lock-free concurrent pool, indexed by `usize`s. The items stored in this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73854,"byte_end":73953,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ type need to implement [`Clear`] and `Default`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":73954,"byte_end":74005,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74006,"byte_end":74009,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `Pool` type shares similar semantics to [`Slab`] when it comes to sharing across threads","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74010,"byte_end":74106,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ and storing mutable shared data. The biggest difference is there are no [`Slab::insert`] and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74107,"byte_end":74203,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ [`Slab::take`] analouges for the `Pool` type. Instead new items are added to the pool by using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74204,"byte_end":74302,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ the [`Pool::create`] method, and marked for clearing by the [`Pool::clear`] method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74303,"byte_end":74390,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74391,"byte_end":74394,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74395,"byte_end":74409,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74410,"byte_end":74413,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Add an entry to the pool, returning an index:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74414,"byte_end":74463,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74464,"byte_end":74471,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74472,"byte_end":74501,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74502,"byte_end":74543,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74544,"byte_end":74547,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let key = pool.create(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74548,"byte_end":74620,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74621,"byte_end":74689,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74690,"byte_end":74697,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74698,"byte_end":74701,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Pool entries can be cleared either by manually calling [`Pool::clear`]. This marks the entry to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74702,"byte_end":74801,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ be cleared when the guards referencing to it are dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74802,"byte_end":74863,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74864,"byte_end":74871,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74872,"byte_end":74901,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74902,"byte_end":74943,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74944,"byte_end":74947,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let key = pool.create(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":74948,"byte_end":75020,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75021,"byte_end":75024,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Mark this entry to be cleared.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75025,"byte_end":75062,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/ pool.clear(key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75063,"byte_end":75083,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75084,"byte_end":75087,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // The cleared entry is no longer available in the pool","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75088,"byte_end":75147,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/ assert!(pool.get(key).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75148,"byte_end":75185,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75186,"byte_end":75193,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ # Configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75194,"byte_end":75213,"line_start":52,"line_end":52,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75214,"byte_end":75217,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Both `Pool` and [`Slab`] share the same configuration mechanism. See [crate level documentation][config-doc]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75218,"byte_end":75330,"line_start":54,"line_end":54,"column_start":1,"column_end":113}},{"value":"/ for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75331,"byte_end":75352,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75353,"byte_end":75356,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Slab::take`]: ../struct.Slab.html#method.take","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75357,"byte_end":75408,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"/ [`Slab::insert`]: ../struct.Slab.html#method.insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75409,"byte_end":75464,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/ [`Pool::create`]: struct.Pool.html#method.create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75465,"byte_end":75517,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ [`Pool::clear`]: struct.Pool.html#method.clear","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75518,"byte_end":75568,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ [config-doc]: ../index.html#configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75569,"byte_end":75614,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/ [`Clear`]: trait.Clear.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75615,"byte_end":75646,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ [`Slab`]: struct.Slab.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75647,"byte_end":75677,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75888,"byte_end":75891,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76027,"byte_end":76042,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<Pool<T>>::new_with_config","value":"pub fn new_with_config<C: cfg::Config>() -> Pool<T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Pool` with the provided configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new `Pool` with the provided configuration parameters.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75947,"byte_end":76015,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76567,"byte_end":76576,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"PoolGuard","qualname":"::pool::PoolGuard","value":"PoolGuard {  }","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400}],"decl_id":null,"docs":" A guard that allows access to an object in a pool.","sig":null,"attributes":[{"value":"/ A guard that allows access to an object in a pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76252,"byte_end":76306,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76307,"byte_end":76310,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the pool that the item the guard references is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76311,"byte_end":76401,"line_start":94,"line_end":94,"column_start":1,"column_end":91}},{"value":"/ currently being accessed. If the item is removed from the pool while the guard exists, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76402,"byte_end":76496,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ removal will be deferred until all guards are dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76497,"byte_end":76555,"line_start":96,"line_end":96,"column_start":1,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":404},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77463,"byte_end":77472,"line_start":125,"line_end":125,"column_start":15,"column_end":24},"name":"USED_BITS","qualname":"::pool::Pool::<T, C>::USED_BITS","value":"usize","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":" The number of bits in each index which are used by the pool.","sig":null,"attributes":[{"value":"/ The number of bits in each index which are used by the pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76804,"byte_end":76868,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76873,"byte_end":76876,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If other data is packed into the `usize` indices returned by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76881,"byte_end":76945,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/ [`Pool::create`], user code is free to use any bits higher than the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76950,"byte_end":77021,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ `USED_BITS`-th bit freely.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77026,"byte_end":77056,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77061,"byte_end":77064,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is determined by the [`Config`] type that configures the pool's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77069,"byte_end":77141,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ parameters. By default, all bits are used; this can be changed by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77146,"byte_end":77215,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ overriding the [`Config::RESERVED_BITS`][res] constant.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77220,"byte_end":77279,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77284,"byte_end":77287,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`Config`]: trait.Config.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77292,"byte_end":77325,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/ [res]: trait.Config.html#associatedconstant.RESERVED_BITS","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77330,"byte_end":77391,"line_start":123,"line_end":123,"column_start":5,"column_end":66}},{"value":"/ [`Slab::insert`]: struct.Slab.html#method.insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77396,"byte_end":77448,"line_start":124,"line_end":124,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78073,"byte_end":78079,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"create","qualname":"<Pool<T, C>>::create","value":"pub fn create<impl FnOnce(&mut T): FnOnce(&mut T) ->\n              ()>(&Self, impl FnOnce(&mut T)) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object in the pool, returning a key that can be used to access it.","sig":null,"attributes":[{"value":"/ Creates a new object in the pool, returning a key that can be used to access it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77501,"byte_end":77585,"line_start":127,"line_end":127,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77590,"byte_end":77593,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread is full and no items","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77598,"byte_end":77693,"line_start":129,"line_end":129,"column_start":5,"column_end":100}},{"value":"/ can be added until some are removed, or the maximum number of shards has been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77698,"byte_end":77788,"line_start":130,"line_end":130,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77793,"byte_end":77796,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77801,"byte_end":77815,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77820,"byte_end":77831,"line_start":133,"line_end":133,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77836,"byte_end":77865,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77870,"byte_end":77911,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/ let key = pool.create(|item| item.push_str(\"Hello\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77916,"byte_end":77982,"line_start":136,"line_end":136,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"Hello\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":77987,"byte_end":78049,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78054,"byte_end":78061,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79070,"byte_end":79073,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"get","qualname":"<Pool<T, C>>::get","value":"pub fn get(&Self, usize) -> Option<PoolGuard<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key.","sig":null,"attributes":[{"value":"/ Return a reference to the value associated with the given key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78533,"byte_end":78599,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78604,"byte_end":78607,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If the pool does not contain a value for the given key, `None` is returned instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78612,"byte_end":78699,"line_start":153,"line_end":153,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78704,"byte_end":78707,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78712,"byte_end":78726,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78731,"byte_end":78734,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78739,"byte_end":78750,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78755,"byte_end":78784,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = sharded_slab::Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78789,"byte_end":78844,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ let key = pool.create(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78849,"byte_end":78921,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78926,"byte_end":78929,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":78934,"byte_end":79002,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ assert!(pool.get(12345).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79007,"byte_end":79046,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79051,"byte_end":79058,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80778,"byte_end":80783,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"clear","qualname":"<Pool<T, C>>::clear","value":"pub fn clear(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value using the storage associated with the given key from the pool, returning\n `true` if the value was removed.","sig":null,"attributes":[{"value":"/ Remove the value using the storage associated with the given key from the pool, returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79401,"byte_end":79494,"line_start":175,"line_end":175,"column_start":5,"column_end":98}},{"value":"/ `true` if the value was removed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79499,"byte_end":79535,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79540,"byte_end":79543,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method does _not_ block the current thread until the value can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79548,"byte_end":79622,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ cleared. Instead, if another thread is currently accessing that value, this marks it to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79627,"byte_end":79721,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ cleared by that thread when it is done accessing that value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79726,"byte_end":79790,"line_start":180,"line_end":180,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79795,"byte_end":79798,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79803,"byte_end":79817,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79822,"byte_end":79825,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79830,"byte_end":79841,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79846,"byte_end":79875,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79880,"byte_end":79921,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ let key = pool.create(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":79926,"byte_end":79998,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80003,"byte_end":80006,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80011,"byte_end":80079,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80084,"byte_end":80087,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ pool.clear(key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80092,"byte_end":80112,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/ assert!(pool.get(key).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80117,"byte_end":80154,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80159,"byte_end":80166,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80171,"byte_end":80174,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80179,"byte_end":80186,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80191,"byte_end":80220,"line_start":196,"line_end":196,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80225,"byte_end":80266,"line_start":197,"line_end":197,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80271,"byte_end":80274,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let key = pool.create(|item| item.push_str(\"Hello world!\")).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80279,"byte_end":80352,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80357,"byte_end":80360,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that doesn't exist in the `Pool` will return `false`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80365,"byte_end":80439,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pool.clear(key + 69420), false);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80444,"byte_end":80491,"line_start":202,"line_end":202,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80496,"byte_end":80499,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that does exist returns `true`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80504,"byte_end":80556,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/ assert!(pool.clear(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80561,"byte_end":80590,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80595,"byte_end":80598,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that has previously been cleared will return `false`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80603,"byte_end":80677,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pool.clear(key), false);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80682,"byte_end":80721,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80726,"byte_end":80733,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ [`clear`]: #method.clear","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":80738,"byte_end":80766,"line_start":210,"line_end":210,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81967,"byte_end":81970,"line_start":268,"line_end":268,"column_start":12,"column_end":15},"name":"key","qualname":"<PoolGuard>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access this guard\n","sig":null,"attributes":[{"value":"/ Returns the key used to access this guard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81910,"byte_end":81955,"line_start":267,"line_end":267,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":547},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88149,"byte_end":88155,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Config","qualname":"::cfg::Config","value":"Config: Sized","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Configuration parameters which can be overridden to tune the behavior of a slab.\n","sig":null,"attributes":[{"value":"/ Configuration parameters which can be overridden to tune the behavior of a slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88054,"byte_end":88138,"line_start":7,"line_end":7,"column_start":1,"column_end":85}}]},{"kind":"Const","id":{"krate":0,"index":548},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88546,"byte_end":88557,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"MAX_THREADS","qualname":"::cfg::Config::MAX_THREADS","value":"usize","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" The maximum number of threads which can access the slab.","sig":null,"attributes":[{"value":"/ The maximum number of threads which can access the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88169,"byte_end":88229,"line_start":9,"line_end":9,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88234,"byte_end":88237,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ This value (rounded to a power of two) determines the number of shards","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88242,"byte_end":88316,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ in the slab. If a thread is created, accesses the slab, and then terminates,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88321,"byte_end":88401,"line_start":12,"line_end":12,"column_start":5,"column_end":85}},{"value":"/ its shard may be reused and thus does not count against the maximum","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88406,"byte_end":88477,"line_start":13,"line_end":13,"column_start":5,"column_end":76}},{"value":"/ number of threads once the thread has terminated.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88482,"byte_end":88535,"line_start":14,"line_end":14,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":549},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88822,"byte_end":88831,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"MAX_PAGES","qualname":"::cfg::Config::MAX_PAGES","value":"usize","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" The maximum number of pages in each shard in the slab.","sig":null,"attributes":[{"value":"/ The maximum number of pages in each shard in the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88599,"byte_end":88657,"line_start":16,"line_end":16,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88662,"byte_end":88665,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This value, in combination with `INITIAL_PAGE_SIZE`, determines how many","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88670,"byte_end":88746,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ bits of each index are used to represent page addresses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88751,"byte_end":88811,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":550},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89345,"byte_end":89362,"line_start":30,"line_end":30,"column_start":11,"column_end":28},"name":"INITIAL_PAGE_SIZE","qualname":"::cfg::Config::INITIAL_PAGE_SIZE","value":"usize","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" The size of the first page in each shard.","sig":null,"attributes":[{"value":"/ The size of the first page in each shard.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88871,"byte_end":88916,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88921,"byte_end":88924,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ When a page in a shard has been filled with values, a new page","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88929,"byte_end":88995,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/ will be allocated that is twice as large as the previous page. Thus, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89000,"byte_end":89076,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/ second page will be twice this size, and the third will be four times","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89081,"byte_end":89154,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ this size, and so on.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89159,"byte_end":89184,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89189,"byte_end":89192,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note that page sizes must be powers of two. If this value is not a power","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89197,"byte_end":89273,"line_start":28,"line_end":28,"column_start":5,"column_end":81}},{"value":"/ of two, it will be rounded to the next power of two.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89278,"byte_end":89334,"line_start":29,"line_end":29,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":551},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89913,"byte_end":89926,"line_start":39,"line_end":39,"column_start":11,"column_end":24},"name":"RESERVED_BITS","qualname":"::cfg::Config::RESERVED_BITS","value":"usize","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":" Sets a number of high-order bits in each index which are reserved from\n user code.","sig":null,"attributes":[{"value":"/ Sets a number of high-order bits in each index which are reserved from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89410,"byte_end":89484,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ user code.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89489,"byte_end":89503,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89508,"byte_end":89511,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that these bits are taken from the generation counter; if the page","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89516,"byte_end":89591,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ address and thread IDs are configured to use a large number of bits,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89596,"byte_end":89668,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ reserving additional bits will decrease the period of the generation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89673,"byte_end":89745,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ counter. These should thus be used relatively sparingly, to ensure that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89750,"byte_end":89825,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ generation counters are able to effectively prevent the ABA problem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89830,"byte_end":89902,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92104,"byte_end":92117,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"DefaultConfig","qualname":"::cfg::DefaultConfig","value":"DefaultConfig {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" Default slab configuration values.\n","sig":null,"attributes":[{"value":"/ Default slab configuration values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92031,"byte_end":92069,"line_start":116,"line_end":116,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/iter.rs","byte_start":94138,"byte_end":94148,"line_start":3,"line_end":3,"column_start":12,"column_end":22},"name":"UniqueIter","qualname":"::iter::UniqueIter","value":"UniqueIter {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9951,"byte_end":9955,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"Slab","qualname":"::Slab","value":"Slab {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" A sharded slab.","sig":null,"attributes":[{"value":"/ A sharded slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9832,"byte_end":9851,"line_start":240,"line_end":240,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9852,"byte_end":9855,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ See the [crate-level documentation](index.html) for details on using this type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9856,"byte_end":9939,"line_start":242,"line_end":242,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10375,"byte_end":10380,"line_start":253,"line_end":253,"column_start":12,"column_end":17},"name":"Guard","qualname":"::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667}],"decl_id":null,"docs":" A guard that allows access to an object in a slab.","sig":null,"attributes":[{"value":"/ A guard that allows access to an object in a slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10062,"byte_end":10116,"line_start":248,"line_end":248,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10117,"byte_end":10120,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the slab that the item the guard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10121,"byte_end":10197,"line_start":250,"line_end":250,"column_start":1,"column_end":77}},{"value":"/ references is currently being accessed. If the item is removed from the slab","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10198,"byte_end":10278,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ while a guard exists, the removal will be deferred until all guards are dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10279,"byte_end":10363,"line_start":252,"line_end":252,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10616,"byte_end":10619,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"new","qualname":"<Slab<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slab with the default configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new slab with the default configuration parameters.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10539,"byte_end":10604,"line_start":260,"line_end":260,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10753,"byte_end":10768,"line_start":266,"line_end":266,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<Slab<T>>::new_with_config","value":"pub fn new_with_config<C: cfg::Config>() -> Slab<T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slab with the provided configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new slab with the provided configuration parameters.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10675,"byte_end":10741,"line_start":265,"line_end":265,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":676},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11678,"byte_end":11687,"line_start":290,"line_end":290,"column_start":15,"column_end":24},"name":"USED_BITS","qualname":"::Slab::<T, C>::USED_BITS","value":"usize","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":" The number of bits in each index which are used by the slab.","sig":null,"attributes":[{"value":"/ The number of bits in each index which are used by the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11019,"byte_end":11083,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11088,"byte_end":11091,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If other data is packed into the `usize` indices returned by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11096,"byte_end":11160,"line_start":279,"line_end":279,"column_start":5,"column_end":69}},{"value":"/ [`Slab::insert`], user code is free to use any bits higher than the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11165,"byte_end":11236,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ `USED_BITS`-th bit freely.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11241,"byte_end":11271,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11276,"byte_end":11279,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is determined by the [`Config`] type that configures the slab's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11284,"byte_end":11356,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ parameters. By default, all bits are used; this can be changed by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11361,"byte_end":11430,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ overriding the [`Config::RESERVED_BITS`][res] constant.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11435,"byte_end":11494,"line_start":285,"line_end":285,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11499,"byte_end":11502,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`Config`]: trait.Config.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11507,"byte_end":11540,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/ [res]: trait.Config.html#associatedconstant.RESERVED_BITS","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11545,"byte_end":11606,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/ [`Slab::insert`]: struct.Slab.html#method.insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11611,"byte_end":11663,"line_start":289,"line_end":289,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12271,"byte_end":12277,"line_start":307,"line_end":307,"column_start":12,"column_end":18},"name":"insert","qualname":"<Slab<T, C>>::insert","value":"pub fn insert(&Self, T) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the slab, returning a key that can be used to\n access it.","sig":null,"attributes":[{"value":"/ Inserts a value into the slab, returning a key that can be used to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11716,"byte_end":11786,"line_start":292,"line_end":292,"column_start":5,"column_end":75}},{"value":"/ access it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11791,"byte_end":11805,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11810,"byte_end":11813,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11818,"byte_end":11892,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ is full and no items can be added until some are removed, or the maximum","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11897,"byte_end":11973,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ number of shards has been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11978,"byte_end":12016,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12021,"byte_end":12024,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12029,"byte_end":12043,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12048,"byte_end":12059,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12064,"byte_end":12093,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ let slab = Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12098,"byte_end":12125,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12130,"byte_end":12133,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12138,"byte_end":12188,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12193,"byte_end":12247,"line_start":305,"line_end":305,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12252,"byte_end":12259,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14071,"byte_end":14077,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"remove","qualname":"<Slab<T, C>>::remove","value":"pub fn remove(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value associated with the given key from the slab, returning\n `true` if a value was removed.","sig":null,"attributes":[{"value":"/ Remove the value associated with the given key from the slab, returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12573,"byte_end":12648,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ `true` if a value was removed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12653,"byte_end":12687,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12692,"byte_end":12695,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Unlike [`take`], this method does _not_ block the current thread until","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12700,"byte_end":12774,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ the value can be removed. Instead, if another thread is currently","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12779,"byte_end":12848,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ accessing that value, this marks it to be removed by that thread when it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12853,"byte_end":12929,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ finishes accessing the value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12934,"byte_end":12967,"line_start":322,"line_end":322,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12972,"byte_end":12975,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12980,"byte_end":12994,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":12999,"byte_end":13002,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13007,"byte_end":13018,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13023,"byte_end":13064,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13069,"byte_end":13119,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13124,"byte_end":13127,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Remove the item from the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13132,"byte_end":13169,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ assert!(slab.remove(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13174,"byte_end":13204,"line_start":331,"line_end":331,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13209,"byte_end":13212,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Now, the slot is empty.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13217,"byte_end":13247,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13252,"byte_end":13285,"line_start":334,"line_end":334,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13290,"byte_end":13297,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13302,"byte_end":13305,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13310,"byte_end":13321,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13326,"byte_end":13349,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13354,"byte_end":13357,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let slab = Arc::new(sharded_slab::Slab::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13362,"byte_end":13413,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13418,"byte_end":13468,"line_start":341,"line_end":341,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13473,"byte_end":13476,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13481,"byte_end":13510,"line_start":343,"line_end":343,"column_start":5,"column_end":34}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13515,"byte_end":13561,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/     // Depending on when this thread begins executing, the item may","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13566,"byte_end":13637,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/     // or may not have already been removed...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13642,"byte_end":13692,"line_start":346,"line_end":346,"column_start":5,"column_end":55}},{"value":"/     if let Some(item) = slab2.get(key) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13697,"byte_end":13741,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(item, \"hello world\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13746,"byte_end":13790,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13795,"byte_end":13804,"line_start":349,"line_end":349,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13809,"byte_end":13816,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13821,"byte_end":13824,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ // The item will be removed by thread2 when it finishes accessing it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13829,"byte_end":13902,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ assert!(slab.remove(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13907,"byte_end":13937,"line_start":353,"line_end":353,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13942,"byte_end":13945,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13950,"byte_end":13978,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":13983,"byte_end":14016,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14021,"byte_end":14028,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ [`take`]: #method.take","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14033,"byte_end":14059,"line_start":358,"line_end":358,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16756,"byte_end":16760,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"take","qualname":"<Slab<T, C>>::take","value":"pub fn take(&Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value associated with the given key from the slab, returning\n it.","sig":null,"attributes":[{"value":"/ Removes the value associated with the given key from the slab, returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14710,"byte_end":14786,"line_start":374,"line_end":374,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14791,"byte_end":14798,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14803,"byte_end":14806,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ If the slab does not contain a value for that key, `None` is returned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14811,"byte_end":14884,"line_start":377,"line_end":377,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14889,"byte_end":14901,"line_start":378,"line_end":378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14906,"byte_end":14909,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ If the value associated with the given key is currently being","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14914,"byte_end":14979,"line_start":380,"line_end":380,"column_start":5,"column_end":70}},{"value":"/ accessed by another thread, this method will block the current thread","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":14984,"byte_end":15057,"line_start":381,"line_end":381,"column_start":5,"column_end":78}},{"value":"/ until the item is no longer accessed. If this is not desired, use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15062,"byte_end":15131,"line_start":382,"line_end":382,"column_start":5,"column_end":74}},{"value":"/ [`remove`] instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15136,"byte_end":15159,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15164,"byte_end":15167,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ **Note**: This method blocks the calling thread by spinning until the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15172,"byte_end":15245,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ currently outstanding references are released. Spinning for long periods","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15250,"byte_end":15326,"line_start":386,"line_end":386,"column_start":5,"column_end":81}},{"value":"/ of time can result in high CPU time and power consumption. Therefore,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15331,"byte_end":15404,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ `take` should only be called when other references to the slot are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15409,"byte_end":15479,"line_start":388,"line_end":388,"column_start":5,"column_end":75}},{"value":"/ expected to be dropped soon (e.g., when all accesses are relatively","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15484,"byte_end":15555,"line_start":389,"line_end":389,"column_start":5,"column_end":76}},{"value":"/ short).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15560,"byte_end":15571,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15576,"byte_end":15579,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15584,"byte_end":15598,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15603,"byte_end":15606,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15611,"byte_end":15622,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15627,"byte_end":15668,"line_start":395,"line_end":395,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15673,"byte_end":15723,"line_start":396,"line_end":396,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15728,"byte_end":15731,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ // Remove the item from the slab, returning it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15736,"byte_end":15787,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(slab.take(key), Some(\"hello world\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15792,"byte_end":15844,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15849,"byte_end":15852,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // Now, the slot is empty.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15857,"byte_end":15887,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15892,"byte_end":15925,"line_start":402,"line_end":402,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15930,"byte_end":15937,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15942,"byte_end":15945,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15950,"byte_end":15961,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15966,"byte_end":15989,"line_start":406,"line_end":406,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":15994,"byte_end":15997,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let slab = Arc::new(sharded_slab::Slab::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16002,"byte_end":16053,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16058,"byte_end":16108,"line_start":409,"line_end":409,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16113,"byte_end":16116,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16121,"byte_end":16150,"line_start":411,"line_end":411,"column_start":5,"column_end":34}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16155,"byte_end":16201,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/     // Depending on when this thread begins executing, the item may","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16206,"byte_end":16277,"line_start":413,"line_end":413,"column_start":5,"column_end":76}},{"value":"/     // or may not have already been removed...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16282,"byte_end":16332,"line_start":414,"line_end":414,"column_start":5,"column_end":55}},{"value":"/     if let Some(item) = slab2.get(key) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16337,"byte_end":16381,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(item, \"hello world\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16386,"byte_end":16430,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16435,"byte_end":16444,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16449,"byte_end":16456,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16461,"byte_end":16464,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ // The item will only be removed when the other thread finishes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16469,"byte_end":16536,"line_start":420,"line_end":420,"column_start":5,"column_end":72}},{"value":"/ // accessing it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16541,"byte_end":16561,"line_start":421,"line_end":421,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(slab.take(key), Some(\"hello world\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16566,"byte_end":16618,"line_start":422,"line_end":422,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16623,"byte_end":16626,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16631,"byte_end":16659,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16664,"byte_end":16697,"line_start":425,"line_end":425,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16702,"byte_end":16709,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":16714,"byte_end":16744,"line_start":427,"line_end":427,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17609,"byte_end":17612,"line_start":455,"line_end":455,"column_start":12,"column_end":15},"name":"get","qualname":"<Slab<T, C>>::get","value":"pub fn get(&Self, usize) -> Option<Guard<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key.","sig":null,"attributes":[{"value":"/ Return a reference to the value associated with the given key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17060,"byte_end":17126,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17131,"byte_end":17134,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If the slab does not contain a value for the given key, or if the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17139,"byte_end":17208,"line_start":442,"line_end":442,"column_start":5,"column_end":74}},{"value":"/ maximum number of concurrent references to the slot has been reached,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17213,"byte_end":17286,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/ `None` is returned instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17291,"byte_end":17322,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17327,"byte_end":17330,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17335,"byte_end":17349,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17354,"byte_end":17357,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17362,"byte_end":17373,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17378,"byte_end":17419,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17424,"byte_end":17474,"line_start":450,"line_end":450,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17479,"byte_end":17482,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17487,"byte_end":17541,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"/ assert!(slab.get(12345).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17546,"byte_end":17585,"line_start":453,"line_end":453,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":17590,"byte_end":17597,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18441,"byte_end":18449,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"contains","qualname":"<Slab<T, C>>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the slab contains a value for the given key.","sig":null,"attributes":[{"value":"/ Returns `true` if the slab contains a value for the given key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18079,"byte_end":18145,"line_start":469,"line_end":469,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18150,"byte_end":18153,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18158,"byte_end":18172,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18177,"byte_end":18180,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18185,"byte_end":18192,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18197,"byte_end":18238,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18243,"byte_end":18246,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18251,"byte_end":18301,"line_start":476,"line_end":476,"column_start":5,"column_end":55}},{"value":"/ assert!(slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18306,"byte_end":18338,"line_start":477,"line_end":477,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18343,"byte_end":18346,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ slab.take(key).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18351,"byte_end":18379,"line_start":479,"line_end":479,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18384,"byte_end":18417,"line_start":480,"line_end":480,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18422,"byte_end":18429,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18589,"byte_end":18600,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"unique_iter","qualname":"<Slab<T, C>>::unique_iter","value":"pub fn unique_iter(&mut Self) -> iter::UniqueIter<, T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the items in the slab.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the items in the slab.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18522,"byte_end":18577,"line_start":486,"line_end":486,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19579,"byte_end":19582,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"key","qualname":"<Guard>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access the guard.\n","sig":null,"attributes":[{"value":"/ Returns the key used to access the guard.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19522,"byte_end":19567,"line_start":521,"line_end":521,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":731},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21248,"byte_end":21252,"line_start":585,"line_end":585,"column_start":10,"column_end":14},"name":"Prev","qualname":"::Pack::Prev","value":"type Prev: Pack<C>;","parent":{"krate":0,"index":728},"children":[],"decl_id":null,"docs":" The type packed on the less significant side of this type.","sig":null,"attributes":[{"value":"/ The type packed on the less significant side of this type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20957,"byte_end":21019,"line_start":579,"line_end":579,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21024,"byte_end":21027,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ If this type is packed into the least significant bit of a usize, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21032,"byte_end":21106,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/ should be `()`, which occupies no bytes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21111,"byte_end":21155,"line_start":582,"line_end":582,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21160,"byte_end":21163,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This is used to calculate the shift amount for packing this value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":21168,"byte_end":21238,"line_start":584,"line_end":584,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24766,"byte_end":24772,"line_start":29,"line_end":29,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24860,"byte_end":24863,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24989,"byte_end":24992,"line_start":45,"line_end":45,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25109,"byte_end":25116,"line_start":52,"line_end":52,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25309,"byte_end":25316,"line_start":63,"line_end":63,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25487,"byte_end":25493,"line_start":74,"line_end":74,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25604,"byte_end":25609,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25736,"byte_end":25742,"line_start":88,"line_end":88,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":47761,"byte_end":47771,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":48226,"byte_end":48236,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":48430,"byte_end":48434,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":58919,"byte_end":58923,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":60615,"byte_end":60619,"line_start":412,"line_end":412,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62199,"byte_end":62203,"line_start":465,"line_end":465,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62774,"byte_end":62784,"line_start":480,"line_end":480,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62947,"byte_end":62957,"line_start":486,"line_end":486,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63094,"byte_end":63104,"line_start":492,"line_end":492,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63222,"byte_end":63232,"line_start":498,"line_end":498,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63276,"byte_end":63286,"line_start":500,"line_end":500,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63447,"byte_end":63457,"line_start":506,"line_end":506,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63596,"byte_end":63606,"line_start":512,"line_end":512,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63711,"byte_end":63721,"line_start":518,"line_end":518,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63780,"byte_end":63785,"line_start":522,"line_end":522,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":65567,"byte_end":65576,"line_start":574,"line_end":574,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":65820,"byte_end":65829,"line_start":586,"line_end":586,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66323,"byte_end":66332,"line_start":607,"line_end":607,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66437,"byte_end":66446,"line_start":613,"line_end":613,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66477,"byte_end":66486,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66686,"byte_end":66694,"line_start":623,"line_end":623,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67063,"byte_end":67071,"line_start":640,"line_end":640,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67741,"byte_end":67749,"line_start":663,"line_end":663,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67924,"byte_end":67932,"line_start":669,"line_end":669,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68050,"byte_end":68058,"line_start":675,"line_end":675,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68102,"byte_end":68110,"line_start":677,"line_end":677,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68271,"byte_end":68279,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68418,"byte_end":68426,"line_start":689,"line_end":689,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68538,"byte_end":68546,"line_start":695,"line_end":695,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68617,"byte_end":68629,"line_start":699,"line_end":699,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":69631,"byte_end":69644,"line_start":10,"line_end":10,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":71017,"byte_end":71030,"line_start":55,"line_end":55,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":71191,"byte_end":71204,"line_start":61,"line_end":61,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":34411,"byte_end":34415,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":35539,"byte_end":35543,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":36700,"byte_end":36705,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":37113,"byte_end":37118,"line_start":113,"line_end":113,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":37270,"byte_end":37276,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":39584,"byte_end":39590,"line_start":202,"line_end":202,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":41282,"byte_end":41288,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":43689,"byte_end":43694,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44003,"byte_end":44009,"line_start":349,"line_end":349,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44350,"byte_end":44354,"line_start":360,"line_end":360,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44672,"byte_end":44676,"line_start":370,"line_end":370,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44792,"byte_end":44796,"line_start":376,"line_end":376,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44840,"byte_end":44844,"line_start":378,"line_end":378,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45003,"byte_end":45007,"line_start":384,"line_end":384,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45144,"byte_end":45148,"line_start":390,"line_end":390,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45259,"byte_end":45263,"line_start":396,"line_end":396,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75837,"byte_end":75841,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76737,"byte_end":76741,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81219,"byte_end":81223,"line_start":227,"line_end":227,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81318,"byte_end":81322,"line_start":233,"line_end":233,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81411,"byte_end":81415,"line_start":240,"line_end":240,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81533,"byte_end":81537,"line_start":249,"line_end":249,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81834,"byte_end":81843,"line_start":262,"line_end":262,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82050,"byte_end":82059,"line_start":273,"line_end":273,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82242,"byte_end":82251,"line_start":285,"line_end":285,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82781,"byte_end":82790,"line_start":304,"line_end":304,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":83016,"byte_end":83025,"line_start":314,"line_end":314,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/sync.rs","byte_start":83680,"byte_end":83690,"line_start":22,"line_end":22,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85010,"byte_end":85013,"line_start":45,"line_end":45,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85398,"byte_end":85401,"line_start":65,"line_end":65,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85841,"byte_end":85844,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86210,"byte_end":86213,"line_start":101,"line_end":101,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86595,"byte_end":86598,"line_start":115,"line_end":115,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86697,"byte_end":86700,"line_start":121,"line_end":121,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86739,"byte_end":86742,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86844,"byte_end":86847,"line_start":129,"line_end":129,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86890,"byte_end":86902,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":87727,"byte_end":87739,"line_start":167,"line_end":167,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92025,"byte_end":92026,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92499,"byte_end":92512,"line_start":135,"line_end":135,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92868,"byte_end":92879,"line_start":147,"line_end":147,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/iter.rs","byte_start":94415,"byte_end":94425,"line_start":9,"line_end":9,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":96907,"byte_end":96912,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":97905,"byte_end":97910,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":99837,"byte_end":99842,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":101593,"byte_end":101598,"line_start":198,"line_end":198,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10525,"byte_end":10529,"line_start":259,"line_end":259,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11002,"byte_end":11006,"line_start":276,"line_end":276,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18988,"byte_end":18992,"line_start":500,"line_end":500,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19105,"byte_end":19109,"line_start":506,"line_end":506,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19374,"byte_end":19378,"line_start":515,"line_end":515,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19434,"byte_end":19438,"line_start":516,"line_end":516,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19500,"byte_end":19505,"line_start":520,"line_end":520,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19675,"byte_end":19680,"line_start":527,"line_end":527,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19826,"byte_end":19831,"line_start":535,"line_end":535,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20243,"byte_end":20248,"line_start":549,"line_end":549,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20456,"byte_end":20461,"line_start":559,"line_end":559,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":9529,"byte_end":9543,"line_start":223,"line_end":223,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":39}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24766,"byte_end":24772,"line_start":29,"line_end":29,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":31860},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24860,"byte_end":24863,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":24989,"byte_end":24992,"line_start":45,"line_end":45,"column_start":19,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25109,"byte_end":25116,"line_start":52,"line_end":52,"column_start":38,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":6715},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25309,"byte_end":25316,"line_start":63,"line_end":63,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6741},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25487,"byte_end":25493,"line_start":74,"line_end":74,"column_start":16,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25604,"byte_end":25609,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":1,"index":5203},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/clear.rs","byte_start":25736,"byte_end":25742,"line_start":88,"line_end":88,"column_start":32,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":5335},"to":{"krate":0,"index":11}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":47761,"byte_end":47771,"line_start":51,"line_end":51,"column_start":34,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":48226,"byte_end":48236,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":48430,"byte_end":48434,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":58919,"byte_end":58923,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":60615,"byte_end":60619,"line_start":412,"line_end":412,"column_start":12,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62199,"byte_end":62203,"line_start":465,"line_end":465,"column_start":40,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":63},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62774,"byte_end":62784,"line_start":480,"line_end":480,"column_start":24,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":62947,"byte_end":62957,"line_start":486,"line_end":486,"column_start":22,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63094,"byte_end":63104,"line_start":492,"line_end":492,"column_start":36,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63222,"byte_end":63232,"line_start":498,"line_end":498,"column_start":29,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63276,"byte_end":63286,"line_start":500,"line_end":500,"column_start":37,"column_end":47},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63447,"byte_end":63457,"line_start":506,"line_end":506,"column_start":30,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63596,"byte_end":63606,"line_start":512,"line_end":512,"column_start":32,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63711,"byte_end":63721,"line_start":518,"line_end":518,"column_start":31,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":63780,"byte_end":63785,"line_start":522,"line_end":522,"column_start":29,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":65567,"byte_end":65576,"line_start":574,"line_end":574,"column_start":22,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":65820,"byte_end":65829,"line_start":586,"line_end":586,"column_start":34,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":78},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66323,"byte_end":66332,"line_start":607,"line_end":607,"column_start":23,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66437,"byte_end":66446,"line_start":613,"line_end":613,"column_start":16,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66477,"byte_end":66486,"line_start":615,"line_end":615,"column_start":24,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":78},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":66686,"byte_end":66694,"line_start":623,"line_end":623,"column_start":34,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":74},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67063,"byte_end":67071,"line_start":640,"line_end":640,"column_start":22,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67741,"byte_end":67749,"line_start":663,"line_end":663,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":67924,"byte_end":67932,"line_start":669,"line_end":669,"column_start":36,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68050,"byte_end":68058,"line_start":675,"line_end":675,"column_start":29,"column_end":37},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68102,"byte_end":68110,"line_start":677,"line_end":677,"column_start":37,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68271,"byte_end":68279,"line_start":683,"line_end":683,"column_start":30,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68418,"byte_end":68426,"line_start":689,"line_end":689,"column_start":32,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68538,"byte_end":68546,"line_start":695,"line_end":695,"column_start":31,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/slot.rs","byte_start":68617,"byte_end":68629,"line_start":699,"line_end":699,"column_start":34,"column_end":46},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":69631,"byte_end":69644,"line_start":10,"line_end":10,"column_start":22,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":71017,"byte_end":71030,"line_start":55,"line_end":55,"column_start":45,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/stack.rs","byte_start":71191,"byte_end":71204,"line_start":61,"line_end":61,"column_start":24,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":34411,"byte_end":34415,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":35539,"byte_end":35543,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":256},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":36700,"byte_end":36705,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":37113,"byte_end":37118,"line_start":113,"line_end":113,"column_start":38,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":279},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":37270,"byte_end":37276,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":39584,"byte_end":39590,"line_start":202,"line_end":202,"column_start":16,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":41282,"byte_end":41288,"line_start":262,"line_end":262,"column_start":12,"column_end":18},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":43689,"byte_end":43694,"line_start":338,"line_end":338,"column_start":21,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44003,"byte_end":44009,"line_start":349,"line_end":349,"column_start":27,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44350,"byte_end":44354,"line_start":360,"line_end":360,"column_start":37,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44672,"byte_end":44676,"line_start":370,"line_end":370,"column_start":36,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44792,"byte_end":44796,"line_start":376,"line_end":376,"column_start":29,"column_end":33},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":44840,"byte_end":44844,"line_start":378,"line_end":378,"column_start":37,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45003,"byte_end":45007,"line_start":384,"line_end":384,"column_start":30,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45144,"byte_end":45148,"line_start":390,"line_end":390,"column_start":32,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/page/mod.rs","byte_start":45259,"byte_end":45263,"line_start":396,"line_end":396,"column_start":31,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":75837,"byte_end":75841,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":76737,"byte_end":76741,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81219,"byte_end":81223,"line_start":227,"line_end":227,"column_start":28,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81318,"byte_end":81322,"line_start":233,"line_end":233,"column_start":28,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81411,"byte_end":81415,"line_start":240,"line_end":240,"column_start":21,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81533,"byte_end":81537,"line_start":249,"line_end":249,"column_start":27,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":81834,"byte_end":81843,"line_start":262,"line_end":262,"column_start":16,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82050,"byte_end":82059,"line_start":273,"line_end":273,"column_start":36,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82242,"byte_end":82251,"line_start":285,"line_end":285,"column_start":25,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":82781,"byte_end":82790,"line_start":304,"line_end":304,"column_start":31,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/pool/mod.rs","byte_start":83016,"byte_end":83025,"line_start":314,"line_end":314,"column_start":33,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/sync.rs","byte_start":83680,"byte_end":83690,"line_start":22,"line_end":22,"column_start":13,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85010,"byte_end":85013,"line_start":45,"line_end":45,"column_start":34,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":488},"to":{"krate":0,"index":728}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85398,"byte_end":85401,"line_start":65,"line_end":65,"column_start":22,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":85841,"byte_end":85844,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86210,"byte_end":86213,"line_start":101,"line_end":101,"column_start":24,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86595,"byte_end":86598,"line_start":115,"line_end":115,"column_start":23,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86697,"byte_end":86700,"line_start":121,"line_end":121,"column_start":16,"column_end":19},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86739,"byte_end":86742,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86844,"byte_end":86847,"line_start":129,"line_end":129,"column_start":31,"column_end":34},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":488},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":86890,"byte_end":86902,"line_start":133,"line_end":133,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/tid.rs","byte_start":87727,"byte_end":87739,"line_start":167,"line_end":167,"column_start":15,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":790},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":88157,"byte_end":88162,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":89971,"byte_end":89977,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":547},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92025,"byte_end":92026,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":566},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92499,"byte_end":92512,"line_start":135,"line_end":135,"column_start":17,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":810},"to":{"krate":0,"index":547}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/cfg.rs","byte_start":92868,"byte_end":92879,"line_start":147,"line_end":147,"column_start":32,"column_end":43},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/iter.rs","byte_start":94415,"byte_end":94425,"line_start":9,"line_end":9,"column_start":49,"column_end":59},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":5285}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":96907,"byte_end":96912,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":97905,"byte_end":97910,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":99837,"byte_end":99842,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/shard.rs","byte_start":101593,"byte_end":101598,"line_start":198,"line_end":198,"column_start":52,"column_end":57},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":10525,"byte_end":10529,"line_start":259,"line_end":259,"column_start":9,"column_end":13},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":11002,"byte_end":11006,"line_start":276,"line_end":276,"column_start":25,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":18988,"byte_end":18992,"line_start":500,"line_end":500,"column_start":21,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19105,"byte_end":19109,"line_start":506,"line_end":506,"column_start":52,"column_end":56},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19374,"byte_end":19378,"line_start":515,"line_end":515,"column_start":47,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19434,"byte_end":19438,"line_start":516,"line_end":516,"column_start":47,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19500,"byte_end":19505,"line_start":520,"line_end":520,"column_start":29,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19675,"byte_end":19680,"line_start":527,"line_end":527,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":19826,"byte_end":19831,"line_start":535,"line_end":535,"column_start":38,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20243,"byte_end":20248,"line_start":549,"line_end":549,"column_start":31,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20456,"byte_end":20461,"line_start":559,"line_end":559,"column_start":33,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.0.9/src/lib.rs","byte_start":20660,"byte_end":20665,"line_start":571,"line_end":571,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":728}}]}