{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22","program":"/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"blocking\"","--cfg","feature=\"default\"","--cfg","feature=\"dns\"","--cfg","feature=\"fnv\"","--cfg","feature=\"fs\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-named-pipes\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"process\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-threaded\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=a217f6bf6b31e917","-C","extra-filename=-a217f6bf6b31e917","--out-dir","/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","-L","dependency=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps","--extern","bytes=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libbytes-94736955f1f3c1e5.rmeta","--extern","fnv=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libfnv-9480b9b5ca08fe13.rmeta","--extern","futures_core=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libfutures_core-c17f700371417c3d.rmeta","--extern","iovec=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libiovec-be8c3bcdcb03ac75.rmeta","--extern","lazy_static=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/liblazy_static-d07addd12a8987b7.rmeta","--extern","libc=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/liblibc-a1edf021d31f437a.rmeta","--extern","memchr=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libmemchr-81b921f01ba8a0a1.rmeta","--extern","mio=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libmio-de06a9daf874fa2b.rmeta","--extern","mio_uds=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libmio_uds-a652d32250dec060.rmeta","--extern","num_cpus=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libnum_cpus-384582b9d0a8b254.rmeta","--extern","pin_project_lite=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libpin_project_lite-92f9e57b3e00e4cb.rmeta","--extern","signal_hook_registry=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libsignal_hook_registry-deb029d9e174e723.rmeta","--extern","slab=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libslab-259161656569c6a2.rmeta","--extern","tokio_macros=/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libtokio_macros-837f27905f9b0d97.so","--cap-lints","allow","--error-format=json","--sysroot","/home/elliot/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/elliot/ruststuff/find-tribe/websocket_server/target/rls/debug/deps/libtokio-a217f6bf6b31e917.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[6284560521658008914,3042951419283413164]},"crate_root":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src","external_crates":[{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5454670041059415339,14778898676712446032]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17323693314265278435,11165935492680790011]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1758524798956620560,9236974138540026415]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[10309433098055336058,16629781825217955551]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","num":19,"id":{"name":"bytes","disambiguator":[11926726182971503316,16956388010612504231]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","num":20,"id":{"name":"lazy_static","disambiguator":[16863586403248268720,14388819080293591203]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","num":21,"id":{"name":"futures_core","disambiguator":[16256670620880431368,17638022570570351735]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":22,"id":{"name":"mio","disambiguator":[3741809454977263285,1671084524329953728]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":23,"id":{"name":"net2","disambiguator":[5759203497863661870,15214262690111065044]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","num":24,"id":{"name":"libc","disambiguator":[10916877651650071774,18089847778277701171]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":25,"id":{"name":"cfg_if","disambiguator":[502369263979125416,6128217184247387066]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","num":26,"id":{"name":"iovec","disambiguator":[14553398758116639956,3330170445856289273]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","num":27,"id":{"name":"slab","disambiguator":[7754159738850082191,972067075306833933]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/platform.rs","num":28,"id":{"name":"log","disambiguator":[14860850234834219308,11684563599118048464]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":29,"id":{"name":"mio_uds","disambiguator":[18352635536687374072,1019733451011340320]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","num":30,"id":{"name":"fnv","disambiguator":[1250549230163845577,2434457741331400523]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","num":31,"id":{"name":"tokio_macros","disambiguator":[1669260961544647213,15153621346453742410]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","num":32,"id":{"name":"memchr","disambiguator":[5406396586272310143,4720523628489201885]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/mod.rs","num":33,"id":{"name":"num_cpus","disambiguator":[16304421850662659235,1599584179826174835]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":34,"id":{"name":"signal_hook_registry","disambiguator":[6897472897600189626,16978325327716525286]}},{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","num":35,"id":{"name":"arc_swap","disambiguator":[6262135572677786185,3868710640762934515]}}],"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30868,"byte_end":30878,"line_start":2,"line_end":2,"column_start":29,"column_end":39},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30880,"byte_end":30887,"line_start":2,"line_end":2,"column_start":41,"column_end":48},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30915,"byte_end":30927,"line_start":3,"line_end":3,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":9064},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30953,"byte_end":30959,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32005},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":30979,"byte_end":30982,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34510},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":31003,"byte_end":31007,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":903},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677092,"byte_end":8677104,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677149,"byte_end":8677159,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677212,"byte_end":8677226,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1301},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677273,"byte_end":8677283,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677316,"byte_end":8677320,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677363,"byte_end":8677372,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1060},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677413,"byte_end":8677421,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677470,"byte_end":8677481,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8727558,"byte_end":8727565,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8727622,"byte_end":8727636,"line_start":7,"line_end":7,"column_start":33,"column_end":47},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1116},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8727691,"byte_end":8727704,"line_start":10,"line_end":10,"column_start":32,"column_end":45},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":1092}},{"kind":"Use","ref_id":{"krate":0,"index":1126},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677527,"byte_end":8677531,"line_start":54,"line_end":54,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677573,"byte_end":8677581,"line_start":57,"line_end":57,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677583,"byte_end":8677591,"line_start":57,"line_end":57,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677593,"byte_end":8677600,"line_start":57,"line_end":57,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677644,"byte_end":8677653,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677706,"byte_end":8677720,"line_start":63,"line_end":63,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677765,"byte_end":8677775,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677828,"byte_end":8677842,"line_start":69,"line_end":69,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1230},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677889,"byte_end":8677900,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677937,"byte_end":8677943,"line_start":75,"line_end":75,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677998,"byte_end":8678013,"line_start":78,"line_end":78,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1263},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8678070,"byte_end":8678086,"line_start":81,"line_end":81,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8678121,"byte_end":8678126,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8678159,"byte_end":8678163,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":896}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31111,"byte_end":31121,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31123,"byte_end":31132,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31166,"byte_end":31173,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45085,"byte_end":45097,"line_start":187,"line_end":187,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45143,"byte_end":45152,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45197,"byte_end":45206,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45253,"byte_end":45263,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1731},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45359,"byte_end":45370,"line_start":203,"line_end":203,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45421,"byte_end":45433,"line_start":206,"line_end":206,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1787},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45489,"byte_end":45495,"line_start":211,"line_end":211,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1788},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45497,"byte_end":45503,"line_start":211,"line_end":211,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1792},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45542,"byte_end":45547,"line_start":214,"line_end":214,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45549,"byte_end":45554,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1797},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45595,"byte_end":45601,"line_start":217,"line_end":217,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1798},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45603,"byte_end":45609,"line_start":217,"line_end":217,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1922},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45665,"byte_end":45670,"line_start":222,"line_end":222,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45672,"byte_end":45680,"line_start":222,"line_end":222,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1919},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45682,"byte_end":45691,"line_start":222,"line_end":222,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45744,"byte_end":45748,"line_start":225,"line_end":225,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45804,"byte_end":45808,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45810,"byte_end":45815,"line_start":229,"line_end":229,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2969},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45817,"byte_end":45823,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2984},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45825,"byte_end":45829,"line_start":229,"line_end":229,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45831,"byte_end":45846,"line_start":229,"line_end":229,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45848,"byte_end":45860,"line_start":229,"line_end":229,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45862,"byte_end":45874,"line_start":229,"line_end":229,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45876,"byte_end":45889,"line_start":229,"line_end":229,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12234},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45899,"byte_end":45908,"line_start":230,"line_end":230,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12220},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45910,"byte_end":45919,"line_start":230,"line_end":230,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12157},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45921,"byte_end":45930,"line_start":230,"line_end":230,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45932,"byte_end":45936,"line_start":230,"line_end":230,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45938,"byte_end":45943,"line_start":230,"line_end":230,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45945,"byte_end":45950,"line_start":230,"line_end":230,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45952,"byte_end":45958,"line_start":230,"line_end":230,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45960,"byte_end":45964,"line_start":230,"line_end":230,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11251},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45966,"byte_end":45971,"line_start":230,"line_end":230,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11160},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":45973,"byte_end":45977,"line_start":230,"line_end":230,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":3000},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46028,"byte_end":46041,"line_start":234,"line_end":234,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":11205},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46043,"byte_end":46055,"line_start":234,"line_end":234,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2659},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46210,"byte_end":46215,"line_start":239,"line_end":239,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7066},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46217,"byte_end":46226,"line_start":239,"line_end":239,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2657},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":46228,"byte_end":46234,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72675,"byte_end":72688,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72748,"byte_end":72759,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8977979,"byte_end":8977987,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3535},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978017,"byte_end":8978025,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3542},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978027,"byte_end":8978036,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3549},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978079,"byte_end":8978092,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3553},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978094,"byte_end":8978108,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3558},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978110,"byte_end":8978122,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3263}},{"kind":"Use","ref_id":{"krate":0,"index":3559},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8978110,"byte_end":8978122,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3420}},{"kind":"Use","ref_id":{"krate":0,"index":3527},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72819,"byte_end":72830,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72857,"byte_end":72866,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3700},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":9037777,"byte_end":9037785,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3705},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":9037787,"byte_end":9037799,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":9037787,"byte_end":9037799,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3690}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":9037801,"byte_end":9037809,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3566}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72924,"byte_end":72933,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3956},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":9058865,"byte_end":9058873,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3964},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":9058968,"byte_end":9058976,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":9058978,"byte_end":9058987,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3980},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":9059076,"byte_end":9059081,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3711}},{"kind":"Use","ref_id":{"krate":0,"index":3954},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72995,"byte_end":73007,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3962},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73037,"byte_end":73049,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":73077,"byte_end":73087,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105483,"byte_end":105485,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105494,"byte_end":105506,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105508,"byte_end":105517,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105519,"byte_end":105529,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105594,"byte_end":105609,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2622},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105616,"byte_end":105628,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105635,"byte_end":105647,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105654,"byte_end":105667,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":556}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113198,"byte_end":113205,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113290,"byte_end":113296,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113298,"byte_end":113313,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":562}},{"kind":"Use","ref_id":{"krate":0,"index":5755},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299247,"byte_end":9299253,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":5750}},{"kind":"Use","ref_id":{"krate":0,"index":6009},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336157,"byte_end":9336167,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6101},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336197,"byte_end":9336202,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336204,"byte_end":9336209,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336375,"byte_end":9336379,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6548},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336381,"byte_end":9336385,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6292},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336495,"byte_end":9336499,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6562},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336501,"byte_end":9336505,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6315},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336540,"byte_end":9336547,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336549,"byte_end":9336556,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":6575},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336596,"byte_end":9336605,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":21,"index":68},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336897,"byte_end":9336903,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":5931}},{"kind":"Use","ref_id":{"krate":0,"index":7952},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454712,"byte_end":9454719,"line_start":433,"line_end":433,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7964},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454721,"byte_end":9454738,"line_start":433,"line_end":433,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":6922},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503143,"byte_end":9503150,"line_start":70,"line_end":70,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6916},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503152,"byte_end":9503160,"line_start":70,"line_end":70,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":6907},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503162,"byte_end":9503168,"line_start":70,"line_end":70,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7194},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503246,"byte_end":9503263,"line_start":77,"line_end":77,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7188},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503265,"byte_end":9503282,"line_start":77,"line_end":77,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":7179},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503284,"byte_end":9503299,"line_start":77,"line_end":77,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6821}},{"kind":"Use","ref_id":{"krate":0,"index":8089},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454963,"byte_end":9454968,"line_start":445,"line_end":445,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7257},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454970,"byte_end":9454980,"line_start":445,"line_end":445,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8096},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454982,"byte_end":9454994,"line_start":445,"line_end":445,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":7261},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454996,"byte_end":9455011,"line_start":445,"line_end":445,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8101},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455051,"byte_end":9455057,"line_start":448,"line_end":448,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8234},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455194,"byte_end":9455203,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8238},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455205,"byte_end":9455220,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8245},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455222,"byte_end":9455242,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8255},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455283,"byte_end":9455289,"line_start":458,"line_end":458,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8262},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455291,"byte_end":9455306,"line_start":458,"line_end":458,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8271},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455308,"byte_end":9455324,"line_start":458,"line_end":458,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6620}},{"kind":"Use","ref_id":{"krate":0,"index":8345},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727919,"byte_end":9727933,"line_start":219,"line_end":219,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8342},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727985,"byte_end":9727999,"line_start":222,"line_end":222,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4996},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728060,"byte_end":9728069,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":4998},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728071,"byte_end":9728081,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728119,"byte_end":9728124,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8366},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728169,"byte_end":9728178,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8526},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728233,"byte_end":9728244,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8517},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728246,"byte_end":9728254,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8469},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9728302,"byte_end":9728310,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":8337}},{"kind":"Use","ref_id":{"krate":0,"index":8364},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14562,"byte_end":14567,"line_start":389,"line_end":389,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9026},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767419,"byte_end":9767429,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8632},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767459,"byte_end":9767468,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8631},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767470,"byte_end":9767481,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9068},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767483,"byte_end":9767488,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9125},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767542,"byte_end":9767547,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9137},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767586,"byte_end":9767593,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8885},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767629,"byte_end":9767637,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8886},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767639,"byte_end":9767650,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9160},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767652,"byte_end":9767660,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8913},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767710,"byte_end":9767717,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":8915},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767719,"byte_end":9767729,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9165},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767731,"byte_end":9767738,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9625},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767740,"byte_end":9767747,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9187},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767806,"byte_end":9767814,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":9579},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767816,"byte_end":9767824,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":2,"index":34380},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767933,"byte_end":9767941,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8541}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/mod.rs","byte_start":179642,"byte_end":179654,"line_start":26,"line_end":26,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":765}},{"kind":"Use","ref_id":{"krate":31,"index":45},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14841,"byte_end":14872,"line_start":403,"line_end":403,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":39},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15208,"byte_end":15221,"line_start":412,"line_end":412,"column_start":35,"column_end":48},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":42},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":15328,"byte_end":15341,"line_start":415,"line_end":415,"column_start":35,"column_end":48},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":0,"byte_end":15827,"line_start":1,"line_end":436,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":896},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":308},{"krate":0,"index":373},{"krate":0,"index":509},{"krate":0,"index":556},{"krate":0,"index":4103},{"krate":0,"index":562},{"krate":0,"index":746},{"krate":0,"index":5750},{"krate":0,"index":5931},{"krate":0,"index":6620},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8541},{"krate":0,"index":765},{"krate":0,"index":9551},{"krate":0,"index":9552},{"krate":0,"index":9553}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":518,"byte_end":590,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":591,"byte_end":594,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":595,"byte_end":675,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":676,"byte_end":748,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":749,"byte_end":785,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":786,"byte_end":789,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":790,"byte_end":857,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":858,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":939,"byte_end":962,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":963,"byte_end":1050,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1051,"byte_end":1124,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1125,"byte_end":1203,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1285,"byte_end":1335,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1336,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1340,"byte_end":1396,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1401,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1458,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1482,"byte_end":1508,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1509,"byte_end":1530,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1531,"byte_end":1550,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1551,"byte_end":1580,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1581,"byte_end":1608,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1609,"byte_end":1628,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1629,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1659,"byte_end":1705,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1710,"byte_end":1731,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1736,"byte_end":1815,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1816,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1890,"byte_end":1969,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1970,"byte_end":1985,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":1990,"byte_end":2062,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2063,"byte_end":2100,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2101,"byte_end":2104,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2105,"byte_end":2116,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2117,"byte_end":2169,"line_start":61,"line_end":61,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2170,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2182,"byte_end":2202,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2203,"byte_end":2206,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2207,"byte_end":2288,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2289,"byte_end":2367,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2368,"byte_end":2448,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2449,"byte_end":2526,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2527,"byte_end":2610,"line_start":70,"line_end":70,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2611,"byte_end":2688,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2689,"byte_end":2776,"line_start":72,"line_end":72,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2777,"byte_end":2858,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2859,"byte_end":2868,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2869,"byte_end":2872,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2873,"byte_end":2938,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":2939,"byte_end":3021,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3022,"byte_end":3104,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3105,"byte_end":3154,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3155,"byte_end":3208,"line_start":80,"line_end":80,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3209,"byte_end":3260,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3261,"byte_end":3321,"line_start":82,"line_end":82,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3322,"byte_end":3412,"line_start":83,"line_end":83,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3413,"byte_end":3462,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3463,"byte_end":3512,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3564,"byte_end":3641,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3642,"byte_end":3665,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3666,"byte_end":3714,"line_start":89,"line_end":89,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3715,"byte_end":3784,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3785,"byte_end":3831,"line_start":91,"line_end":91,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3832,"byte_end":3913,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3914,"byte_end":3964,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":3965,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4004,"byte_end":4059,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4060,"byte_end":4138,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4139,"byte_end":4203,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4204,"byte_end":4207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4208,"byte_end":4290,"line_start":99,"line_end":99,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4291,"byte_end":4313,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4314,"byte_end":4317,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4318,"byte_end":4343,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4344,"byte_end":4347,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4348,"byte_end":4416,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4417,"byte_end":4480,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4481,"byte_end":4531,"line_start":106,"line_end":106,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4532,"byte_end":4535,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4536,"byte_end":4615,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4616,"byte_end":4693,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4694,"byte_end":4727,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4728,"byte_end":4731,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4732,"byte_end":4829,"line_start":112,"line_end":112,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4834,"byte_end":4864,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4869,"byte_end":4950,"line_start":116,"line_end":116,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":4951,"byte_end":5036,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5037,"byte_end":5121,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5122,"byte_end":5152,"line_start":119,"line_end":119,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5157,"byte_end":5173,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5174,"byte_end":5177,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5178,"byte_end":5244,"line_start":123,"line_end":123,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5245,"byte_end":5248,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5249,"byte_end":5260,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5261,"byte_end":5313,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5314,"byte_end":5321,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5322,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5326,"byte_end":5353,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5354,"byte_end":5357,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5358,"byte_end":5437,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5438,"byte_end":5520,"line_start":132,"line_end":132,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5521,"byte_end":5602,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5603,"byte_end":5638,"line_start":134,"line_end":134,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5643,"byte_end":5659,"line_start":136,"line_end":136,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5660,"byte_end":5663,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5747,"byte_end":5797,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5798,"byte_end":5801,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5802,"byte_end":5813,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5814,"byte_end":5876,"line_start":142,"line_end":142,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5877,"byte_end":5884,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5885,"byte_end":5888,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5889,"byte_end":5914,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5919,"byte_end":5995,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":5996,"byte_end":6079,"line_start":148,"line_end":148,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6080,"byte_end":6123,"line_start":149,"line_end":149,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6128,"byte_end":6207,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6208,"byte_end":6291,"line_start":152,"line_end":152,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6292,"byte_end":6370,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6371,"byte_end":6390,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6391,"byte_end":6394,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6395,"byte_end":6473,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6474,"byte_end":6489,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6494,"byte_end":6537,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6538,"byte_end":6570,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6571,"byte_end":6606,"line_start":161,"line_end":161,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6607,"byte_end":6650,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6651,"byte_end":6704,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6709,"byte_end":6787,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6788,"byte_end":6844,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6845,"byte_end":6848,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6849,"byte_end":6922,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6923,"byte_end":6943,"line_start":169,"line_end":169,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":6944,"byte_end":7019,"line_start":170,"line_end":170,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7020,"byte_end":7032,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7033,"byte_end":7113,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7114,"byte_end":7144,"line_start":173,"line_end":173,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7145,"byte_end":7148,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7149,"byte_end":7225,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7226,"byte_end":7238,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7243,"byte_end":7275,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7276,"byte_end":7309,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7310,"byte_end":7347,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7348,"byte_end":7385,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7386,"byte_end":7417,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7418,"byte_end":7451,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7452,"byte_end":7455,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7456,"byte_end":7527,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7528,"byte_end":7608,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7609,"byte_end":7697,"line_start":187,"line_end":187,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7698,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7723,"byte_end":7726,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7727,"byte_end":7802,"line_start":190,"line_end":190,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7807,"byte_end":7839,"line_start":192,"line_end":192,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7840,"byte_end":7877,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7878,"byte_end":7917,"line_start":194,"line_end":194,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7918,"byte_end":7955,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7956,"byte_end":7959,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":7960,"byte_end":8038,"line_start":197,"line_end":197,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8039,"byte_end":8123,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8124,"byte_end":8196,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8197,"byte_end":8274,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8275,"byte_end":8297,"line_start":201,"line_end":201,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8298,"byte_end":8301,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8302,"byte_end":8381,"line_start":203,"line_end":203,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8382,"byte_end":8460,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8461,"byte_end":8529,"line_start":205,"line_end":205,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8530,"byte_end":8608,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8609,"byte_end":8679,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8680,"byte_end":8683,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8684,"byte_end":8710,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8711,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8791,"byte_end":8831,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8832,"byte_end":8881,"line_start":213,"line_end":213,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8882,"byte_end":8938,"line_start":214,"line_end":214,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8939,"byte_end":8994,"line_start":215,"line_end":215,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8995,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":8999,"byte_end":9039,"line_start":217,"line_end":217,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9040,"byte_end":9043,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9044,"byte_end":9123,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9124,"byte_end":9201,"line_start":220,"line_end":220,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9202,"byte_end":9282,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9283,"byte_end":9357,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9358,"byte_end":9437,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9438,"byte_end":9515,"line_start":224,"line_end":224,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9516,"byte_end":9589,"line_start":225,"line_end":225,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9590,"byte_end":9670,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9671,"byte_end":9749,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9750,"byte_end":9828,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9829,"byte_end":9901,"line_start":229,"line_end":229,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":230,"line_end":230,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9937,"byte_end":9940,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":9941,"byte_end":10018,"line_start":232,"line_end":232,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10023,"byte_end":10063,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10064,"byte_end":10117,"line_start":235,"line_end":235,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10118,"byte_end":10121,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10122,"byte_end":10129,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10130,"byte_end":10148,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10149,"byte_end":10170,"line_start":239,"line_end":239,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10171,"byte_end":10215,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10220,"byte_end":10280,"line_start":242,"line_end":242,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10281,"byte_end":10333,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10334,"byte_end":10369,"line_start":244,"line_end":244,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10370,"byte_end":10381,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10386,"byte_end":10441,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10442,"byte_end":10517,"line_start":248,"line_end":248,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10518,"byte_end":10535,"line_start":249,"line_end":249,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10536,"byte_end":10573,"line_start":250,"line_end":250,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10574,"byte_end":10579,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10580,"byte_end":10587,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10592,"byte_end":10670,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10671,"byte_end":10747,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10748,"byte_end":10824,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10825,"byte_end":10849,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10850,"byte_end":10853,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10854,"byte_end":10888,"line_start":259,"line_end":259,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10889,"byte_end":10926,"line_start":260,"line_end":260,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10927,"byte_end":10930,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10931,"byte_end":10953,"line_start":262,"line_end":262,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10954,"byte_end":10957,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":10958,"byte_end":11037,"line_start":264,"line_end":264,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11038,"byte_end":11085,"line_start":265,"line_end":265,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11086,"byte_end":11089,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11090,"byte_end":11169,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11170,"byte_end":11250,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11251,"byte_end":11331,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11332,"byte_end":11403,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11404,"byte_end":11484,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11485,"byte_end":11560,"line_start":272,"line_end":272,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11561,"byte_end":11564,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11565,"byte_end":11645,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11646,"byte_end":11706,"line_start":275,"line_end":275,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11707,"byte_end":11710,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11711,"byte_end":11790,"line_start":277,"line_end":277,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11791,"byte_end":11860,"line_start":278,"line_end":278,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11861,"byte_end":11938,"line_start":279,"line_end":279,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11939,"byte_end":11995,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":11996,"byte_end":12076,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12077,"byte_end":12122,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12123,"byte_end":12202,"line_start":283,"line_end":283,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12203,"byte_end":12237,"line_start":284,"line_end":284,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12238,"byte_end":12241,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12242,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12271,"byte_end":12310,"line_start":287,"line_end":287,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12311,"byte_end":12352,"line_start":288,"line_end":288,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12353,"byte_end":12398,"line_start":289,"line_end":289,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12399,"byte_end":12423,"line_start":290,"line_end":290,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12424,"byte_end":12454,"line_start":291,"line_end":291,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12455,"byte_end":12481,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12482,"byte_end":12508,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12509,"byte_end":12536,"line_start":294,"line_end":294,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12537,"byte_end":12565,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12566,"byte_end":12590,"line_start":296,"line_end":296,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12591,"byte_end":12627,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12628,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12667,"byte_end":12670,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12671,"byte_end":12685,"line_start":300,"line_end":300,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12686,"byte_end":12689,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12690,"byte_end":12719,"line_start":302,"line_end":302,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12720,"byte_end":12723,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12724,"byte_end":12737,"line_start":304,"line_end":304,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12738,"byte_end":12770,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12771,"byte_end":12797,"line_start":306,"line_end":306,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12798,"byte_end":12801,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12802,"byte_end":12820,"line_start":308,"line_end":308,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12821,"byte_end":12884,"line_start":309,"line_end":309,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12885,"byte_end":12955,"line_start":310,"line_end":310,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12956,"byte_end":12959,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12960,"byte_end":12974,"line_start":312,"line_end":312,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":12975,"byte_end":13034,"line_start":313,"line_end":313,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13035,"byte_end":13038,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13039,"byte_end":13076,"line_start":315,"line_end":315,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13077,"byte_end":13117,"line_start":316,"line_end":316,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13118,"byte_end":13121,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13122,"byte_end":13202,"line_start":318,"line_end":318,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13203,"byte_end":13225,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13226,"byte_end":13289,"line_start":320,"line_end":320,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13290,"byte_end":13330,"line_start":321,"line_end":321,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13331,"byte_end":13381,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13382,"byte_end":13417,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13418,"byte_end":13453,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13454,"byte_end":13537,"line_start":325,"line_end":325,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13538,"byte_end":13573,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13574,"byte_end":13599,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13600,"byte_end":13622,"line_start":328,"line_end":328,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13623,"byte_end":13626,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13627,"byte_end":13669,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13670,"byte_end":13742,"line_start":331,"line_end":331,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13743,"byte_end":13821,"line_start":332,"line_end":332,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13822,"byte_end":13853,"line_start":333,"line_end":333,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13854,"byte_end":13875,"line_start":334,"line_end":334,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13876,"byte_end":13893,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13894,"byte_end":13909,"line_start":336,"line_end":336,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13910,"byte_end":13919,"line_start":337,"line_end":337,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13920,"byte_end":13925,"line_start":338,"line_end":338,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":13926,"byte_end":13933,"line_start":339,"line_end":339,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":884},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14122,"byte_end":14134,"line_start":345,"line_end":345,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1121},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1297}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18938,"byte_end":18960,"line_start":115,"line_end":115,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8675781,"byte_end":8675799,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8675801,"byte_end":8675854,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8675855,"byte_end":8675858,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8675859,"byte_end":8675937,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8675938,"byte_end":8676002,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676003,"byte_end":8676081,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676082,"byte_end":8676085,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676086,"byte_end":8676157,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676158,"byte_end":8676232,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676233,"byte_end":8676307,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676308,"byte_end":8676377,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676378,"byte_end":8676453,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676454,"byte_end":8676518,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676519,"byte_end":8676522,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676523,"byte_end":8676535,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676536,"byte_end":8676539,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676540,"byte_end":8676614,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676615,"byte_end":8676690,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676691,"byte_end":8676767,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676768,"byte_end":8676845,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676846,"byte_end":8676924,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676925,"byte_end":8676962,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676963,"byte_end":8676966,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: https://docs.rs/tokio-io/0.1/tokio_io/trait.AsyncRead.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8676967,"byte_end":8677044,"line_start":25,"line_end":25,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":903},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680324,"byte_end":8680336,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8678818,"byte_end":8678890,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8678891,"byte_end":8678945,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8678946,"byte_end":8678949,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8678950,"byte_end":8679012,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679013,"byte_end":8679016,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679017,"byte_end":8679049,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679050,"byte_end":8679053,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679054,"byte_end":8679086,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679087,"byte_end":8679090,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679091,"byte_end":8679165,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679166,"byte_end":8679243,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679244,"byte_end":8679300,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679301,"byte_end":8679304,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679305,"byte_end":8679379,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679380,"byte_end":8679457,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679458,"byte_end":8679535,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679536,"byte_end":8679614,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679615,"byte_end":8679670,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679671,"byte_end":8679674,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679675,"byte_end":8679760,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679761,"byte_end":8679860,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679861,"byte_end":8679864,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679865,"byte_end":8679877,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679878,"byte_end":8679881,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679882,"byte_end":8679960,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679961,"byte_end":8679993,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679994,"byte_end":8679997,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8679998,"byte_end":8680026,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680027,"byte_end":8680082,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680083,"byte_end":8680086,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680087,"byte_end":8680101,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680102,"byte_end":8680105,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680106,"byte_end":8680119,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680120,"byte_end":8680138,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680139,"byte_end":8680155,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680156,"byte_end":8680159,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680160,"byte_end":8680178,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680179,"byte_end":8680218,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680219,"byte_end":8680281,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680282,"byte_end":8680296,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680297,"byte_end":8680302,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/canonicalize.rs","byte_start":8680303,"byte_end":8680310,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681893,"byte_end":8681903,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680547,"byte_end":8680602,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680603,"byte_end":8680606,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680607,"byte_end":8680667,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680668,"byte_end":8680671,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680672,"byte_end":8680702,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680703,"byte_end":8680706,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680707,"byte_end":8680739,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680740,"byte_end":8680743,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680744,"byte_end":8680815,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680816,"byte_end":8680866,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680867,"byte_end":8680923,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680924,"byte_end":8680927,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8680928,"byte_end":8681013,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681014,"byte_end":8681017,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681018,"byte_end":8681095,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681096,"byte_end":8681173,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681174,"byte_end":8681225,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681226,"byte_end":8681229,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681230,"byte_end":8681242,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681243,"byte_end":8681246,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681247,"byte_end":8681325,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681326,"byte_end":8681358,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681359,"byte_end":8681362,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681363,"byte_end":8681422,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681423,"byte_end":8681501,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681502,"byte_end":8681572,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681573,"byte_end":8681589,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681590,"byte_end":8681618,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681619,"byte_end":8681622,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681623,"byte_end":8681670,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681671,"byte_end":8681674,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681675,"byte_end":8681689,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681690,"byte_end":8681693,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681694,"byte_end":8681707,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681708,"byte_end":8681726,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681727,"byte_end":8681743,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681744,"byte_end":8681747,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681748,"byte_end":8681766,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681767,"byte_end":8681806,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681807,"byte_end":8681850,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681851,"byte_end":8681865,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681866,"byte_end":8681871,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir.rs","byte_start":8681872,"byte_end":8681879,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683656,"byte_end":8683670,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682107,"byte_end":8682183,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682184,"byte_end":8682200,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682201,"byte_end":8682204,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682205,"byte_end":8682269,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682270,"byte_end":8682273,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682274,"byte_end":8682308,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682309,"byte_end":8682312,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682313,"byte_end":8682345,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682346,"byte_end":8682349,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682350,"byte_end":8682421,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682422,"byte_end":8682472,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682473,"byte_end":8682529,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682530,"byte_end":8682533,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682534,"byte_end":8682619,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682620,"byte_end":8682623,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682624,"byte_end":8682636,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682637,"byte_end":8682640,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682641,"byte_end":8682719,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682720,"byte_end":8682752,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682753,"byte_end":8682756,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682757,"byte_end":8682834,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682835,"byte_end":8682911,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682912,"byte_end":8682991,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8682992,"byte_end":8683027,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683028,"byte_end":8683031,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683032,"byte_end":8683105,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683106,"byte_end":8683192,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683193,"byte_end":8683274,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683275,"byte_end":8683352,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683353,"byte_end":8683393,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683394,"byte_end":8683397,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683398,"byte_end":8683441,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683442,"byte_end":8683445,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683446,"byte_end":8683460,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683461,"byte_end":8683464,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683465,"byte_end":8683478,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683479,"byte_end":8683497,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683498,"byte_end":8683501,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683502,"byte_end":8683520,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683521,"byte_end":8683565,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683566,"byte_end":8683613,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683614,"byte_end":8683628,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683629,"byte_end":8683634,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/create_dir_all.rs","byte_start":8683635,"byte_end":8683642,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684286,"byte_end":8684296,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8683878,"byte_end":8683936,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8683937,"byte_end":8683940,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Additional Unix-specific options are available via importing the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8683941,"byte_end":8684009,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`DirBuilderExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684010,"byte_end":8684038,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684039,"byte_end":8684042,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684043,"byte_end":8684116,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684117,"byte_end":8684139,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684140,"byte_end":8684143,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684144,"byte_end":8684190,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`DirBuilderExt`]: crate::fs::os::unix::DirBuilderExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684191,"byte_end":8684248,"line_start":15,"line_end":15,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684935,"byte_end":8684938,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684530,"byte_end":8684606,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684611,"byte_end":8684648,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684653,"byte_end":8684656,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684661,"byte_end":8684726,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684731,"byte_end":8684734,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684739,"byte_end":8684774,"line_start":32,"line_end":32,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684779,"byte_end":8684782,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684787,"byte_end":8684801,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684806,"byte_end":8684809,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684814,"byte_end":8684827,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684832,"byte_end":8684862,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684867,"byte_end":8684870,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684875,"byte_end":8684911,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684916,"byte_end":8684923,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685560,"byte_end":8685569,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684989,"byte_end":8685080,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685085,"byte_end":8685175,"line_start":46,"line_end":46,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685180,"byte_end":8685183,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685188,"byte_end":8685224,"line_start":48,"line_end":48,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685229,"byte_end":8685232,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685237,"byte_end":8685308,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685313,"byte_end":8685316,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685321,"byte_end":8685362,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685367,"byte_end":8685370,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685375,"byte_end":8685389,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685394,"byte_end":8685397,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685402,"byte_end":8685415,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685420,"byte_end":8685450,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685455,"byte_end":8685458,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685463,"byte_end":8685503,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685508,"byte_end":8685536,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685541,"byte_end":8685548,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686774,"byte_end":8686780,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<P: AsRef<Path>, '_>(&'_ Self, P) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685673,"byte_end":8685737,"line_start":67,"line_end":67,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685742,"byte_end":8685745,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685750,"byte_end":8685818,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685823,"byte_end":8685853,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685858,"byte_end":8685861,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685866,"byte_end":8685934,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685939,"byte_end":8685942,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685947,"byte_end":8685985,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685990,"byte_end":8685993,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8685998,"byte_end":8686010,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686015,"byte_end":8686018,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686023,"byte_end":8686087,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686092,"byte_end":8686095,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686100,"byte_end":8686146,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686151,"byte_end":8686217,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686222,"byte_end":8686242,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686247,"byte_end":8686321,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686326,"byte_end":8686355,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686360,"byte_end":8686391,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686396,"byte_end":8686399,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686404,"byte_end":8686418,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686423,"byte_end":8686426,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686431,"byte_end":8686444,"line_start":89,"line_end":89,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686449,"byte_end":8686479,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686484,"byte_end":8686500,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686505,"byte_end":8686508,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686513,"byte_end":8686531,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686536,"byte_end":8686575,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686580,"byte_end":8686605,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686610,"byte_end":8686638,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686643,"byte_end":8686682,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686687,"byte_end":8686707,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686712,"byte_end":8686715,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686720,"byte_end":8686734,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686739,"byte_end":8686744,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8686749,"byte_end":8686756,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":967},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689786,"byte_end":8689790,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687653,"byte_end":8687703,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687704,"byte_end":8687707,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687708,"byte_end":8687786,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687787,"byte_end":8687805,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687806,"byte_end":8687809,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687810,"byte_end":8687890,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687891,"byte_end":8687970,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8687971,"byte_end":8688016,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688017,"byte_end":8688020,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688021,"byte_end":8688097,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688098,"byte_end":8688177,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688178,"byte_end":8688253,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688254,"byte_end":8688330,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688331,"byte_end":8688408,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688409,"byte_end":8688486,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688487,"byte_end":8688508,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688509,"byte_end":8688512,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688513,"byte_end":8688586,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits. Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688587,"byte_end":8688667,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ import these traits through [the prelude].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688668,"byte_end":8688714,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688715,"byte_end":8688718,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688719,"byte_end":8688750,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688751,"byte_end":8688796,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688797,"byte_end":8688846,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688847,"byte_end":8688893,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688894,"byte_end":8688945,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8688946,"byte_end":8688999,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689000,"byte_end":8689033,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689034,"byte_end":8689037,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689038,"byte_end":8689052,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689053,"byte_end":8689056,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689057,"byte_end":8689116,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689117,"byte_end":8689120,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689121,"byte_end":8689134,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689135,"byte_end":8689159,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for write_all()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689160,"byte_end":8689205,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689206,"byte_end":8689209,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689210,"byte_end":8689255,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689256,"byte_end":8689306,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689307,"byte_end":8689351,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689352,"byte_end":8689364,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689365,"byte_end":8689372,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689373,"byte_end":8689380,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689381,"byte_end":8689384,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689385,"byte_end":8689430,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689431,"byte_end":8689434,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689435,"byte_end":8689448,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689449,"byte_end":8689473,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/ use tokio::prelude::*; // for read_to_end()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689474,"byte_end":8689521,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689522,"byte_end":8689525,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689526,"byte_end":8689571,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689572,"byte_end":8689620,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689621,"byte_end":8689624,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689625,"byte_end":8689655,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689656,"byte_end":8689699,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689700,"byte_end":8689703,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689704,"byte_end":8689745,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689746,"byte_end":8689758,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689759,"byte_end":8689766,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8689767,"byte_end":8689774,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691336,"byte_end":8691340,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690305,"byte_end":8690351,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690356,"byte_end":8690359,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690364,"byte_end":8690405,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690410,"byte_end":8690413,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690418,"byte_end":8690457,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690462,"byte_end":8690465,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690470,"byte_end":8690482,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690487,"byte_end":8690490,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690495,"byte_end":8690569,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690574,"byte_end":8690645,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690650,"byte_end":8690694,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690699,"byte_end":8690702,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690707,"byte_end":8690721,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690726,"byte_end":8690729,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690734,"byte_end":8690747,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690752,"byte_end":8690776,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690781,"byte_end":8690807,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690812,"byte_end":8690815,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690820,"byte_end":8690865,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690870,"byte_end":8690918,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690923,"byte_end":8690926,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690931,"byte_end":8690961,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690966,"byte_end":8691009,"line_start":127,"line_end":127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691014,"byte_end":8691017,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691022,"byte_end":8691063,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691068,"byte_end":8691080,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691085,"byte_end":8691092,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691097,"byte_end":8691104,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691109,"byte_end":8691112,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691117,"byte_end":8691189,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691194,"byte_end":8691197,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691202,"byte_end":8691262,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691267,"byte_end":8691318,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692558,"byte_end":8692564,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691537,"byte_end":8691573,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691578,"byte_end":8691581,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691586,"byte_end":8691662,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691667,"byte_end":8691685,"line_start":148,"line_end":148,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691690,"byte_end":8691693,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691698,"byte_end":8691739,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691744,"byte_end":8691747,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691752,"byte_end":8691791,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691796,"byte_end":8691799,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691804,"byte_end":8691816,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691821,"byte_end":8691824,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691829,"byte_end":8691902,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691907,"byte_end":8691962,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691967,"byte_end":8691970,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8691975,"byte_end":8692012,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692017,"byte_end":8692020,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692025,"byte_end":8692039,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692044,"byte_end":8692047,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692052,"byte_end":8692065,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692070,"byte_end":8692094,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692099,"byte_end":8692125,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692130,"byte_end":8692133,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692138,"byte_end":8692183,"line_start":167,"line_end":167,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692188,"byte_end":8692238,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692243,"byte_end":8692287,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692292,"byte_end":8692304,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692309,"byte_end":8692316,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692321,"byte_end":8692328,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692333,"byte_end":8692336,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692341,"byte_end":8692412,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692417,"byte_end":8692420,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692425,"byte_end":8692482,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692487,"byte_end":8692540,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693201,"byte_end":8693209,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692777,"byte_end":8692846,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692851,"byte_end":8692854,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692859,"byte_end":8692883,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692888,"byte_end":8692904,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692909,"byte_end":8692912,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692917,"byte_end":8692931,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692936,"byte_end":8692939,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692944,"byte_end":8692957,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8692962,"byte_end":8693037,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693042,"byte_end":8693057,"line_start":193,"line_end":193,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693062,"byte_end":8693121,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693126,"byte_end":8693177,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693182,"byte_end":8693189,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8694121,"byte_end":8694125,"line_start":229,"line_end":229,"column_start":18,"column_end":22},"name":"seek","qualname":"<File>::seek","value":"pub async fn seek<'_>(&'_ mut Self, SeekFrom) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Seeks to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Seeks to an offset, in bytes, in a stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693399,"byte_end":8693445,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693450,"byte_end":8693453,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693458,"byte_end":8693472,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693477,"byte_end":8693480,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693485,"byte_end":8693498,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693503,"byte_end":8693527,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693532,"byte_end":8693558,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693563,"byte_end":8693566,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693571,"byte_end":8693597,"line_start":213,"line_end":213,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693602,"byte_end":8693605,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693610,"byte_end":8693655,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693660,"byte_end":8693708,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693713,"byte_end":8693754,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693759,"byte_end":8693762,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693767,"byte_end":8693804,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693809,"byte_end":8693851,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693856,"byte_end":8693868,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693873,"byte_end":8693880,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693885,"byte_end":8693892,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693897,"byte_end":8693900,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The [`read_exact`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693905,"byte_end":8693976,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693981,"byte_end":8693984,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`read_exact`]: fn@crate::io::AsyncReadExt::read_exact","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8693989,"byte_end":8694047,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8694052,"byte_end":8694103,"line_start":228,"line_end":228,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695866,"byte_end":8695874,"line_start":290,"line_end":290,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695110,"byte_end":8695164,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695169,"byte_end":8695172,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695177,"byte_end":8695251,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695256,"byte_end":8695288,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695293,"byte_end":8695296,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695301,"byte_end":8695315,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695320,"byte_end":8695323,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695328,"byte_end":8695341,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695346,"byte_end":8695370,"line_start":275,"line_end":275,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695375,"byte_end":8695401,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695406,"byte_end":8695409,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695414,"byte_end":8695459,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695464,"byte_end":8695514,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695519,"byte_end":8695563,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695568,"byte_end":8695595,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695600,"byte_end":8695612,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695617,"byte_end":8695624,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695629,"byte_end":8695636,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695641,"byte_end":8695644,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695649,"byte_end":8695720,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695725,"byte_end":8695728,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695733,"byte_end":8695790,"line_start":288,"line_end":288,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8695795,"byte_end":8695848,"line_start":289,"line_end":289,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697015,"byte_end":8697024,"line_start":324,"line_end":324,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696041,"byte_end":8696107,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696112,"byte_end":8696160,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696165,"byte_end":8696168,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696173,"byte_end":8696248,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696253,"byte_end":8696325,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696330,"byte_end":8696345,"line_start":302,"line_end":302,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696350,"byte_end":8696353,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696358,"byte_end":8696436,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696441,"byte_end":8696444,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696449,"byte_end":8696463,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696468,"byte_end":8696471,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696476,"byte_end":8696489,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696494,"byte_end":8696518,"line_start":309,"line_end":309,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696523,"byte_end":8696549,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696554,"byte_end":8696557,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696562,"byte_end":8696607,"line_start":312,"line_end":312,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696612,"byte_end":8696662,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696667,"byte_end":8696711,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696716,"byte_end":8696744,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696749,"byte_end":8696761,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696766,"byte_end":8696773,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696778,"byte_end":8696785,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696790,"byte_end":8696793,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696798,"byte_end":8696869,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696874,"byte_end":8696877,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696882,"byte_end":8696939,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8696944,"byte_end":8696997,"line_start":323,"line_end":323,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698249,"byte_end":8698256,"line_start":361,"line_end":361,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ mut Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697192,"byte_end":8697284,"line_start":331,"line_end":331,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697289,"byte_end":8697292,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697297,"byte_end":8697372,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697377,"byte_end":8697449,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697454,"byte_end":8697530,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697535,"byte_end":8697547,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697552,"byte_end":8697555,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697560,"byte_end":8697572,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697577,"byte_end":8697580,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697585,"byte_end":8697653,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697658,"byte_end":8697670,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697675,"byte_end":8697678,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697683,"byte_end":8697697,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697702,"byte_end":8697705,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697710,"byte_end":8697723,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697728,"byte_end":8697752,"line_start":346,"line_end":346,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697757,"byte_end":8697783,"line_start":347,"line_end":347,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697788,"byte_end":8697791,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697796,"byte_end":8697841,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697846,"byte_end":8697896,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697901,"byte_end":8697945,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697950,"byte_end":8697978,"line_start":352,"line_end":352,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8697983,"byte_end":8697995,"line_start":353,"line_end":353,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698000,"byte_end":8698007,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698012,"byte_end":8698019,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698024,"byte_end":8698027,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698032,"byte_end":8698103,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698108,"byte_end":8698111,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698116,"byte_end":8698173,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8698178,"byte_end":8698231,"line_start":360,"line_end":360,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699742,"byte_end":8699750,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699356,"byte_end":8699403,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699408,"byte_end":8699411,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699416,"byte_end":8699430,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699435,"byte_end":8699438,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699443,"byte_end":8699456,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699461,"byte_end":8699485,"line_start":407,"line_end":407,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699490,"byte_end":8699493,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699498,"byte_end":8699543,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699548,"byte_end":8699592,"line_start":410,"line_end":410,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699597,"byte_end":8699639,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699644,"byte_end":8699647,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699652,"byte_end":8699683,"line_start":413,"line_end":413,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699688,"byte_end":8699700,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699705,"byte_end":8699712,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699717,"byte_end":8699724,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700374,"byte_end":8700383,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699878,"byte_end":8699954,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8699959,"byte_end":8700037,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700042,"byte_end":8700076,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700081,"byte_end":8700084,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700089,"byte_end":8700103,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700108,"byte_end":8700111,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700116,"byte_end":8700129,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700134,"byte_end":8700158,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700163,"byte_end":8700166,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700171,"byte_end":8700216,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700221,"byte_end":8700265,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700270,"byte_end":8700315,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700320,"byte_end":8700332,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700337,"byte_end":8700344,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700349,"byte_end":8700356,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701113,"byte_end":8701121,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700562,"byte_end":8700633,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700638,"byte_end":8700694,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700699,"byte_end":8700702,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700707,"byte_end":8700770,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700775,"byte_end":8700778,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700783,"byte_end":8700807,"line_start":448,"line_end":448,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700812,"byte_end":8700815,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700820,"byte_end":8700834,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700839,"byte_end":8700842,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700847,"byte_end":8700860,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700865,"byte_end":8700889,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700894,"byte_end":8700897,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700902,"byte_end":8700947,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8700952,"byte_end":8701002,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701007,"byte_end":8701054,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701059,"byte_end":8701071,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701076,"byte_end":8701083,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701088,"byte_end":8701095,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701819,"byte_end":8701831,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701265,"byte_end":8701339,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701344,"byte_end":8701347,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701352,"byte_end":8701376,"line_start":468,"line_end":468,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701381,"byte_end":8701384,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701389,"byte_end":8701401,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701406,"byte_end":8701409,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701414,"byte_end":8701480,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701485,"byte_end":8701512,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701517,"byte_end":8701520,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701525,"byte_end":8701539,"line_start":475,"line_end":475,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701544,"byte_end":8701547,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701552,"byte_end":8701565,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701570,"byte_end":8701594,"line_start":478,"line_end":478,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701599,"byte_end":8701602,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701607,"byte_end":8701652,"line_start":480,"line_end":480,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701657,"byte_end":8701707,"line_start":481,"line_end":481,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701712,"byte_end":8701766,"line_start":482,"line_end":482,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701771,"byte_end":8701783,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701788,"byte_end":8701795,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8701800,"byte_end":8701807,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703109,"byte_end":8703124,"line_start":525,"line_end":525,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702084,"byte_end":8702135,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702140,"byte_end":8702143,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702148,"byte_end":8702180,"line_start":498,"line_end":498,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702185,"byte_end":8702188,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702193,"byte_end":8702269,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702274,"byte_end":8702347,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702352,"byte_end":8702392,"line_start":502,"line_end":502,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702397,"byte_end":8702400,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702405,"byte_end":8702490,"line_start":504,"line_end":504,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702495,"byte_end":8702498,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702503,"byte_end":8702515,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702520,"byte_end":8702523,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702528,"byte_end":8702602,"line_start":508,"line_end":508,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702607,"byte_end":8702682,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702687,"byte_end":8702721,"line_start":510,"line_end":510,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702726,"byte_end":8702729,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702734,"byte_end":8702748,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702753,"byte_end":8702756,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702761,"byte_end":8702774,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702779,"byte_end":8702803,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702808,"byte_end":8702811,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702816,"byte_end":8702861,"line_start":517,"line_end":517,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702866,"byte_end":8702910,"line_start":518,"line_end":518,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702915,"byte_end":8702972,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8702977,"byte_end":8703006,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703011,"byte_end":8703050,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703055,"byte_end":8703067,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703072,"byte_end":8703079,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703084,"byte_end":8703091,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8713130,"byte_end":8713139,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712083,"byte_end":8712129,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712130,"byte_end":8712133,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712134,"byte_end":8712193,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712194,"byte_end":8712197,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712198,"byte_end":8712227,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712228,"byte_end":8712231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712232,"byte_end":8712311,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712312,"byte_end":8712388,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712389,"byte_end":8712392,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712393,"byte_end":8712425,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712426,"byte_end":8712429,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712430,"byte_end":8712500,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712501,"byte_end":8712550,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712551,"byte_end":8712607,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712608,"byte_end":8712611,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712612,"byte_end":8712697,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712698,"byte_end":8712701,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712702,"byte_end":8712714,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712715,"byte_end":8712718,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712719,"byte_end":8712797,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712798,"byte_end":8712830,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712831,"byte_end":8712834,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712835,"byte_end":8712887,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712888,"byte_end":8712891,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712892,"byte_end":8712906,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712907,"byte_end":8712910,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712911,"byte_end":8712924,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712925,"byte_end":8712943,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712944,"byte_end":8712947,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712948,"byte_end":8712966,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8712967,"byte_end":8713011,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8713012,"byte_end":8713087,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8713088,"byte_end":8713102,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8713103,"byte_end":8713108,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/hard_link.rs","byte_start":8713109,"byte_end":8713116,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714534,"byte_end":8714542,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713429,"byte_end":8713503,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713504,"byte_end":8713523,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713524,"byte_end":8713527,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713528,"byte_end":8713586,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713587,"byte_end":8713590,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713591,"byte_end":8713668,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713669,"byte_end":8713690,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713691,"byte_end":8713694,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713695,"byte_end":8713727,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713728,"byte_end":8713731,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713732,"byte_end":8713810,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713811,"byte_end":8713889,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713890,"byte_end":8713915,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713916,"byte_end":8713919,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713920,"byte_end":8713948,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8713949,"byte_end":8714034,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714035,"byte_end":8714038,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714039,"byte_end":8714051,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714052,"byte_end":8714055,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714056,"byte_end":8714134,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714135,"byte_end":8714167,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714168,"byte_end":8714171,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714172,"byte_end":8714242,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714243,"byte_end":8714271,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714272,"byte_end":8714275,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714276,"byte_end":8714290,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714291,"byte_end":8714294,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714295,"byte_end":8714313,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714314,"byte_end":8714332,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714333,"byte_end":8714336,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714337,"byte_end":8714355,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714356,"byte_end":8714400,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714401,"byte_end":8714463,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714464,"byte_end":8714491,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714492,"byte_end":8714506,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714507,"byte_end":8714512,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/metadata.rs","byte_start":8714513,"byte_end":8714520,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716638,"byte_end":8716649,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8714753,"byte_end":8714827,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8714828,"byte_end":8714831,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8714832,"byte_end":8714910,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8714911,"byte_end":8714985,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8714986,"byte_end":8715063,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715064,"byte_end":8715076,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715077,"byte_end":8715080,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715081,"byte_end":8715157,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715158,"byte_end":8715237,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715238,"byte_end":8715306,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715307,"byte_end":8715385,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715386,"byte_end":8715393,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715394,"byte_end":8715397,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715398,"byte_end":8715474,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715475,"byte_end":8715497,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715498,"byte_end":8715501,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715502,"byte_end":8715581,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715582,"byte_end":8715617,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715618,"byte_end":8715621,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715622,"byte_end":8715651,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715652,"byte_end":8715683,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715684,"byte_end":8715713,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715714,"byte_end":8715732,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715733,"byte_end":8715763,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715764,"byte_end":8715798,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715799,"byte_end":8715849,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715850,"byte_end":8715853,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715854,"byte_end":8715868,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715869,"byte_end":8715872,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715873,"byte_end":8715900,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715901,"byte_end":8715904,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715905,"byte_end":8715918,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715919,"byte_end":8715950,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715951,"byte_end":8715967,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715968,"byte_end":8715971,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715972,"byte_end":8715990,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8715991,"byte_end":8716030,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716031,"byte_end":8716068,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716069,"byte_end":8716092,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716093,"byte_end":8716121,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716122,"byte_end":8716142,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716143,"byte_end":8716146,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716147,"byte_end":8716161,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716162,"byte_end":8716167,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716168,"byte_end":8716175,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716176,"byte_end":8716179,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716180,"byte_end":8716257,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716258,"byte_end":8716276,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716277,"byte_end":8716280,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716281,"byte_end":8716294,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716295,"byte_end":8716326,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716327,"byte_end":8716343,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716344,"byte_end":8716347,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716348,"byte_end":8716366,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716367,"byte_end":8716406,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716407,"byte_end":8716444,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716445,"byte_end":8716468,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716469,"byte_end":8716493,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716494,"byte_end":8716519,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716520,"byte_end":8716548,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716549,"byte_end":8716569,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716570,"byte_end":8716573,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716574,"byte_end":8716588,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716589,"byte_end":8716594,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716595,"byte_end":8716602,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717170,"byte_end":8717173,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716697,"byte_end":8716760,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716765,"byte_end":8716768,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716773,"byte_end":8716818,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716823,"byte_end":8716826,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716831,"byte_end":8716897,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716902,"byte_end":8716905,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716910,"byte_end":8716946,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716951,"byte_end":8716954,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716959,"byte_end":8716973,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716978,"byte_end":8716981,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716986,"byte_end":8716999,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717004,"byte_end":8717035,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717040,"byte_end":8717043,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717048,"byte_end":8717089,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717094,"byte_end":8717146,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717151,"byte_end":8717158,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717902,"byte_end":8717906,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717253,"byte_end":8717289,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717294,"byte_end":8717297,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717302,"byte_end":8717367,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717372,"byte_end":8717398,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717403,"byte_end":8717406,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717411,"byte_end":8717478,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717483,"byte_end":8717486,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717491,"byte_end":8717528,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717533,"byte_end":8717536,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717541,"byte_end":8717555,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717560,"byte_end":8717563,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717568,"byte_end":8717581,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717586,"byte_end":8717617,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717622,"byte_end":8717638,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717643,"byte_end":8717646,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717651,"byte_end":8717669,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717674,"byte_end":8717713,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717718,"byte_end":8717755,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717760,"byte_end":8717783,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717788,"byte_end":8717816,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717821,"byte_end":8717841,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717846,"byte_end":8717849,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717854,"byte_end":8717868,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717873,"byte_end":8717878,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8717883,"byte_end":8717890,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718657,"byte_end":8718662,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718003,"byte_end":8718040,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718045,"byte_end":8718048,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718053,"byte_end":8718118,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718123,"byte_end":8718150,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718155,"byte_end":8718158,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718163,"byte_end":8718231,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718236,"byte_end":8718239,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718244,"byte_end":8718282,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718287,"byte_end":8718290,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718295,"byte_end":8718309,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718314,"byte_end":8718317,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718322,"byte_end":8718335,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718340,"byte_end":8718371,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718376,"byte_end":8718392,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718397,"byte_end":8718400,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718405,"byte_end":8718423,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718428,"byte_end":8718467,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718472,"byte_end":8718509,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718514,"byte_end":8718538,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718543,"byte_end":8718571,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718576,"byte_end":8718596,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718601,"byte_end":8718604,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718609,"byte_end":8718623,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718628,"byte_end":8718633,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718638,"byte_end":8718645,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720892,"byte_end":8720898,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718762,"byte_end":8718802,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718807,"byte_end":8718810,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718815,"byte_end":8718890,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718895,"byte_end":8718951,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8718956,"byte_end":8719023,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719028,"byte_end":8719048,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719053,"byte_end":8719056,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719061,"byte_end":8719138,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719143,"byte_end":8719219,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719224,"byte_end":8719233,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719238,"byte_end":8719241,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719246,"byte_end":8719320,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719325,"byte_end":8719396,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719401,"byte_end":8719477,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719482,"byte_end":8719546,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719551,"byte_end":8719608,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719613,"byte_end":8719616,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719621,"byte_end":8719696,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719701,"byte_end":8719779,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719784,"byte_end":8719857,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719862,"byte_end":8719949,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719954,"byte_end":8719957,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8719962,"byte_end":8720031,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720036,"byte_end":8720039,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720044,"byte_end":8720083,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720088,"byte_end":8720091,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720096,"byte_end":8720107,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720112,"byte_end":8720115,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720120,"byte_end":8720201,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720206,"byte_end":8720226,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720231,"byte_end":8720234,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720239,"byte_end":8720287,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720292,"byte_end":8720340,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720345,"byte_end":8720388,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720393,"byte_end":8720428,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720433,"byte_end":8720476,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720481,"byte_end":8720516,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720521,"byte_end":8720524,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720529,"byte_end":8720543,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720548,"byte_end":8720551,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720556,"byte_end":8720569,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720574,"byte_end":8720605,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720610,"byte_end":8720626,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720631,"byte_end":8720634,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720639,"byte_end":8720657,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720662,"byte_end":8720701,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720706,"byte_end":8720743,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720748,"byte_end":8720773,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720778,"byte_end":8720806,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720811,"byte_end":8720831,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720836,"byte_end":8720839,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720844,"byte_end":8720858,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720863,"byte_end":8720868,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8720873,"byte_end":8720880,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721815,"byte_end":8721823,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721001,"byte_end":8721052,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721057,"byte_end":8721060,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721065,"byte_end":8721139,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721144,"byte_end":8721190,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721195,"byte_end":8721198,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721203,"byte_end":8721270,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721275,"byte_end":8721278,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721283,"byte_end":8721354,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721359,"byte_end":8721362,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721367,"byte_end":8721408,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721413,"byte_end":8721416,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721421,"byte_end":8721435,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721440,"byte_end":8721443,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721448,"byte_end":8721461,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721466,"byte_end":8721497,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721502,"byte_end":8721518,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721523,"byte_end":8721526,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721531,"byte_end":8721549,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721554,"byte_end":8721593,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721598,"byte_end":8721635,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721640,"byte_end":8721664,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721669,"byte_end":8721696,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721701,"byte_end":8721729,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721734,"byte_end":8721754,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721759,"byte_end":8721762,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721767,"byte_end":8721781,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721786,"byte_end":8721791,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721796,"byte_end":8721803,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722820,"byte_end":8722826,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721932,"byte_end":8721976,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721981,"byte_end":8721984,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8721989,"byte_end":8722061,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722066,"byte_end":8722097,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722102,"byte_end":8722105,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722110,"byte_end":8722186,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722191,"byte_end":8722203,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722208,"byte_end":8722211,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722216,"byte_end":8722285,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722290,"byte_end":8722293,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722298,"byte_end":8722337,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722342,"byte_end":8722375,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722380,"byte_end":8722415,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722420,"byte_end":8722423,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722428,"byte_end":8722442,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722447,"byte_end":8722450,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722455,"byte_end":8722468,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722473,"byte_end":8722504,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722509,"byte_end":8722525,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722530,"byte_end":8722533,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722538,"byte_end":8722556,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722561,"byte_end":8722600,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722605,"byte_end":8722642,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722647,"byte_end":8722671,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722676,"byte_end":8722701,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722706,"byte_end":8722734,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722739,"byte_end":8722759,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722764,"byte_end":8722767,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722772,"byte_end":8722786,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722791,"byte_end":8722796,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722801,"byte_end":8722808,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724225,"byte_end":8724235,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722929,"byte_end":8722977,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722982,"byte_end":8722985,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8722990,"byte_end":8723063,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723068,"byte_end":8723140,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723145,"byte_end":8723148,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723153,"byte_end":8723227,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723232,"byte_end":8723304,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723309,"byte_end":8723375,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723380,"byte_end":8723383,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723388,"byte_end":8723460,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723465,"byte_end":8723477,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723482,"byte_end":8723485,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723490,"byte_end":8723566,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723571,"byte_end":8723584,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723589,"byte_end":8723592,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723597,"byte_end":8723670,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723675,"byte_end":8723678,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723683,"byte_end":8723726,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723731,"byte_end":8723769,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723774,"byte_end":8723816,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723821,"byte_end":8723824,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723829,"byte_end":8723843,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723848,"byte_end":8723851,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723856,"byte_end":8723869,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723874,"byte_end":8723905,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723910,"byte_end":8723926,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723931,"byte_end":8723934,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723939,"byte_end":8723957,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8723962,"byte_end":8724001,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724006,"byte_end":8724043,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724048,"byte_end":8724072,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724077,"byte_end":8724106,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724111,"byte_end":8724139,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724144,"byte_end":8724164,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724169,"byte_end":8724172,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724177,"byte_end":8724191,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724196,"byte_end":8724201,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724206,"byte_end":8724213,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726687,"byte_end":8726691,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724350,"byte_end":8724414,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724419,"byte_end":8724422,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724427,"byte_end":8724494,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724499,"byte_end":8724502,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724507,"byte_end":8724544,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724549,"byte_end":8724552,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724557,"byte_end":8724569,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724574,"byte_end":8724577,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724582,"byte_end":8724648,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724653,"byte_end":8724728,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724733,"byte_end":8724807,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724812,"byte_end":8724887,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724892,"byte_end":8724946,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724951,"byte_end":8724954,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8724959,"byte_end":8725033,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725038,"byte_end":8725067,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725072,"byte_end":8725145,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725150,"byte_end":8725166,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725171,"byte_end":8725245,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725250,"byte_end":8725283,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725288,"byte_end":8725360,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725365,"byte_end":8725414,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725419,"byte_end":8725491,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725496,"byte_end":8725509,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725514,"byte_end":8725584,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725589,"byte_end":8725643,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725648,"byte_end":8725723,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725728,"byte_end":8725764,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725769,"byte_end":8725838,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725843,"byte_end":8725916,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725921,"byte_end":8725988,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8725993,"byte_end":8726044,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726049,"byte_end":8726052,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726057,"byte_end":8726071,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726076,"byte_end":8726079,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726084,"byte_end":8726097,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726102,"byte_end":8726133,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726138,"byte_end":8726154,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726159,"byte_end":8726162,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726167,"byte_end":8726185,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726190,"byte_end":8726229,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726234,"byte_end":8726295,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726300,"byte_end":8726314,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726319,"byte_end":8726324,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726329,"byte_end":8726336,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726341,"byte_end":8726344,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726349,"byte_end":8726386,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726391,"byte_end":8726447,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726452,"byte_end":8726506,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726511,"byte_end":8726557,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726562,"byte_end":8726602,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8726607,"byte_end":8726669,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::fs::os","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","parent":null,"children":[{"krate":0,"index":1092}],"decl_id":null,"docs":" OS-specific functionality.\n","sig":null,"attributes":[{"value":"/ OS-specific functionality.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8727358,"byte_end":8727388,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1092},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::fs::os::unix","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1120}],"decl_id":null,"docs":" Unix-specific extensions to primitives in the `tokio_fs` module.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8727390,"byte_end":8727402,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/ Unix-specific extensions to primitives in the `tokio_fs` module.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/mod.rs","byte_start":8727452,"byte_end":8727520,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8728021,"byte_end":8728028,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::os::unix::symlink::symlink","value":"pub async fn symlink<impl AsRef<Path>: AsRef<Path>,\n                     impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                    impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727768,"byte_end":8727818,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727819,"byte_end":8727822,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727823,"byte_end":8727893,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727894,"byte_end":8727897,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727898,"byte_end":8727965,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727966,"byte_end":8727969,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/symlink.rs","byte_start":8727970,"byte_end":8728007,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1107},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728619,"byte_end":8728633,"line_start":11,"line_end":11,"column_start":11,"column_end":25},"name":"OpenOptionsExt","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt","value":"OpenOptionsExt","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" Unix-specific extensions to [`fs::OpenOptions`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`fs::OpenOptions`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728345,"byte_end":8728397,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728398,"byte_end":8728401,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This mirrors the definition of [`std::os::unix::fs::OpenOptionsExt`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728402,"byte_end":8728475,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728476,"byte_end":8728479,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728480,"byte_end":8728483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`fs::OpenOptions`]: crate::fs::OpenOptions","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728484,"byte_end":8728531,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ [`std::os::unix::fs::OpenOptionsExt`]: std::os::unix::fs::OpenOptionsExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728532,"byte_end":8728608,"line_start":10,"line_end":10,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729527,"byte_end":8729531,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[{"value":"/ Sets the mode bits that a new file will be created with.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728640,"byte_end":8728700,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728705,"byte_end":8728708,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If a new file is created as part of an `OpenOptions::open` call then this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728713,"byte_end":8728790,"line_start":14,"line_end":14,"column_start":5,"column_end":82}},{"value":"/ specified `mode` will be used as the permission bits for the new file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728795,"byte_end":8728869,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ If no `mode` is set, the default of `0o666` will be used.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728874,"byte_end":8728935,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ The operating system masks out bits with the system's `umask`, to produce","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8728940,"byte_end":8729017,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ the final permissions.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729022,"byte_end":8729048,"line_start":18,"line_end":18,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729053,"byte_end":8729056,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729061,"byte_end":8729075,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729080,"byte_end":8729083,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729088,"byte_end":8729101,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729106,"byte_end":8729137,"line_start":23,"line_end":23,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729142,"byte_end":8729186,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729191,"byte_end":8729207,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729212,"byte_end":8729215,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729220,"byte_end":8729238,"line_start":27,"line_end":27,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729243,"byte_end":8729282,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729287,"byte_end":8729332,"line_start":29,"line_end":29,"column_start":5,"column_end":50}},{"value":"/     options.mode(0o644); // Give read/write for owner and read for others.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729337,"byte_end":8729415,"line_start":30,"line_end":30,"column_start":5,"column_end":83}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729420,"byte_end":8729470,"line_start":31,"line_end":31,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729475,"byte_end":8729478,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729483,"byte_end":8729497,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729502,"byte_end":8729507,"line_start":34,"line_end":34,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729512,"byte_end":8729519,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730496,"byte_end":8730508,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"custom_flags","qualname":"::fs::os::unix::open_options_ext::OpenOptionsExt::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut Self","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[{"value":"/ Pass custom flags to the `flags` argument of `open`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729573,"byte_end":8729629,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729634,"byte_end":8729637,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The bits that define the access mode are masked out with `O_ACCMODE`, to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729642,"byte_end":8729718,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ ensure they do not interfere with the access mode set by Rusts options.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729723,"byte_end":8729798,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729803,"byte_end":8729806,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Custom flags can only set flags, not remove flags set by Rusts options.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729811,"byte_end":8729886,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ This options overwrites any previously set custom flags.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729891,"byte_end":8729951,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729956,"byte_end":8729959,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729964,"byte_end":8729978,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729983,"byte_end":8729986,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8729991,"byte_end":8730004,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/ use libc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730009,"byte_end":8730022,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730027,"byte_end":8730058,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/ use tokio::fs::os::unix::OpenOptionsExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730063,"byte_end":8730107,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730112,"byte_end":8730128,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730133,"byte_end":8730136,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730141,"byte_end":8730159,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730164,"byte_end":8730203,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/     let mut options = OpenOptions::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730208,"byte_end":8730253,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/     options.write(true);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730258,"byte_end":8730286,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/     if cfg!(unix) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730291,"byte_end":8730314,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/         options.custom_flags(libc::O_NOFOLLOW);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730319,"byte_end":8730370,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730375,"byte_end":8730384,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/     let file = options.open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730389,"byte_end":8730439,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730444,"byte_end":8730447,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730452,"byte_end":8730466,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730471,"byte_end":8730476,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730481,"byte_end":8730488,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1116},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8730984,"byte_end":8730997,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"DirBuilderExt","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt","value":"DirBuilderExt","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":" Unix-specific extensions to [`DirBuilder`].","sig":null,"attributes":[{"value":"/ Unix-specific extensions to [`DirBuilder`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8730880,"byte_end":8730927,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8730928,"byte_end":8730931,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DirBuilder`]: crate::fs::DirBuilder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8730932,"byte_end":8730973,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731346,"byte_end":8731350,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"mode","qualname":"::fs::os::unix::dir_builder_ext::DirBuilderExt::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":{"krate":0,"index":1116},"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[{"value":"/ Sets the mode to create new directories with.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731004,"byte_end":8731053,"line_start":7,"line_end":7,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731058,"byte_end":8731061,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This option defaults to 0o777.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731066,"byte_end":8731100,"line_start":9,"line_end":9,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731105,"byte_end":8731108,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731113,"byte_end":8731127,"line_start":11,"line_end":11,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731132,"byte_end":8731135,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731140,"byte_end":8731143,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731148,"byte_end":8731161,"line_start":14,"line_end":14,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731166,"byte_end":8731196,"line_start":15,"line_end":15,"column_start":5,"column_end":35}},{"value":"/ use tokio::fs::os::unix::DirBuilderExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731201,"byte_end":8731244,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731249,"byte_end":8731252,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731257,"byte_end":8731297,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/ builder.mode(0o775);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731302,"byte_end":8731326,"line_start":19,"line_end":19,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731331,"byte_end":8731338,"line_start":20,"line_end":20,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1126},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732907,"byte_end":8732911,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731583,"byte_end":8731643,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731644,"byte_end":8731647,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731648,"byte_end":8731702,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731703,"byte_end":8731706,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731707,"byte_end":8731731,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731732,"byte_end":8731735,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731736,"byte_end":8731815,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731816,"byte_end":8731895,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731896,"byte_end":8731976,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8731977,"byte_end":8732029,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732030,"byte_end":8732033,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732034,"byte_end":8732071,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732072,"byte_end":8732129,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732130,"byte_end":8732133,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732134,"byte_end":8732146,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732147,"byte_end":8732150,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732151,"byte_end":8732223,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732224,"byte_end":8732297,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732298,"byte_end":8732301,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732302,"byte_end":8732353,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732354,"byte_end":8732357,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732358,"byte_end":8732430,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732431,"byte_end":8732483,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732484,"byte_end":8732487,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732488,"byte_end":8732551,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732552,"byte_end":8732555,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732556,"byte_end":8732570,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732571,"byte_end":8732574,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732575,"byte_end":8732588,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732589,"byte_end":8732607,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732608,"byte_end":8732637,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732638,"byte_end":8732641,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732642,"byte_end":8732660,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732661,"byte_end":8732734,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732735,"byte_end":8732789,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732790,"byte_end":8732864,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732865,"byte_end":8732879,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732880,"byte_end":8732885,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read.rs","byte_start":8732886,"byte_end":8732893,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733497,"byte_end":8733505,"line_start":18,"line_end":18,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733349,"byte_end":8733406,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733407,"byte_end":8733410,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733411,"byte_end":8733483,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734317,"byte_end":8734324,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of the entries in a directory.","sig":null,"attributes":[{"value":"/ Stream of the entries in a directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733699,"byte_end":8733740,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733741,"byte_end":8733744,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This stream is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733745,"byte_end":8733822,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733823,"byte_end":8733887,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/ information like the entry's path and possibly other metadata can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733888,"byte_end":8733960,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ learned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733961,"byte_end":8733973,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733974,"byte_end":8733977,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733978,"byte_end":8733990,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733991,"byte_end":8733994,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This [`Stream`] will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8733995,"byte_end":8734074,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734075,"byte_end":8734105,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734106,"byte_end":8734109,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734110,"byte_end":8734136,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734137,"byte_end":8734163,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734164,"byte_end":8734201,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734202,"byte_end":8734239,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734257,"byte_end":8734305,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734578,"byte_end":8734588,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734509,"byte_end":8734560,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734760,"byte_end":8734775,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736531,"byte_end":8736539,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736080,"byte_end":8736127,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736128,"byte_end":8736131,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736132,"byte_end":8736163,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736164,"byte_end":8736167,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736168,"byte_end":8736245,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736246,"byte_end":8736264,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736265,"byte_end":8736268,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736269,"byte_end":8736347,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736348,"byte_end":8736427,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736428,"byte_end":8736502,"line_start":109,"line_end":109,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737371,"byte_end":8737375,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736586,"byte_end":8736651,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736656,"byte_end":8736659,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736664,"byte_end":8736735,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736740,"byte_end":8736776,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736781,"byte_end":8736784,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736789,"byte_end":8736803,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736808,"byte_end":8736811,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736816,"byte_end":8736829,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736834,"byte_end":8736852,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736857,"byte_end":8736860,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736865,"byte_end":8736910,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736915,"byte_end":8736962,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736967,"byte_end":8736970,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736975,"byte_end":8737032,"line_start":127,"line_end":127,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737037,"byte_end":8737076,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737081,"byte_end":8737086,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737091,"byte_end":8737103,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737108,"byte_end":8737115,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737120,"byte_end":8737127,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737132,"byte_end":8737135,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737140,"byte_end":8737168,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737173,"byte_end":8737176,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737181,"byte_end":8737192,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737197,"byte_end":8737217,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737222,"byte_end":8737238,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737243,"byte_end":8737265,"line_start":139,"line_end":139,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737270,"byte_end":8737277,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737282,"byte_end":8737285,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737290,"byte_end":8737359,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737895,"byte_end":8737904,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737429,"byte_end":8737501,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737506,"byte_end":8737533,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737538,"byte_end":8737541,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737546,"byte_end":8737560,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737565,"byte_end":8737568,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737573,"byte_end":8737580,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737585,"byte_end":8737603,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737608,"byte_end":8737611,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737616,"byte_end":8737661,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737666,"byte_end":8737713,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737718,"byte_end":8737721,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737726,"byte_end":8737783,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737788,"byte_end":8737832,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737837,"byte_end":8737842,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737847,"byte_end":8737859,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737864,"byte_end":8737871,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737876,"byte_end":8737883,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739001,"byte_end":8739009,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8737964,"byte_end":8738028,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738033,"byte_end":8738036,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738041,"byte_end":8738111,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738116,"byte_end":8738128,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738133,"byte_end":8738136,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738141,"byte_end":8738173,"line_start":173,"line_end":173,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738178,"byte_end":8738181,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738186,"byte_end":8738254,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738259,"byte_end":8738328,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738333,"byte_end":8738376,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738381,"byte_end":8738384,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738389,"byte_end":8738403,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738408,"byte_end":8738411,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738416,"byte_end":8738423,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738428,"byte_end":8738446,"line_start":182,"line_end":182,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738451,"byte_end":8738454,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738459,"byte_end":8738504,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738509,"byte_end":8738556,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738561,"byte_end":8738564,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738569,"byte_end":8738626,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738631,"byte_end":8738685,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738690,"byte_end":8738744,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738749,"byte_end":8738822,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738827,"byte_end":8738843,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738848,"byte_end":8738918,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738923,"byte_end":8738932,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738937,"byte_end":8738942,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738947,"byte_end":8738959,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738964,"byte_end":8738971,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8738976,"byte_end":8738983,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740193,"byte_end":8740202,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739135,"byte_end":8739200,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739205,"byte_end":8739208,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739213,"byte_end":8739283,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739288,"byte_end":8739300,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739305,"byte_end":8739308,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739313,"byte_end":8739345,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739350,"byte_end":8739353,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739358,"byte_end":8739428,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739433,"byte_end":8739509,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739514,"byte_end":8739581,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739586,"byte_end":8739589,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739594,"byte_end":8739608,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739613,"byte_end":8739616,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739621,"byte_end":8739628,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739633,"byte_end":8739651,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739656,"byte_end":8739659,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739664,"byte_end":8739709,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739714,"byte_end":8739761,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739766,"byte_end":8739769,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739774,"byte_end":8739831,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739836,"byte_end":8739892,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739897,"byte_end":8739949,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8739954,"byte_end":8740014,"line_start":225,"line_end":225,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740019,"byte_end":8740035,"line_start":226,"line_end":226,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740040,"byte_end":8740110,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740115,"byte_end":8740124,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740129,"byte_end":8740134,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740139,"byte_end":8740151,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740156,"byte_end":8740163,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740168,"byte_end":8740175,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740683,"byte_end":8740692,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740501,"byte_end":8740571,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740572,"byte_end":8740575,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740576,"byte_end":8740635,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740636,"byte_end":8740639,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_link.rs","byte_start":8740640,"byte_end":8740669,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741351,"byte_end":8741365,"line_start":21,"line_end":21,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8740893,"byte_end":8740968,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8740969,"byte_end":8741019,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741020,"byte_end":8741023,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::read_to_string`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741024,"byte_end":8741086,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741087,"byte_end":8741090,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741091,"byte_end":8741105,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741106,"byte_end":8741109,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741110,"byte_end":8741123,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741124,"byte_end":8741142,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741143,"byte_end":8741146,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741147,"byte_end":8741192,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741193,"byte_end":8741249,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741250,"byte_end":8741308,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741309,"byte_end":8741321,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741322,"byte_end":8741329,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_to_string.rs","byte_start":8741330,"byte_end":8741337,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8741713,"byte_end":8741723,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8741577,"byte_end":8741618,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8741619,"byte_end":8741622,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir.rs","byte_start":8741623,"byte_end":8741699,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8742137,"byte_end":8742151,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8741927,"byte_end":8742012,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8742013,"byte_end":8742016,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8742017,"byte_end":8742081,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8742082,"byte_end":8742085,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_dir_all.rs","byte_start":8742086,"byte_end":8742123,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742688,"byte_end":8742699,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742359,"byte_end":8742398,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742399,"byte_end":8742402,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742403,"byte_end":8742481,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742482,"byte_end":8742558,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742559,"byte_end":8742572,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742573,"byte_end":8742576,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742577,"byte_end":8742638,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742639,"byte_end":8742642,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/remove_file.rs","byte_start":8742643,"byte_end":8742674,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8743167,"byte_end":8743173,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8742904,"byte_end":8742981,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8742982,"byte_end":8743006,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8743007,"byte_end":8743010,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8743011,"byte_end":8743080,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8743081,"byte_end":8743084,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/rename.rs","byte_start":8743085,"byte_end":8743153,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743649,"byte_end":8743664,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743463,"byte_end":8743522,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743523,"byte_end":8743526,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743527,"byte_end":8743592,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743593,"byte_end":8743596,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/set_permissions.rs","byte_start":8743597,"byte_end":8743635,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1263},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8744093,"byte_end":8744109,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8743916,"byte_end":8743964,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8743965,"byte_end":8743968,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8743969,"byte_end":8744035,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8744036,"byte_end":8744039,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/symlink_metadata.rs","byte_start":8744040,"byte_end":8744079,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744679,"byte_end":8744684,"line_start":20,"line_end":20,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<C: AsRef<[u8]> + Unpin,\n                   impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>, C)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744313,"byte_end":8744388,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744389,"byte_end":8744422,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744423,"byte_end":8744426,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::write`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744427,"byte_end":8744480,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744481,"byte_end":8744484,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744485,"byte_end":8744499,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744500,"byte_end":8744503,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744504,"byte_end":8744517,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744518,"byte_end":8744536,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744537,"byte_end":8744540,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744541,"byte_end":8744586,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744587,"byte_end":8744636,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744637,"byte_end":8744649,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744650,"byte_end":8744657,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/write.rs","byte_start":8744658,"byte_end":8744665,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745411,"byte_end":8745415,"line_start":20,"line_end":20,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<P: AsRef<Path>, Q: AsRef<Path>>(P, Q) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits of the original file to the destination file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8744966,"byte_end":8745108,"line_start":4,"line_end":4,"column_start":1,"column_end":143}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745109,"byte_end":8745161,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745162,"byte_end":8745165,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of `std::fs::copy`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745166,"byte_end":8745218,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745219,"byte_end":8745222,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745223,"byte_end":8745237,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745238,"byte_end":8745241,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745242,"byte_end":8745255,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745256,"byte_end":8745274,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745275,"byte_end":8745278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745279,"byte_end":8745324,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745325,"byte_end":8745367,"line_start":15,"line_end":15,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745368,"byte_end":8745380,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745381,"byte_end":8745388,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/copy.rs","byte_start":8745389,"byte_end":8745396,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31010,"byte_end":31046,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/mod.rs","byte_start":31048,"byte_end":31072,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31537,"byte_end":31543,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31502,"byte_end":31532,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31597,"byte_end":31601,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31554,"byte_end":31592,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31763,"byte_end":31767,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31620,"byte_end":31686,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31691,"byte_end":31758,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1355},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31473,"byte_end":31482,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31409,"byte_end":31446,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31930,"byte_end":31940,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31885,"byte_end":31922,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32343,"byte_end":32353,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32059,"byte_end":32144,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32149,"byte_end":32220,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32225,"byte_end":32298,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32303,"byte_end":32331,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32731,"byte_end":32742,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32610,"byte_end":32677,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32682,"byte_end":32705,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32710,"byte_end":32719,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33954,"byte_end":33960,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33902,"byte_end":33942,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34090,"byte_end":34097,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34011,"byte_end":34082,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34862,"byte_end":34867,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34633,"byte_end":34674,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34675,"byte_end":34678,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34679,"byte_end":34756,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34825,"byte_end":34850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":1521},{"krate":0,"index":1617},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1704},{"krate":0,"index":1740},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1802},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":3197}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37622,"byte_end":37699,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37700,"byte_end":37703,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37704,"byte_end":37775,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37776,"byte_end":37856,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37857,"byte_end":37931,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37932,"byte_end":37935,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37936,"byte_end":37966,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37967,"byte_end":37970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":37971,"byte_end":38051,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38052,"byte_end":38129,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38130,"byte_end":38207,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38208,"byte_end":38288,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38289,"byte_end":38367,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38368,"byte_end":38433,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38434,"byte_end":38437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38438,"byte_end":38510,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38511,"byte_end":38578,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38579,"byte_end":38658,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38659,"byte_end":38733,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38734,"byte_end":38808,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38809,"byte_end":38826,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38827,"byte_end":38830,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38831,"byte_end":38895,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38896,"byte_end":38971,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":38972,"byte_end":39047,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39048,"byte_end":39125,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39126,"byte_end":39129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39130,"byte_end":39206,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39207,"byte_end":39282,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39283,"byte_end":39363,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39364,"byte_end":39435,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39436,"byte_end":39505,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39506,"byte_end":39509,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39510,"byte_end":39582,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39583,"byte_end":39663,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39664,"byte_end":39717,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39718,"byte_end":39721,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39722,"byte_end":39735,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39736,"byte_end":39776,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39777,"byte_end":39801,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39802,"byte_end":39805,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39806,"byte_end":39824,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39825,"byte_end":39864,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39865,"byte_end":39914,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39915,"byte_end":39948,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39949,"byte_end":39952,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39953,"byte_end":39983,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":39984,"byte_end":40027,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40028,"byte_end":40031,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40032,"byte_end":40082,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40083,"byte_end":40097,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40098,"byte_end":40103,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40104,"byte_end":40111,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40112,"byte_end":40115,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40116,"byte_end":40145,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40146,"byte_end":40186,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40187,"byte_end":40223,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40224,"byte_end":40265,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40266,"byte_end":40269,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40270,"byte_end":40305,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40306,"byte_end":40309,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40310,"byte_end":40391,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40392,"byte_end":40466,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40467,"byte_end":40545,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40546,"byte_end":40590,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40591,"byte_end":40594,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40595,"byte_end":40665,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40666,"byte_end":40744,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40745,"byte_end":40823,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40824,"byte_end":40901,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40902,"byte_end":40905,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40906,"byte_end":40981,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":40982,"byte_end":41020,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41021,"byte_end":41024,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41025,"byte_end":41038,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41039,"byte_end":41093,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41094,"byte_end":41118,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41119,"byte_end":41122,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41123,"byte_end":41141,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41142,"byte_end":41181,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41182,"byte_end":41227,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41228,"byte_end":41271,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41272,"byte_end":41311,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41312,"byte_end":41315,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41316,"byte_end":41350,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41351,"byte_end":41396,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41397,"byte_end":41400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41401,"byte_end":41432,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41433,"byte_end":41447,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41448,"byte_end":41453,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41454,"byte_end":41461,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41462,"byte_end":41465,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41466,"byte_end":41547,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41548,"byte_end":41626,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41627,"byte_end":41689,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41690,"byte_end":41693,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41694,"byte_end":41707,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41708,"byte_end":41760,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41761,"byte_end":41785,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41786,"byte_end":41789,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41790,"byte_end":41808,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41809,"byte_end":41848,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41849,"byte_end":41896,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41897,"byte_end":41906,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41907,"byte_end":41954,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41955,"byte_end":41958,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":41959,"byte_end":42001,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42002,"byte_end":42043,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42044,"byte_end":42047,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42048,"byte_end":42108,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42109,"byte_end":42143,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42144,"byte_end":42147,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42148,"byte_end":42238,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42239,"byte_end":42242,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42243,"byte_end":42257,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42258,"byte_end":42263,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42264,"byte_end":42271,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42272,"byte_end":42275,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42276,"byte_end":42321,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42322,"byte_end":42364,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42365,"byte_end":42410,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42411,"byte_end":42450,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42451,"byte_end":42490,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42491,"byte_end":42494,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42495,"byte_end":42539,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42540,"byte_end":42543,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42544,"byte_end":42626,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42627,"byte_end":42706,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42707,"byte_end":42781,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42782,"byte_end":42855,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42856,"byte_end":42916,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42917,"byte_end":42920,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42921,"byte_end":42962,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42963,"byte_end":42966,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":42967,"byte_end":43035,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43036,"byte_end":43105,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43106,"byte_end":43172,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43173,"byte_end":43236,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43237,"byte_end":43304,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43305,"byte_end":43374,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43375,"byte_end":43445,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43446,"byte_end":43524,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43525,"byte_end":43550,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43551,"byte_end":43554,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43555,"byte_end":43631,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43632,"byte_end":43635,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43636,"byte_end":43667,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43668,"byte_end":43671,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43672,"byte_end":43752,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43753,"byte_end":43829,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43830,"byte_end":43877,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43878,"byte_end":43881,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43882,"byte_end":43955,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":43956,"byte_end":44032,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44033,"byte_end":44109,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44110,"byte_end":44113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44114,"byte_end":44135,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44136,"byte_end":44159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44160,"byte_end":44182,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44183,"byte_end":44186,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44187,"byte_end":44209,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44210,"byte_end":44213,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44214,"byte_end":44288,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ from `std::io` for ease of use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44289,"byte_end":44324,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44325,"byte_end":44328,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44329,"byte_end":44363,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44364,"byte_end":44400,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44401,"byte_end":44441,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44442,"byte_end":44484,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44485,"byte_end":44558,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44559,"byte_end":44642,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44643,"byte_end":44726,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44727,"byte_end":44754,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44755,"byte_end":44788,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44789,"byte_end":44816,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44817,"byte_end":44844,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44845,"byte_end":44915,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44916,"byte_end":44953,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/mod.rs","byte_start":44954,"byte_end":44983,"line_start":181,"line_end":181,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47360,"byte_end":47372,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46683,"byte_end":46714,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46715,"byte_end":46718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46719,"byte_end":46791,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46792,"byte_end":46870,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46871,"byte_end":46957,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":46958,"byte_end":47035,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47036,"byte_end":47047,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47048,"byte_end":47051,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47052,"byte_end":47120,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47121,"byte_end":47145,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47146,"byte_end":47149,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47150,"byte_end":47192,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47193,"byte_end":47243,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47244,"byte_end":47297,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47298,"byte_end":47349,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48470,"byte_end":48483,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47390,"byte_end":47475,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47521,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47526,"byte_end":47529,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47534,"byte_end":47581,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47586,"byte_end":47589,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47594,"byte_end":47653,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47658,"byte_end":47716,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47721,"byte_end":47802,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47807,"byte_end":47833,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47838,"byte_end":47841,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47846,"byte_end":47917,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47922,"byte_end":47984,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47989,"byte_end":48060,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48065,"byte_end":48146,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48151,"byte_end":48227,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48232,"byte_end":48283,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48288,"byte_end":48291,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48296,"byte_end":48367,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48372,"byte_end":48375,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48380,"byte_end":48419,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48424,"byte_end":48462,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49386,"byte_end":49393,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48561,"byte_end":48635,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48640,"byte_end":48707,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48712,"byte_end":48715,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48720,"byte_end":48791,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48796,"byte_end":48865,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48870,"byte_end":48944,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":48949,"byte_end":49026,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49031,"byte_end":49101,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49106,"byte_end":49159,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49164,"byte_end":49167,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49172,"byte_end":49244,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49249,"byte_end":49271,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49276,"byte_end":49279,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49284,"byte_end":49323,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49328,"byte_end":49378,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52627,"byte_end":52636,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51046,"byte_end":51076,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51077,"byte_end":51080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51081,"byte_end":51160,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51161,"byte_end":51235,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51236,"byte_end":51315,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51316,"byte_end":51393,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51394,"byte_end":51405,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51406,"byte_end":51409,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51410,"byte_end":51487,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51488,"byte_end":51506,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51507,"byte_end":51510,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51511,"byte_end":51587,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51588,"byte_end":51664,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51665,"byte_end":51684,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51685,"byte_end":51688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51689,"byte_end":51754,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51755,"byte_end":51835,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51836,"byte_end":51915,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51916,"byte_end":51989,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":51990,"byte_end":52063,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52064,"byte_end":52085,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52086,"byte_end":52089,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52090,"byte_end":52174,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52175,"byte_end":52199,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52200,"byte_end":52203,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52204,"byte_end":52277,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52278,"byte_end":52357,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52358,"byte_end":52361,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52362,"byte_end":52427,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52428,"byte_end":52449,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52450,"byte_end":52453,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52454,"byte_end":52493,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52494,"byte_end":52530,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52531,"byte_end":52570,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52571,"byte_end":52616,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54280,"byte_end":54308,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52643,"byte_end":52717,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52722,"byte_end":52771,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52776,"byte_end":52779,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52784,"byte_end":52857,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52862,"byte_end":52933,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":52938,"byte_end":53012,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53017,"byte_end":53093,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53098,"byte_end":53136,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53141,"byte_end":53144,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53149,"byte_end":53225,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53230,"byte_end":53304,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53309,"byte_end":53386,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53391,"byte_end":53423,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53428,"byte_end":53431,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53436,"byte_end":53509,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53514,"byte_end":53582,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53587,"byte_end":53643,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53648,"byte_end":53683,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53688,"byte_end":53691,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53696,"byte_end":53772,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53777,"byte_end":53852,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53857,"byte_end":53934,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53939,"byte_end":53957,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53962,"byte_end":53965,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":53970,"byte_end":54021,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54026,"byte_end":54029,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54034,"byte_end":54046,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54051,"byte_end":54054,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54059,"byte_end":54131,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54136,"byte_end":54167,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54172,"byte_end":54175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54180,"byte_end":54211,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54216,"byte_end":54265,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54821,"byte_end":54830,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54451,"byte_end":54504,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54509,"byte_end":54512,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54517,"byte_end":54575,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54580,"byte_end":54583,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54588,"byte_end":54647,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54652,"byte_end":54710,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54715,"byte_end":54782,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54787,"byte_end":54813,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55291,"byte_end":55304,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":54955,"byte_end":55031,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55036,"byte_end":55065,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55070,"byte_end":55073,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55078,"byte_end":55153,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55158,"byte_end":55234,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":55239,"byte_end":55283,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58459,"byte_end":58468,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":57977,"byte_end":58007,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58008,"byte_end":58011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58012,"byte_end":58086,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58087,"byte_end":58157,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58158,"byte_end":58227,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58228,"byte_end":58231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58232,"byte_end":58297,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58298,"byte_end":58319,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58320,"byte_end":58323,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58324,"byte_end":58360,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58361,"byte_end":58402,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58403,"byte_end":58448,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58806,"byte_end":58816,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58475,"byte_end":58532,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58537,"byte_end":58540,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58545,"byte_end":58618,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58623,"byte_end":58649,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58654,"byte_end":58657,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58662,"byte_end":58737,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58742,"byte_end":58798,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59399,"byte_end":59412,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58942,"byte_end":58985,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58990,"byte_end":58993,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":58998,"byte_end":59047,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59052,"byte_end":59122,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59127,"byte_end":59188,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59193,"byte_end":59196,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59201,"byte_end":59213,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59218,"byte_end":59221,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59226,"byte_end":59282,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59287,"byte_end":59290,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59295,"byte_end":59307,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59312,"byte_end":59315,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59320,"byte_end":59391,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62915,"byte_end":62925,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61052,"byte_end":61084,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61085,"byte_end":61088,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61089,"byte_end":61171,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61172,"byte_end":61247,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61248,"byte_end":61315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61316,"byte_end":61319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61320,"byte_end":61400,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61401,"byte_end":61419,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61420,"byte_end":61423,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61424,"byte_end":61495,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61496,"byte_end":61510,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61511,"byte_end":61514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61515,"byte_end":61583,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61584,"byte_end":61664,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61665,"byte_end":61744,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61745,"byte_end":61818,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61819,"byte_end":61892,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61893,"byte_end":61914,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61915,"byte_end":61918,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":61919,"byte_end":62003,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62004,"byte_end":62028,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62029,"byte_end":62032,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62033,"byte_end":62115,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62116,"byte_end":62199,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62200,"byte_end":62203,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62204,"byte_end":62288,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62289,"byte_end":62373,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62374,"byte_end":62452,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62453,"byte_end":62532,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62533,"byte_end":62594,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62595,"byte_end":62598,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62599,"byte_end":62665,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62666,"byte_end":62688,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62689,"byte_end":62692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62693,"byte_end":62731,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62732,"byte_end":62776,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62777,"byte_end":62816,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62817,"byte_end":62856,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62857,"byte_end":62904,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63309,"byte_end":63319,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62932,"byte_end":62986,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62991,"byte_end":62994,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":62999,"byte_end":63060,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63065,"byte_end":63068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63073,"byte_end":63135,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63140,"byte_end":63198,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63203,"byte_end":63270,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63275,"byte_end":63301,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63860,"byte_end":63870,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63447,"byte_end":63518,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63523,"byte_end":63545,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63550,"byte_end":63553,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63558,"byte_end":63604,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63609,"byte_end":63612,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63617,"byte_end":63681,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63686,"byte_end":63744,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63749,"byte_end":63817,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63822,"byte_end":63852,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67156,"byte_end":67169,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":63952,"byte_end":64026,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64031,"byte_end":64079,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64084,"byte_end":64087,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64092,"byte_end":64163,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64168,"byte_end":64244,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64249,"byte_end":64325,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64330,"byte_end":64405,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64410,"byte_end":64481,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64486,"byte_end":64562,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64567,"byte_end":64595,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64608,"byte_end":64669,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64674,"byte_end":64745,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64750,"byte_end":64822,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64827,"byte_end":64902,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64907,"byte_end":64980,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":64985,"byte_end":65060,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65065,"byte_end":65137,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65142,"byte_end":65153,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65158,"byte_end":65161,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65166,"byte_end":65240,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65245,"byte_end":65317,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65322,"byte_end":65391,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65396,"byte_end":65464,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65469,"byte_end":65530,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65535,"byte_end":65538,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65543,"byte_end":65561,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65566,"byte_end":65569,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65574,"byte_end":65644,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65649,"byte_end":65652,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65657,"byte_end":65720,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65725,"byte_end":65794,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65799,"byte_end":65874,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65879,"byte_end":65952,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":65957,"byte_end":66008,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66013,"byte_end":66016,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66021,"byte_end":66091,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66096,"byte_end":66171,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66176,"byte_end":66248,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66253,"byte_end":66323,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66328,"byte_end":66403,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66408,"byte_end":66411,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66416,"byte_end":66497,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66502,"byte_end":66577,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66582,"byte_end":66649,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66654,"byte_end":66657,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66662,"byte_end":66674,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66679,"byte_end":66682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66687,"byte_end":66758,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66763,"byte_end":66829,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66834,"byte_end":66908,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66913,"byte_end":66977,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":66982,"byte_end":67021,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67026,"byte_end":67029,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67034,"byte_end":67046,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67051,"byte_end":67054,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67059,"byte_end":67134,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67139,"byte_end":67148,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67457,"byte_end":67471,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67251,"byte_end":67325,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67330,"byte_end":67333,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67338,"byte_end":67412,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":67417,"byte_end":67449,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8773463,"byte_end":8773474,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775720,"byte_end":8775723,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775298,"byte_end":8775366,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775371,"byte_end":8775374,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775379,"byte_end":8775391,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775396,"byte_end":8775399,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775404,"byte_end":8775464,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775469,"byte_end":8775472,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775477,"byte_end":8775547,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775552,"byte_end":8775625,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775630,"byte_end":8775708,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776927,"byte_end":8776941,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775823,"byte_end":8775917,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775922,"byte_end":8776016,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776021,"byte_end":8776116,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776121,"byte_end":8776215,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776220,"byte_end":8776248,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776253,"byte_end":8776256,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776261,"byte_end":8776298,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776303,"byte_end":8776306,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776311,"byte_end":8776322,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776327,"byte_end":8776344,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776349,"byte_end":8776380,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776385,"byte_end":8776430,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776435,"byte_end":8776489,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776494,"byte_end":8776546,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776551,"byte_end":8776561,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776566,"byte_end":8776573,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776578,"byte_end":8776581,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776586,"byte_end":8776598,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776603,"byte_end":8776606,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776611,"byte_end":8776671,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776676,"byte_end":8776679,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776684,"byte_end":8776754,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776759,"byte_end":8776832,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8776837,"byte_end":8776915,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777419,"byte_end":8777426,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777305,"byte_end":8777379,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777384,"byte_end":8777407,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777602,"byte_end":8777609,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777487,"byte_end":8777562,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777567,"byte_end":8777590,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778145,"byte_end":8778155,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777678,"byte_end":8777727,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777732,"byte_end":8777735,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777740,"byte_end":8777814,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777819,"byte_end":8777894,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777899,"byte_end":8777902,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777907,"byte_end":8777982,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8777987,"byte_end":8778063,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778068,"byte_end":8778133,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779312,"byte_end":8779327,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778303,"byte_end":8778354,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778359,"byte_end":8778362,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778367,"byte_end":8778440,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778445,"byte_end":8778516,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778521,"byte_end":8778596,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778601,"byte_end":8778608,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778613,"byte_end":8778616,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778621,"byte_end":8778697,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778702,"byte_end":8778768,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778773,"byte_end":8778776,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778781,"byte_end":8778854,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778859,"byte_end":8778903,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778908,"byte_end":8778911,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778916,"byte_end":8778971,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778976,"byte_end":8778979,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8778984,"byte_end":8778996,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779001,"byte_end":8779004,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779009,"byte_end":8779037,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779042,"byte_end":8779045,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779050,"byte_end":8779082,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779087,"byte_end":8779131,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779136,"byte_end":8779139,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779144,"byte_end":8779157,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779162,"byte_end":8779165,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779170,"byte_end":8779243,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779248,"byte_end":8779300,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780303,"byte_end":8780319,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779704,"byte_end":8779780,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779785,"byte_end":8779849,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779854,"byte_end":8779857,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779862,"byte_end":8779924,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8779929,"byte_end":8780000,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780005,"byte_end":8780008,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780013,"byte_end":8780088,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780093,"byte_end":8780125,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780130,"byte_end":8780133,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780138,"byte_end":8780150,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780155,"byte_end":8780158,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780163,"byte_end":8780191,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780196,"byte_end":8780199,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780204,"byte_end":8780242,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780247,"byte_end":8780291,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781759,"byte_end":8781775,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780844,"byte_end":8780896,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780901,"byte_end":8780904,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780909,"byte_end":8780978,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8780983,"byte_end":8781026,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781031,"byte_end":8781034,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781039,"byte_end":8781107,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781112,"byte_end":8781187,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781192,"byte_end":8781195,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781200,"byte_end":8781274,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781279,"byte_end":8781324,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781329,"byte_end":8781332,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781337,"byte_end":8781394,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781399,"byte_end":8781402,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781407,"byte_end":8781419,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781424,"byte_end":8781427,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781432,"byte_end":8781460,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781465,"byte_end":8781468,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781473,"byte_end":8781530,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781535,"byte_end":8781579,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781584,"byte_end":8781587,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781592,"byte_end":8781605,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781610,"byte_end":8781613,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781618,"byte_end":8781691,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8781696,"byte_end":8781747,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782624,"byte_end":8782641,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782051,"byte_end":8782128,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782133,"byte_end":8782198,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782203,"byte_end":8782206,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782211,"byte_end":8782287,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782292,"byte_end":8782337,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782342,"byte_end":8782345,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782350,"byte_end":8782425,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782430,"byte_end":8782504,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782509,"byte_end":8782512,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782517,"byte_end":8782529,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782534,"byte_end":8782537,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8782542,"byte_end":8782612,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8786883,"byte_end":8786895,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19269,"byte_end":19298,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787587,"byte_end":8787590,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787015,"byte_end":8787071,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787076,"byte_end":8787079,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787084,"byte_end":8787096,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787101,"byte_end":8787104,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787109,"byte_end":8787161,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787166,"byte_end":8787225,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787230,"byte_end":8787233,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787238,"byte_end":8787241,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787246,"byte_end":8787258,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787263,"byte_end":8787266,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787271,"byte_end":8787331,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787336,"byte_end":8787339,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787344,"byte_end":8787414,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787419,"byte_end":8787492,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787497,"byte_end":8787575,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788993,"byte_end":8789007,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787737,"byte_end":8787828,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787833,"byte_end":8787927,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8787932,"byte_end":8788026,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788031,"byte_end":8788126,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788131,"byte_end":8788152,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788157,"byte_end":8788160,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788165,"byte_end":8788202,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788207,"byte_end":8788210,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788215,"byte_end":8788226,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788231,"byte_end":8788248,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788253,"byte_end":8788284,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788289,"byte_end":8788334,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788339,"byte_end":8788393,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788398,"byte_end":8788450,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788455,"byte_end":8788465,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788470,"byte_end":8788477,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788482,"byte_end":8788485,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788490,"byte_end":8788502,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788507,"byte_end":8788510,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788515,"byte_end":8788567,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788572,"byte_end":8788631,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788636,"byte_end":8788639,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788644,"byte_end":8788647,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788652,"byte_end":8788664,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788669,"byte_end":8788672,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788677,"byte_end":8788737,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788742,"byte_end":8788745,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788750,"byte_end":8788820,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788825,"byte_end":8788898,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8788903,"byte_end":8788981,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790242,"byte_end":8790252,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789466,"byte_end":8789538,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789543,"byte_end":8789546,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789551,"byte_end":8789627,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789632,"byte_end":8789660,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789665,"byte_end":8789668,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789673,"byte_end":8789748,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789753,"byte_end":8789829,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789834,"byte_end":8789899,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789904,"byte_end":8789907,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789912,"byte_end":8789924,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789929,"byte_end":8789932,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8789937,"byte_end":8790009,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790014,"byte_end":8790090,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790095,"byte_end":8790168,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790173,"byte_end":8790176,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790181,"byte_end":8790230,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791803,"byte_end":8791818,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790555,"byte_end":8790620,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790625,"byte_end":8790628,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790633,"byte_end":8790707,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790712,"byte_end":8790785,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790790,"byte_end":8790840,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790845,"byte_end":8790848,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790853,"byte_end":8790926,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8790931,"byte_end":8791006,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791011,"byte_end":8791047,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791052,"byte_end":8791055,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791060,"byte_end":8791078,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791083,"byte_end":8791086,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791091,"byte_end":8791136,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791141,"byte_end":8791144,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791149,"byte_end":8791224,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791229,"byte_end":8791290,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791295,"byte_end":8791298,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791303,"byte_end":8791378,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791383,"byte_end":8791430,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791435,"byte_end":8791438,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791443,"byte_end":8791519,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791524,"byte_end":8791597,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791602,"byte_end":8791605,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791610,"byte_end":8791683,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791688,"byte_end":8791691,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791696,"byte_end":8791708,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791713,"byte_end":8791716,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8791721,"byte_end":8791791,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792659,"byte_end":8792674,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792298,"byte_end":8792343,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792348,"byte_end":8792351,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792356,"byte_end":8792428,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792433,"byte_end":8792508,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792513,"byte_end":8792581,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792586,"byte_end":8792589,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792594,"byte_end":8792647,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794028,"byte_end":8794044,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792776,"byte_end":8792842,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792847,"byte_end":8792850,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792855,"byte_end":8792930,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8792935,"byte_end":8793009,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793014,"byte_end":8793064,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793069,"byte_end":8793072,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793077,"byte_end":8793150,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793155,"byte_end":8793230,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793235,"byte_end":8793271,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793276,"byte_end":8793279,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793284,"byte_end":8793302,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793307,"byte_end":8793310,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793315,"byte_end":8793360,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793365,"byte_end":8793368,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793373,"byte_end":8793448,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793453,"byte_end":8793514,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793519,"byte_end":8793522,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793527,"byte_end":8793602,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793607,"byte_end":8793655,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793660,"byte_end":8793663,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793668,"byte_end":8793744,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793749,"byte_end":8793822,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793827,"byte_end":8793830,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793835,"byte_end":8793908,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793913,"byte_end":8793916,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793921,"byte_end":8793933,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793938,"byte_end":8793941,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8793946,"byte_end":8794016,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794891,"byte_end":8794907,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794525,"byte_end":8794572,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794577,"byte_end":8794580,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794585,"byte_end":8794658,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794663,"byte_end":8794738,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794743,"byte_end":8794811,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794816,"byte_end":8794819,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8794824,"byte_end":8794879,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1788},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8799287,"byte_end":8799293,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1789}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1787},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8800342,"byte_end":8800348,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1793},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8802412,"byte_end":8802417,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1792},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8803074,"byte_end":8803079,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1798},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8805123,"byte_end":8805129,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1799}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1797},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8806167,"byte_end":8806173,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19632,"byte_end":19658,"line_start":150,"line_end":150,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1916},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8807812,"byte_end":8807820,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1918}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8807949,"byte_end":8807958,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1921}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1922},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808272,"byte_end":8808277,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808903,"byte_end":8808913,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808800,"byte_end":8808875,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808880,"byte_end":8808891,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809320,"byte_end":8809327,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808996,"byte_end":8809045,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809050,"byte_end":8809053,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809058,"byte_end":8809070,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809075,"byte_end":8809078,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809083,"byte_end":8809157,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809162,"byte_end":8809212,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809217,"byte_end":8809281,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809286,"byte_end":8809308,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809828,"byte_end":8809838,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809726,"byte_end":8809800,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809805,"byte_end":8809816,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8813075,"byte_end":8813079,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1928}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8812912,"byte_end":8812978,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8812996,"byte_end":8813063,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2614},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8816238,"byte_end":8816253,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2620}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8818953,"byte_end":8818963,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8821854,"byte_end":8821863,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8823263,"byte_end":8823268,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8825118,"byte_end":8825123,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2622},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8827302,"byte_end":8827314,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8828434,"byte_end":8828439,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8831268,"byte_end":8831272,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8833574,"byte_end":8833582,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8835479,"byte_end":8835489,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8836926,"byte_end":8836933,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8838222,"byte_end":8838229,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8839560,"byte_end":8839568,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8840908,"byte_end":8840916,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8842197,"byte_end":8842205,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8843500,"byte_end":8843508,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8844871,"byte_end":8844879,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8846172,"byte_end":8846180,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8847640,"byte_end":8847649,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8849043,"byte_end":8849052,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8850399,"byte_end":8850410,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8851771,"byte_end":8851782,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8853083,"byte_end":8853094,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8854406,"byte_end":8854417,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8855798,"byte_end":8855809,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8857103,"byte_end":8857114,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8858592,"byte_end":8858604,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8859998,"byte_end":8860010,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8861623,"byte_end":8861634,"line_start":1022,"line_end":1022,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8863202,"byte_end":8863216,"line_start":1069,"line_end":1069,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8864394,"byte_end":8864398,"line_start":1103,"line_end":1103,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2003},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865440,"byte_end":8865452,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2004}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864665,"byte_end":8864738,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864739,"byte_end":8864742,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864743,"byte_end":8864814,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864815,"byte_end":8864818,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864819,"byte_end":8864833,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864834,"byte_end":8864837,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864838,"byte_end":8864845,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864846,"byte_end":8864882,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864883,"byte_end":8864909,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864910,"byte_end":8864913,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864914,"byte_end":8864932,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864933,"byte_end":8864972,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8864973,"byte_end":8865022,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865023,"byte_end":8865026,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865027,"byte_end":8865080,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865081,"byte_end":8865128,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865129,"byte_end":8865132,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865133,"byte_end":8865162,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865163,"byte_end":8865208,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865209,"byte_end":8865234,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865235,"byte_end":8865267,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865268,"byte_end":8865271,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865272,"byte_end":8865286,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865287,"byte_end":8865292,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865293,"byte_end":8865300,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865301,"byte_end":8865304,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865305,"byte_end":8865364,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865365,"byte_end":8865368,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865369,"byte_end":8865397,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865398,"byte_end":8865429,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866169,"byte_end":8866173,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865470,"byte_end":8865539,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865544,"byte_end":8865597,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865602,"byte_end":8865605,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865610,"byte_end":8865687,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865692,"byte_end":8865714,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865719,"byte_end":8865722,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865727,"byte_end":8865741,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865746,"byte_end":8865749,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865754,"byte_end":8865767,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865772,"byte_end":8865796,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865801,"byte_end":8865827,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865832,"byte_end":8865835,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865840,"byte_end":8865866,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865871,"byte_end":8865874,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865879,"byte_end":8865924,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865929,"byte_end":8865977,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865982,"byte_end":8866023,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866028,"byte_end":8866031,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866036,"byte_end":8866073,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866078,"byte_end":8866120,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866125,"byte_end":8866137,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866142,"byte_end":8866149,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866154,"byte_end":8866161,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8868376,"byte_end":8868389,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2682},{"krate":0,"index":2683}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8870231,"byte_end":8870236,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8873038,"byte_end":8873047,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8874389,"byte_end":8874398,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8875798,"byte_end":8875806,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8877067,"byte_end":8877075,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8878390,"byte_end":8878399,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8879712,"byte_end":8879721,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2692},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8881061,"byte_end":8881070,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8882405,"byte_end":8882414,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8883791,"byte_end":8883800,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8885187,"byte_end":8885196,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8886651,"byte_end":8886661,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8888051,"byte_end":8888061,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8889393,"byte_end":8889405,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8890732,"byte_end":8890744,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8892098,"byte_end":8892110,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8893459,"byte_end":8893471,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8894862,"byte_end":8894874,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8896275,"byte_end":8896287,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8897754,"byte_end":8897767,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8899169,"byte_end":8899182,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8900202,"byte_end":8900207,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8901427,"byte_end":8901435,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12234},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8902844,"byte_end":8902853,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903189,"byte_end":8903192,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903047,"byte_end":8903139,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903144,"byte_end":8903177,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903354,"byte_end":8903367,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903277,"byte_end":8903342,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904043,"byte_end":8904050,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903906,"byte_end":8903952,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903957,"byte_end":8903960,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903965,"byte_end":8904031,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904242,"byte_end":8904249,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904097,"byte_end":8904151,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904156,"byte_end":8904159,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904164,"byte_end":8904230,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904460,"byte_end":8904471,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904308,"byte_end":8904369,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904374,"byte_end":8904377,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904382,"byte_end":8904448,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904702,"byte_end":8904712,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904551,"byte_end":8904614,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904619,"byte_end":8904622,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904627,"byte_end":8904690,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904916,"byte_end":8904922,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904756,"byte_end":8904812,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904817,"byte_end":8904820,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8904825,"byte_end":8904904,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12220},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909168,"byte_end":8909177,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":12222}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909456,"byte_end":8909459,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909302,"byte_end":8909359,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909364,"byte_end":8909367,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909372,"byte_end":8909444,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909791,"byte_end":8909804,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909591,"byte_end":8909676,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909681,"byte_end":8909694,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909699,"byte_end":8909702,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909707,"byte_end":8909779,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910261,"byte_end":8910268,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910116,"byte_end":8910166,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910171,"byte_end":8910174,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910179,"byte_end":8910249,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910488,"byte_end":8910495,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910335,"byte_end":8910393,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910398,"byte_end":8910401,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910406,"byte_end":8910476,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910730,"byte_end":8910741,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910570,"byte_end":8910635,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910640,"byte_end":8910643,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910648,"byte_end":8910718,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8911005,"byte_end":8911015,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910850,"byte_end":8910917,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910922,"byte_end":8910925,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8910930,"byte_end":8910993,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12157},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8914834,"byte_end":8914843,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12159},{"krate":0,"index":12160},{"krate":0,"index":12161}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8915151,"byte_end":8915154,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8915009,"byte_end":8915101,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8915106,"byte_end":8915139,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8915316,"byte_end":8915329,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8915239,"byte_end":8915304,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916411,"byte_end":8916418,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916353,"byte_end":8916399,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916609,"byte_end":8916616,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916465,"byte_end":8916519,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916524,"byte_end":8916527,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916532,"byte_end":8916597,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916826,"byte_end":8916837,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916675,"byte_end":8916736,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916741,"byte_end":8916744,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916749,"byte_end":8916814,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8917068,"byte_end":8917078,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916917,"byte_end":8916980,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916985,"byte_end":8916988,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8916993,"byte_end":8917056,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8917190,"byte_end":8917196,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8917122,"byte_end":8917178,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12108},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8919829,"byte_end":8919834,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12113}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920275,"byte_end":8920282,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920201,"byte_end":8920263,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920614,"byte_end":8920621,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920351,"byte_end":8920421,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920426,"byte_end":8920429,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920434,"byte_end":8920507,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920512,"byte_end":8920585,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920590,"byte_end":8920602,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920980,"byte_end":8920991,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920710,"byte_end":8920787,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920792,"byte_end":8920795,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920800,"byte_end":8920873,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920878,"byte_end":8920951,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920956,"byte_end":8920968,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921188,"byte_end":8921198,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921120,"byte_end":8921176,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8923774,"byte_end":8923778,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8923691,"byte_end":8923758,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8925043,"byte_end":8925047,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8927804,"byte_end":8927809,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2741}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2742},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8928488,"byte_end":8928493,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2743},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8929710,"byte_end":8929715,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2746}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12085},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8930831,"byte_end":8930836,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12087},{"krate":0,"index":12088},{"krate":0,"index":12089},{"krate":0,"index":12090}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931683,"byte_end":8931692,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931193,"byte_end":8931233,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931238,"byte_end":8931241,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931246,"byte_end":8931260,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931265,"byte_end":8931268,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931273,"byte_end":8931280,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931285,"byte_end":8931319,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931324,"byte_end":8931359,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931364,"byte_end":8931367,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931372,"byte_end":8931455,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931460,"byte_end":8931500,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931505,"byte_end":8931508,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931513,"byte_end":8931566,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931571,"byte_end":8931614,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931619,"byte_end":8931624,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931629,"byte_end":8931641,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931646,"byte_end":8931653,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931658,"byte_end":8931665,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931919,"byte_end":8931926,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931852,"byte_end":8931907,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932045,"byte_end":8932052,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931986,"byte_end":8932033,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932339,"byte_end":8932349,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932104,"byte_end":8932165,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932170,"byte_end":8932173,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932178,"byte_end":8932241,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932246,"byte_end":8932327,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932468,"byte_end":8932482,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2751},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8934451,"byte_end":8934455,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8934368,"byte_end":8934435,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2760},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8935518,"byte_end":8935525,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8935435,"byte_end":8935502,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2771},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8936774,"byte_end":8936783,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8936691,"byte_end":8936758,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":12027},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941107,"byte_end":8941113,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":12029}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11994},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941129,"byte_end":8941135,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":11996}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11949},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941151,"byte_end":8941158,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":11951},{"krate":0,"index":11952},{"krate":0,"index":11954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11904},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941183,"byte_end":8941190,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11909}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11859},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941215,"byte_end":8941222,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":11861},{"krate":0,"index":11862},{"krate":0,"index":11864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11814},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941247,"byte_end":8941255,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11769},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941283,"byte_end":8941290,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11774}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11724},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941315,"byte_end":8941322,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":11726},{"krate":0,"index":11727},{"krate":0,"index":11729}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11679},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941347,"byte_end":8941354,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":11681},{"krate":0,"index":11682},{"krate":0,"index":11684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11634},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941379,"byte_end":8941387,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":11636},{"krate":0,"index":11637},{"krate":0,"index":11639}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11589},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941415,"byte_end":8941424,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11591},{"krate":0,"index":11592},{"krate":0,"index":11594}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11544},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941452,"byte_end":8941461,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941489,"byte_end":8941498,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11501},{"krate":0,"index":11502},{"krate":0,"index":11504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11454},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941526,"byte_end":8941536,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":11456},{"krate":0,"index":11457},{"krate":0,"index":11459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11409},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941567,"byte_end":8941576,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":11411},{"krate":0,"index":11412},{"krate":0,"index":11414}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11364},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941604,"byte_end":8941613,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":11366},{"krate":0,"index":11367},{"krate":0,"index":11369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11319},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941641,"byte_end":8941650,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":11321},{"krate":0,"index":11322},{"krate":0,"index":11324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11274},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_int.rs","byte_start":8941678,"byte_end":8941688,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":11276},{"krate":0,"index":11277},{"krate":0,"index":11279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8942106,"byte_end":8942114,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8942023,"byte_end":8942090,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8945350,"byte_end":8945359,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8945220,"byte_end":8945287,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2947},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8948338,"byte_end":8948350,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8948255,"byte_end":8948322,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8950803,"byte_end":8950812,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8950720,"byte_end":8950787,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8953258,"byte_end":8953264,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2971}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2969},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8953950,"byte_end":8953956,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8954905,"byte_end":8954913,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2977}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2982},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8956085,"byte_end":8956089,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2983}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2984},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8956930,"byte_end":8956934,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11251},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958179,"byte_end":8958184,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":11253},{"krate":0,"index":11254},{"krate":0,"index":11255},{"krate":0,"index":11256}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959045,"byte_end":8959057,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958533,"byte_end":8958576,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958581,"byte_end":8958584,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958589,"byte_end":8958603,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958608,"byte_end":8958611,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958616,"byte_end":8958623,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958628,"byte_end":8958662,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958667,"byte_end":8958702,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958707,"byte_end":8958710,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958715,"byte_end":8958798,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958803,"byte_end":8958850,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958855,"byte_end":8958858,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958863,"byte_end":8958925,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958930,"byte_end":8958976,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958981,"byte_end":8958986,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958991,"byte_end":8959003,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959008,"byte_end":8959015,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959020,"byte_end":8959027,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959295,"byte_end":8959312,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11205},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972106,"byte_end":8972118,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":11208},{"krate":0,"index":11209}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3000},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973394,"byte_end":8973407,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972195,"byte_end":8972275,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972276,"byte_end":8972279,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972280,"byte_end":8972293,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972294,"byte_end":8972297,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972298,"byte_end":8972305,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972306,"byte_end":8972327,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972328,"byte_end":8972377,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972378,"byte_end":8972398,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972399,"byte_end":8972445,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972446,"byte_end":8972449,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972450,"byte_end":8972490,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972491,"byte_end":8972533,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972534,"byte_end":8972580,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972581,"byte_end":8972627,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972628,"byte_end":8972676,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972677,"byte_end":8972684,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972685,"byte_end":8972688,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972689,"byte_end":8972723,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972724,"byte_end":8972765,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972766,"byte_end":8972769,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972770,"byte_end":8972809,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972810,"byte_end":8972835,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972836,"byte_end":8972873,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972874,"byte_end":8972911,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972912,"byte_end":8972915,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972916,"byte_end":8972958,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8972959,"byte_end":8973005,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973006,"byte_end":8973043,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973044,"byte_end":8973047,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973048,"byte_end":8973075,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973076,"byte_end":8973122,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973123,"byte_end":8973165,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973166,"byte_end":8973169,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973170,"byte_end":8973205,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973206,"byte_end":8973252,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973253,"byte_end":8973256,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973257,"byte_end":8973269,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973270,"byte_end":8973277,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973278,"byte_end":8973285,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11160},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8960907,"byte_end":8960911,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11162},{"krate":0,"index":11163}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961501,"byte_end":8961506,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961198,"byte_end":8961251,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961256,"byte_end":8961302,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961307,"byte_end":8961310,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961315,"byte_end":8961325,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961330,"byte_end":8961333,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961338,"byte_end":8961415,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961420,"byte_end":8961489,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961825,"byte_end":8961834,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961554,"byte_end":8961625,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961630,"byte_end":8961704,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961709,"byte_end":8961784,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961789,"byte_end":8961813,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961957,"byte_end":8961964,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961899,"byte_end":8961945,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962256,"byte_end":8962263,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962011,"byte_end":8962065,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962070,"byte_end":8962073,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962078,"byte_end":8962151,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962156,"byte_end":8962228,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962233,"byte_end":8962244,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962574,"byte_end":8962585,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962322,"byte_end":8962383,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962388,"byte_end":8962391,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962396,"byte_end":8962469,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962474,"byte_end":8962546,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962551,"byte_end":8962562,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962731,"byte_end":8962741,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962665,"byte_end":8962719,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3023},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8964671,"byte_end":8964676,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8964588,"byte_end":8964655,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3032},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8965572,"byte_end":8965580,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8965489,"byte_end":8965556,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3041},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8966963,"byte_end":8966971,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":19835,"byte_end":19862,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8966880,"byte_end":8966947,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":11100},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970852,"byte_end":8970859,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":11102},{"krate":0,"index":11103}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11063},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970875,"byte_end":8970882,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":11065},{"krate":0,"index":11066}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11018},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970898,"byte_end":8970906,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":11020},{"krate":0,"index":11021},{"krate":0,"index":11023}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10973},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970931,"byte_end":8970939,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10975},{"krate":0,"index":10976},{"krate":0,"index":10978}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10928},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970964,"byte_end":8970972,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10930},{"krate":0,"index":10931},{"krate":0,"index":10933}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10883},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8970997,"byte_end":8971006,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10885},{"krate":0,"index":10886},{"krate":0,"index":10888}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10838},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971034,"byte_end":8971042,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10840},{"krate":0,"index":10841},{"krate":0,"index":10843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10793},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971067,"byte_end":8971075,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10795},{"krate":0,"index":10796},{"krate":0,"index":10798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10748},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971100,"byte_end":8971108,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10703},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971133,"byte_end":8971142,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10708}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10658},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971170,"byte_end":8971180,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10660},{"krate":0,"index":10661},{"krate":0,"index":10663}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10613},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971208,"byte_end":8971218,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10615},{"krate":0,"index":10616},{"krate":0,"index":10618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10568},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971246,"byte_end":8971256,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10570},{"krate":0,"index":10571},{"krate":0,"index":10573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10523},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971284,"byte_end":8971295,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10525},{"krate":0,"index":10526},{"krate":0,"index":10528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10478},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971326,"byte_end":8971336,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10480},{"krate":0,"index":10481},{"krate":0,"index":10483}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10433},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971364,"byte_end":8971374,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":10435},{"krate":0,"index":10436},{"krate":0,"index":10438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10388},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971402,"byte_end":8971412,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":10390},{"krate":0,"index":10391},{"krate":0,"index":10393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10343},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_int.rs","byte_start":8971440,"byte_end":8971451,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":372},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3263},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3566},{"krate":0,"index":3692},{"krate":0,"index":3711},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71776,"byte_end":71794,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71796,"byte_end":71834,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71835,"byte_end":71838,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71839,"byte_end":71922,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71923,"byte_end":71988,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71989,"byte_end":71992,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":71993,"byte_end":72011,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72012,"byte_end":72015,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72016,"byte_end":72104,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72105,"byte_end":72174,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72175,"byte_end":72263,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72264,"byte_end":72322,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72323,"byte_end":72386,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72387,"byte_end":72452,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72454,"byte_end":72457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72458,"byte_end":72490,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72491,"byte_end":72519,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72520,"byte_end":72548,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72549,"byte_end":72583,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72584,"byte_end":72614,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72615,"byte_end":72649,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73898,"byte_end":73911,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73210,"byte_end":73287,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73288,"byte_end":73291,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73292,"byte_end":73301,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73302,"byte_end":73305,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73306,"byte_end":73383,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73384,"byte_end":73455,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73456,"byte_end":73483,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73484,"byte_end":73487,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73488,"byte_end":73501,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73502,"byte_end":73505,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73506,"byte_end":73583,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73584,"byte_end":73656,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73657,"byte_end":73726,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73727,"byte_end":73730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73731,"byte_end":73810,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73811,"byte_end":73887,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79572,"byte_end":79589,"line_start":237,"line_end":237,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79605,"byte_end":79609,"line_start":238,"line_end":238,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":370},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79670,"byte_end":79676,"line_start":239,"line_end":239,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79748,"byte_end":79763,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79900,"byte_end":79905,"line_start":248,"line_end":248,"column_start":13,"column_end":18},"name":"Ready","qualname":"::net::addr::sealed::MaybeReady::Ready","value":"MaybeReady::Ready(Option<SocketAddr>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79939,"byte_end":79947,"line_start":249,"line_end":249,"column_start":13,"column_end":21},"name":"Blocking","qualname":"::net::addr::sealed::MaybeReady::Blocking","value":"MaybeReady::Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>)","parent":{"krate":0,"index":3235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3235},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":79875,"byte_end":79885,"line_start":247,"line_end":247,"column_start":18,"column_end":28},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"pub enum MaybeReady {\n    Ready(Option<SocketAddr>),\n    Blocking(JoinHandle<io::Result<vec::IntoIter<SocketAddr>>>),\n}","parent":null,"children":[{"krate":0,"index":3236},{"krate":0,"index":3239}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80100,"byte_end":80103,"line_start":255,"line_end":255,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80147,"byte_end":80151,"line_start":256,"line_end":256,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3244},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3244},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80076,"byte_end":80085,"line_start":254,"line_end":254,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3258},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/lookup_host.rs","byte_start":8977701,"byte_end":8977712,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"dns\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":18746,"byte_end":18769,"line_start":105,"line_end":105,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3263},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":13703},{"krate":0,"index":3421},{"krate":0,"index":3524}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/mod.rs","byte_start":8977860,"byte_end":8977881,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3527},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980481,"byte_end":8980492,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3528}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982461,"byte_end":8982465,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980575,"byte_end":8980651,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980656,"byte_end":8980659,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980664,"byte_end":8980725,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980730,"byte_end":8980733,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980738,"byte_end":8980813,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980818,"byte_end":8980894,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980899,"byte_end":8980910,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980915,"byte_end":8980918,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980923,"byte_end":8980998,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981003,"byte_end":8981077,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981082,"byte_end":8981159,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981164,"byte_end":8981167,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981172,"byte_end":8981248,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981253,"byte_end":8981326,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981331,"byte_end":8981404,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981409,"byte_end":8981461,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981466,"byte_end":8981469,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981474,"byte_end":8981537,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981542,"byte_end":8981545,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981550,"byte_end":8981604,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981609,"byte_end":8981612,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981617,"byte_end":8981631,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981636,"byte_end":8981639,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981644,"byte_end":8981657,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981662,"byte_end":8981694,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981699,"byte_end":8981702,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981707,"byte_end":8981723,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981728,"byte_end":8981731,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981736,"byte_end":8981754,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981759,"byte_end":8981798,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981803,"byte_end":8981869,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981874,"byte_end":8981877,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981882,"byte_end":8981909,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981914,"byte_end":8981917,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981922,"byte_end":8981949,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981954,"byte_end":8981968,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981973,"byte_end":8981978,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981983,"byte_end":8981990,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8981995,"byte_end":8981998,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982003,"byte_end":8982033,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982038,"byte_end":8982041,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982046,"byte_end":8982059,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982064,"byte_end":8982096,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982101,"byte_end":8982128,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982133,"byte_end":8982136,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982141,"byte_end":8982157,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982162,"byte_end":8982165,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982170,"byte_end":8982188,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982193,"byte_end":8982232,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982237,"byte_end":8982322,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982327,"byte_end":8982330,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982335,"byte_end":8982362,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982367,"byte_end":8982370,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982375,"byte_end":8982402,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982407,"byte_end":8982421,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982426,"byte_end":8982431,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8982436,"byte_end":8982443,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984037,"byte_end":8984043,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983178,"byte_end":8983235,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983240,"byte_end":8983243,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983248,"byte_end":8983323,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983328,"byte_end":8983398,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983403,"byte_end":8983432,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983437,"byte_end":8983440,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983445,"byte_end":8983492,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983497,"byte_end":8983500,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983505,"byte_end":8983519,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983524,"byte_end":8983527,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983532,"byte_end":8983545,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983550,"byte_end":8983582,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983587,"byte_end":8983590,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983595,"byte_end":8983611,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983616,"byte_end":8983619,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983624,"byte_end":8983642,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983647,"byte_end":8983686,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983691,"byte_end":8983761,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983766,"byte_end":8983769,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983774,"byte_end":8983813,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983818,"byte_end":8983888,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983893,"byte_end":8983956,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983961,"byte_end":8983970,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983975,"byte_end":8983978,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8983983,"byte_end":8983997,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984002,"byte_end":8984007,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984012,"byte_end":8984019,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984379,"byte_end":8984390,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984156,"byte_end":8984228,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984233,"byte_end":8984236,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984241,"byte_end":8984317,"line_start":190,"line_end":190,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8984322,"byte_end":8984367,"line_start":191,"line_end":191,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987252,"byte_end":8987260,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985237,"byte_end":8985309,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985314,"byte_end":8985317,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985322,"byte_end":8985392,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985397,"byte_end":8985473,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985478,"byte_end":8985522,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985527,"byte_end":8985530,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985535,"byte_end":8985610,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985615,"byte_end":8985691,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985696,"byte_end":8985761,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985766,"byte_end":8985821,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985826,"byte_end":8985829,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985834,"byte_end":8985905,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985910,"byte_end":8985985,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8985990,"byte_end":8986029,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986034,"byte_end":8986037,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986042,"byte_end":8986105,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986110,"byte_end":8986113,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986118,"byte_end":8986191,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986196,"byte_end":8986227,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986232,"byte_end":8986235,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986240,"byte_end":8986313,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986318,"byte_end":8986393,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986398,"byte_end":8986471,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986476,"byte_end":8986503,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986508,"byte_end":8986511,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986516,"byte_end":8986530,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986535,"byte_end":8986538,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986543,"byte_end":8986561,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986566,"byte_end":8986592,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986597,"byte_end":8986629,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986634,"byte_end":8986637,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986642,"byte_end":8986660,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986665,"byte_end":8986716,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986721,"byte_end":8986792,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986797,"byte_end":8986857,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986862,"byte_end":8986876,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986881,"byte_end":8986886,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986891,"byte_end":8986898,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986903,"byte_end":8986906,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986911,"byte_end":8986923,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986928,"byte_end":8986931,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8986936,"byte_end":8986996,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987001,"byte_end":8987004,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987009,"byte_end":8987079,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987084,"byte_end":8987157,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987162,"byte_end":8987240,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988344,"byte_end":8988354,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987618,"byte_end":8987679,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987684,"byte_end":8987687,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987692,"byte_end":8987765,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987770,"byte_end":8987804,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987809,"byte_end":8987812,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987817,"byte_end":8987831,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987836,"byte_end":8987839,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987844,"byte_end":8987862,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987867,"byte_end":8987899,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987904,"byte_end":8987907,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987912,"byte_end":8987928,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987933,"byte_end":8987988,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8987993,"byte_end":8987996,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988001,"byte_end":8988019,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988024,"byte_end":8988063,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988068,"byte_end":8988134,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988139,"byte_end":8988142,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988147,"byte_end":8988189,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988194,"byte_end":8988283,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988288,"byte_end":8988291,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988296,"byte_end":8988310,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988315,"byte_end":8988320,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988325,"byte_end":8988332,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989785,"byte_end":8989793,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988440,"byte_end":8988514,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988519,"byte_end":8988522,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988527,"byte_end":8988589,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988594,"byte_end":8988597,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988602,"byte_end":8988678,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988683,"byte_end":8988752,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988757,"byte_end":8988786,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988791,"byte_end":8988794,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988799,"byte_end":8988811,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988816,"byte_end":8988819,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988824,"byte_end":8988899,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988904,"byte_end":8988979,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8988984,"byte_end":8989058,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989063,"byte_end":8989138,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989143,"byte_end":8989151,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989156,"byte_end":8989159,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989164,"byte_end":8989178,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989183,"byte_end":8989186,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989191,"byte_end":8989204,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989209,"byte_end":8989262,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989267,"byte_end":8989270,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989275,"byte_end":8989293,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989298,"byte_end":8989319,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989324,"byte_end":8989402,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989407,"byte_end":8989454,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989459,"byte_end":8989462,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989467,"byte_end":8989523,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989528,"byte_end":8989554,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989559,"byte_end":8989590,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989595,"byte_end":8989639,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989644,"byte_end":8989661,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989666,"byte_end":8989719,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989724,"byte_end":8989737,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989742,"byte_end":8989751,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989756,"byte_end":8989761,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989766,"byte_end":8989773,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990479,"byte_end":8990482,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989862,"byte_end":8989920,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989925,"byte_end":8989928,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989933,"byte_end":8989993,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8989998,"byte_end":8990001,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990006,"byte_end":8990043,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990048,"byte_end":8990051,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990056,"byte_end":8990070,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990075,"byte_end":8990078,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990083,"byte_end":8990096,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990101,"byte_end":8990133,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990138,"byte_end":8990141,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990146,"byte_end":8990162,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990167,"byte_end":8990170,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990175,"byte_end":8990193,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990198,"byte_end":8990237,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990242,"byte_end":8990304,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990309,"byte_end":8990312,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990317,"byte_end":8990374,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990379,"byte_end":8990419,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990424,"byte_end":8990427,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990432,"byte_end":8990445,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990450,"byte_end":8990455,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990460,"byte_end":8990467,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991121,"byte_end":8991128,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990554,"byte_end":8990612,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990617,"byte_end":8990620,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990625,"byte_end":8990701,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990706,"byte_end":8990727,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990732,"byte_end":8990735,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990740,"byte_end":8990754,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990759,"byte_end":8990762,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990767,"byte_end":8990780,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990785,"byte_end":8990817,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990822,"byte_end":8990825,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990830,"byte_end":8990846,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990851,"byte_end":8990854,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990859,"byte_end":8990877,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990882,"byte_end":8990921,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990926,"byte_end":8990989,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8990994,"byte_end":8990997,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991002,"byte_end":8991060,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991065,"byte_end":8991068,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991073,"byte_end":8991087,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991092,"byte_end":8991097,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991102,"byte_end":8991109,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993401,"byte_end":8993409,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3531}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993199,"byte_end":8993275,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993276,"byte_end":8993323,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993324,"byte_end":8993372,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993824,"byte_end":8993835,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993587,"byte_end":8993660,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993665,"byte_end":8993680,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993685,"byte_end":8993688,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993693,"byte_end":8993762,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993767,"byte_end":8993812,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995394,"byte_end":8995402,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8994986,"byte_end":8995041,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995042,"byte_end":8995045,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995046,"byte_end":8995134,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995135,"byte_end":8995212,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995213,"byte_end":8995216,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995217,"byte_end":8995245,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995246,"byte_end":8995279,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995280,"byte_end":8995331,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995332,"byte_end":8995365,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996096,"byte_end":8996105,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995424,"byte_end":8995480,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995481,"byte_end":8995484,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995485,"byte_end":8995571,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995572,"byte_end":8995624,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995625,"byte_end":8995628,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995629,"byte_end":8995715,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995716,"byte_end":8995801,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995802,"byte_end":8995805,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995806,"byte_end":8995834,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995835,"byte_end":8995868,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995869,"byte_end":8995916,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995917,"byte_end":8995979,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8995980,"byte_end":8996033,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996034,"byte_end":8996067,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997162,"byte_end":8997171,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996279,"byte_end":8996353,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996358,"byte_end":8996431,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996436,"byte_end":8996450,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996455,"byte_end":8996458,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996463,"byte_end":8996536,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996541,"byte_end":8996544,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996549,"byte_end":8996563,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996568,"byte_end":8996571,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996576,"byte_end":8996589,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996594,"byte_end":8996612,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996617,"byte_end":8996647,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996652,"byte_end":8996655,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996660,"byte_end":8996693,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996698,"byte_end":8996701,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996706,"byte_end":8996724,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996729,"byte_end":8996768,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996773,"byte_end":8996842,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996847,"byte_end":8996895,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996900,"byte_end":8996930,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996935,"byte_end":8996938,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996943,"byte_end":8996965,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996970,"byte_end":8997015,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997020,"byte_end":8997038,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997043,"byte_end":8997046,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997051,"byte_end":8997065,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997070,"byte_end":8997075,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997080,"byte_end":8997087,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997092,"byte_end":8997095,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997100,"byte_end":8997150,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998588,"byte_end":8998592,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997296,"byte_end":8997366,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997371,"byte_end":8997440,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997445,"byte_end":8997484,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997489,"byte_end":8997492,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997497,"byte_end":8997565,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997570,"byte_end":8997573,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997578,"byte_end":8997618,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997623,"byte_end":8997626,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997631,"byte_end":8997645,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997650,"byte_end":8997653,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997658,"byte_end":8997671,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997676,"byte_end":8997706,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997711,"byte_end":8997737,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997742,"byte_end":8997768,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997773,"byte_end":8997776,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997781,"byte_end":8997799,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997804,"byte_end":8997855,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997860,"byte_end":8997888,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997893,"byte_end":8997962,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8997967,"byte_end":8998015,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998020,"byte_end":8998023,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998028,"byte_end":8998057,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998062,"byte_end":8998091,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998096,"byte_end":8998099,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998104,"byte_end":8998131,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998136,"byte_end":8998183,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998188,"byte_end":8998191,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998196,"byte_end":8998220,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998225,"byte_end":8998284,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998289,"byte_end":8998328,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998333,"byte_end":8998336,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998341,"byte_end":8998355,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998360,"byte_end":8998365,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998370,"byte_end":8998377,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998382,"byte_end":8998385,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998390,"byte_end":8998455,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998460,"byte_end":8998463,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998468,"byte_end":8998514,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998519,"byte_end":8998570,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3549},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001194,"byte_end":9001207,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3550}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9000759,"byte_end":9000825,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9000826,"byte_end":9000829,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9000830,"byte_end":9000917,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9000918,"byte_end":9001002,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001003,"byte_end":9001006,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001007,"byte_end":9001035,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001036,"byte_end":9001079,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001080,"byte_end":9001131,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001132,"byte_end":9001165,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3553},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9002013,"byte_end":9002027,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001240,"byte_end":9001307,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001308,"byte_end":9001311,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001312,"byte_end":9001398,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001399,"byte_end":9001451,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001452,"byte_end":9001455,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will shutdown the write half of the TCP stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001456,"byte_end":9001531,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001532,"byte_end":9001535,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001536,"byte_end":9001622,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001623,"byte_end":9001708,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001709,"byte_end":9001712,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001713,"byte_end":9001741,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001742,"byte_end":9001785,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001786,"byte_end":9001833,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001834,"byte_end":9001896,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001897,"byte_end":9001950,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9001951,"byte_end":9001984,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3558},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9002971,"byte_end":9002983,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9002844,"byte_end":9002921,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9002922,"byte_end":9002942,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3560},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9002984,"byte_end":9003001,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003003,"byte_end":9003021,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003567,"byte_end":9003574,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003304,"byte_end":9003373,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003378,"byte_end":9003442,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003447,"byte_end":9003499,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003504,"byte_end":9003507,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003512,"byte_end":9003555,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004565,"byte_end":9004574,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003681,"byte_end":9003755,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003760,"byte_end":9003833,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003838,"byte_end":9003852,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003857,"byte_end":9003860,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003865,"byte_end":9003938,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003943,"byte_end":9003946,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003951,"byte_end":9003965,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003970,"byte_end":9003973,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003978,"byte_end":9003991,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003996,"byte_end":9004014,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004019,"byte_end":9004049,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004054,"byte_end":9004057,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004062,"byte_end":9004095,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004100,"byte_end":9004103,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004108,"byte_end":9004126,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004131,"byte_end":9004170,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004175,"byte_end":9004240,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004245,"byte_end":9004298,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004303,"byte_end":9004333,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004338,"byte_end":9004341,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004346,"byte_end":9004368,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004373,"byte_end":9004418,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004423,"byte_end":9004441,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004446,"byte_end":9004449,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004454,"byte_end":9004468,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004473,"byte_end":9004478,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004483,"byte_end":9004490,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004495,"byte_end":9004498,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004503,"byte_end":9004553,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005996,"byte_end":9006000,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004703,"byte_end":9004773,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004778,"byte_end":9004847,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004852,"byte_end":9004891,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004896,"byte_end":9004899,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004904,"byte_end":9004972,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004977,"byte_end":9004980,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9004985,"byte_end":9005025,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005030,"byte_end":9005033,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005038,"byte_end":9005052,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005057,"byte_end":9005060,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005065,"byte_end":9005078,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005083,"byte_end":9005113,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005118,"byte_end":9005144,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005149,"byte_end":9005175,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005180,"byte_end":9005183,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005188,"byte_end":9005206,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005211,"byte_end":9005262,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005267,"byte_end":9005295,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005300,"byte_end":9005365,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005370,"byte_end":9005423,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005428,"byte_end":9005431,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005436,"byte_end":9005465,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005470,"byte_end":9005499,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005504,"byte_end":9005507,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005512,"byte_end":9005539,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005544,"byte_end":9005591,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005596,"byte_end":9005599,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005604,"byte_end":9005628,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005633,"byte_end":9005692,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005697,"byte_end":9005736,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005741,"byte_end":9005744,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005749,"byte_end":9005763,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005768,"byte_end":9005773,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005778,"byte_end":9005785,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005790,"byte_end":9005793,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005798,"byte_end":9005863,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005868,"byte_end":9005871,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005876,"byte_end":9005922,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9005927,"byte_end":9005978,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006733,"byte_end":9006740,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006470,"byte_end":9006539,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006544,"byte_end":9006608,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006613,"byte_end":9006665,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006670,"byte_end":9006673,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006678,"byte_end":9006721,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006914,"byte_end":9006920,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drop the write half, but don't issue a TCP shutdown.\n","sig":null,"attributes":[{"value":"/ Drop the write half, but don't issue a TCP shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006846,"byte_end":9006902,"line_start":213,"line_end":213,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3564},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010210,"byte_end":9010219,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3565}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22570,"byte_end":22593,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012300,"byte_end":9012307,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010298,"byte_end":9010342,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010347,"byte_end":9010350,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010355,"byte_end":9010429,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010434,"byte_end":9010503,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010508,"byte_end":9010584,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010589,"byte_end":9010654,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010659,"byte_end":9010662,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010667,"byte_end":9010743,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010748,"byte_end":9010817,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010822,"byte_end":9010898,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010903,"byte_end":9010962,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010967,"byte_end":9010970,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010975,"byte_end":9011029,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011034,"byte_end":9011037,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011042,"byte_end":9011056,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011061,"byte_end":9011064,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011069,"byte_end":9011082,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011087,"byte_end":9011117,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011122,"byte_end":9011148,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011153,"byte_end":9011179,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011184,"byte_end":9011187,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011192,"byte_end":9011210,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011215,"byte_end":9011266,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011271,"byte_end":9011299,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011304,"byte_end":9011373,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011378,"byte_end":9011381,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011386,"byte_end":9011413,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011418,"byte_end":9011467,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011472,"byte_end":9011475,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011480,"byte_end":9011494,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011499,"byte_end":9011504,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011509,"byte_end":9011516,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011521,"byte_end":9011524,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011529,"byte_end":9011559,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011564,"byte_end":9011567,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011572,"byte_end":9011585,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011590,"byte_end":9011620,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011625,"byte_end":9011651,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011656,"byte_end":9011682,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011687,"byte_end":9011714,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011719,"byte_end":9011722,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011727,"byte_end":9011745,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011750,"byte_end":9011801,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011806,"byte_end":9011834,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011839,"byte_end":9011927,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011932,"byte_end":9011935,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011940,"byte_end":9011967,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9011972,"byte_end":9012021,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012026,"byte_end":9012029,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012034,"byte_end":9012048,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012053,"byte_end":9012058,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012063,"byte_end":9012070,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012075,"byte_end":9012078,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012083,"byte_end":9012154,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012159,"byte_end":9012162,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012167,"byte_end":9012224,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9012229,"byte_end":9012282,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014740,"byte_end":9014748,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9013773,"byte_end":9013830,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9013835,"byte_end":9013838,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9013843,"byte_end":9013918,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9013923,"byte_end":9013996,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014001,"byte_end":9014004,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014009,"byte_end":9014023,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014028,"byte_end":9014031,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014036,"byte_end":9014054,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014059,"byte_end":9014085,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014090,"byte_end":9014120,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014125,"byte_end":9014128,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014133,"byte_end":9014151,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014156,"byte_end":9014207,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014212,"byte_end":9014286,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014291,"byte_end":9014345,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014350,"byte_end":9014364,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014369,"byte_end":9014374,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014379,"byte_end":9014386,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014391,"byte_end":9014394,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014399,"byte_end":9014411,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014416,"byte_end":9014419,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014424,"byte_end":9014484,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014489,"byte_end":9014492,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014497,"byte_end":9014567,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014572,"byte_end":9014645,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9014650,"byte_end":9014728,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9015145,"byte_end":9015156,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016304,"byte_end":9016314,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9015905,"byte_end":9015964,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9015969,"byte_end":9015972,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9015977,"byte_end":9015991,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9015996,"byte_end":9015999,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016004,"byte_end":9016017,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016022,"byte_end":9016052,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016057,"byte_end":9016060,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016065,"byte_end":9016129,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016134,"byte_end":9016195,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016200,"byte_end":9016203,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016208,"byte_end":9016251,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016256,"byte_end":9016268,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016273,"byte_end":9016280,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016285,"byte_end":9016292,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016803,"byte_end":9016812,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016400,"byte_end":9016464,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016469,"byte_end":9016472,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016477,"byte_end":9016491,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016496,"byte_end":9016499,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016504,"byte_end":9016517,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016522,"byte_end":9016552,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016557,"byte_end":9016560,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016565,"byte_end":9016629,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016634,"byte_end":9016695,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016700,"byte_end":9016703,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016708,"byte_end":9016750,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016755,"byte_end":9016767,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016772,"byte_end":9016779,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016784,"byte_end":9016791,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017970,"byte_end":9017979,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016897,"byte_end":9016972,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9016977,"byte_end":9017050,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017055,"byte_end":9017069,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017074,"byte_end":9017077,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017082,"byte_end":9017100,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017105,"byte_end":9017108,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017113,"byte_end":9017138,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017143,"byte_end":9017146,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017151,"byte_end":9017202,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017207,"byte_end":9017290,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017295,"byte_end":9017350,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017355,"byte_end":9017358,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017363,"byte_end":9017375,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017380,"byte_end":9017383,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017388,"byte_end":9017463,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017468,"byte_end":9017471,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017476,"byte_end":9017490,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017495,"byte_end":9017498,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017503,"byte_end":9017516,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017521,"byte_end":9017539,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017544,"byte_end":9017574,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017579,"byte_end":9017582,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017587,"byte_end":9017620,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017625,"byte_end":9017628,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017633,"byte_end":9017651,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017656,"byte_end":9017695,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017700,"byte_end":9017769,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017774,"byte_end":9017804,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017809,"byte_end":9017812,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017817,"byte_end":9017839,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017844,"byte_end":9017886,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017891,"byte_end":9017909,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017914,"byte_end":9017917,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017922,"byte_end":9017936,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017941,"byte_end":9017946,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9017951,"byte_end":9017958,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3474},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019891,"byte_end":9019895,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018640,"byte_end":9018710,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018715,"byte_end":9018784,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018789,"byte_end":9018828,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018833,"byte_end":9018836,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018841,"byte_end":9018915,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018920,"byte_end":9018980,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018985,"byte_end":9018988,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9018993,"byte_end":9019007,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019012,"byte_end":9019015,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019020,"byte_end":9019033,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019038,"byte_end":9019068,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019073,"byte_end":9019099,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019104,"byte_end":9019130,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019135,"byte_end":9019138,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019143,"byte_end":9019161,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019166,"byte_end":9019217,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019222,"byte_end":9019250,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019255,"byte_end":9019324,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019329,"byte_end":9019332,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019337,"byte_end":9019366,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019371,"byte_end":9019400,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019405,"byte_end":9019408,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019413,"byte_end":9019440,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019445,"byte_end":9019489,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019494,"byte_end":9019497,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019502,"byte_end":9019526,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019531,"byte_end":9019587,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019592,"byte_end":9019631,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019636,"byte_end":9019639,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019644,"byte_end":9019658,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019663,"byte_end":9019668,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019673,"byte_end":9019680,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019685,"byte_end":9019688,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019693,"byte_end":9019758,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019763,"byte_end":9019766,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019771,"byte_end":9019817,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9019822,"byte_end":9019873,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020764,"byte_end":9020772,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020009,"byte_end":9020075,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020080,"byte_end":9020083,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020088,"byte_end":9020160,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020165,"byte_end":9020234,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020239,"byte_end":9020272,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020277,"byte_end":9020280,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020285,"byte_end":9020299,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020304,"byte_end":9020307,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020312,"byte_end":9020325,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020330,"byte_end":9020360,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020365,"byte_end":9020391,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020396,"byte_end":9020423,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020428,"byte_end":9020431,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020436,"byte_end":9020454,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020459,"byte_end":9020510,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020515,"byte_end":9020543,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020548,"byte_end":9020613,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020618,"byte_end":9020621,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020626,"byte_end":9020656,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020661,"byte_end":9020703,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020708,"byte_end":9020711,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020716,"byte_end":9020730,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020735,"byte_end":9020740,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020745,"byte_end":9020752,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021398,"byte_end":9021405,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020866,"byte_end":9020928,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020933,"byte_end":9020936,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9020941,"byte_end":9021005,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021010,"byte_end":9021013,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021018,"byte_end":9021061,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021066,"byte_end":9021069,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021074,"byte_end":9021088,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021093,"byte_end":9021096,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021101,"byte_end":9021114,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021119,"byte_end":9021149,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021154,"byte_end":9021157,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021162,"byte_end":9021226,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021231,"byte_end":9021292,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021297,"byte_end":9021300,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021305,"byte_end":9021345,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021350,"byte_end":9021362,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021367,"byte_end":9021374,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021379,"byte_end":9021386,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022212,"byte_end":9022223,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021482,"byte_end":9021544,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021549,"byte_end":9021552,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021557,"byte_end":9021626,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021631,"byte_end":9021704,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021709,"byte_end":9021782,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021787,"byte_end":9021862,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021867,"byte_end":9021885,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021890,"byte_end":9021893,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021898,"byte_end":9021912,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021917,"byte_end":9021920,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021925,"byte_end":9021938,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021943,"byte_end":9021973,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021978,"byte_end":9021981,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9021986,"byte_end":9022050,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022055,"byte_end":9022116,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022121,"byte_end":9022124,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022129,"byte_end":9022159,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022164,"byte_end":9022176,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022181,"byte_end":9022188,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022193,"byte_end":9022200,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022890,"byte_end":9022906,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022324,"byte_end":9022384,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022389,"byte_end":9022392,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022397,"byte_end":9022470,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022475,"byte_end":9022478,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022483,"byte_end":9022544,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022549,"byte_end":9022552,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022557,"byte_end":9022571,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022576,"byte_end":9022579,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022584,"byte_end":9022597,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022602,"byte_end":9022632,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022637,"byte_end":9022640,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022645,"byte_end":9022709,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022714,"byte_end":9022775,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022780,"byte_end":9022783,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022788,"byte_end":9022837,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022842,"byte_end":9022854,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022859,"byte_end":9022866,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022871,"byte_end":9022878,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023498,"byte_end":9023518,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9022993,"byte_end":9023053,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023058,"byte_end":9023061,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023066,"byte_end":9023138,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023143,"byte_end":9023163,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023168,"byte_end":9023171,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023176,"byte_end":9023190,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023195,"byte_end":9023198,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023203,"byte_end":9023216,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023221,"byte_end":9023251,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023256,"byte_end":9023259,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023264,"byte_end":9023328,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023333,"byte_end":9023394,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023399,"byte_end":9023402,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023407,"byte_end":9023445,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023450,"byte_end":9023462,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023467,"byte_end":9023474,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023479,"byte_end":9023486,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024189,"byte_end":9024205,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023623,"byte_end":9023683,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023688,"byte_end":9023691,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023696,"byte_end":9023769,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023774,"byte_end":9023777,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023782,"byte_end":9023843,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023848,"byte_end":9023851,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023856,"byte_end":9023870,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023875,"byte_end":9023878,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023883,"byte_end":9023896,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023901,"byte_end":9023931,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023936,"byte_end":9023939,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9023944,"byte_end":9024008,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024013,"byte_end":9024074,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024079,"byte_end":9024082,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024087,"byte_end":9024136,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024141,"byte_end":9024153,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024158,"byte_end":9024165,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024170,"byte_end":9024177,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024794,"byte_end":9024814,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024292,"byte_end":9024352,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024357,"byte_end":9024360,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024365,"byte_end":9024439,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024444,"byte_end":9024459,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024464,"byte_end":9024467,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024472,"byte_end":9024486,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024491,"byte_end":9024494,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024499,"byte_end":9024512,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024517,"byte_end":9024547,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024552,"byte_end":9024555,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024560,"byte_end":9024624,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024629,"byte_end":9024690,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024695,"byte_end":9024698,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024703,"byte_end":9024741,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024746,"byte_end":9024758,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024763,"byte_end":9024770,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024775,"byte_end":9024782,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025516,"byte_end":9025525,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9024919,"byte_end":9024995,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025000,"byte_end":9025038,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025043,"byte_end":9025046,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025051,"byte_end":9025117,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025122,"byte_end":9025125,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025130,"byte_end":9025177,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025182,"byte_end":9025185,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025190,"byte_end":9025204,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025209,"byte_end":9025212,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025217,"byte_end":9025230,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025235,"byte_end":9025265,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025270,"byte_end":9025273,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025278,"byte_end":9025342,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025347,"byte_end":9025408,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025413,"byte_end":9025416,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025421,"byte_end":9025463,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025468,"byte_end":9025480,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025485,"byte_end":9025492,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025497,"byte_end":9025504,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026556,"byte_end":9026569,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025616,"byte_end":9025690,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025695,"byte_end":9025698,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025703,"byte_end":9025770,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025775,"byte_end":9025849,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025854,"byte_end":9025916,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025921,"byte_end":9025924,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9025929,"byte_end":9026003,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026008,"byte_end":9026083,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026088,"byte_end":9026112,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026117,"byte_end":9026120,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026125,"byte_end":9026188,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026193,"byte_end":9026227,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026232,"byte_end":9026235,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026240,"byte_end":9026254,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026259,"byte_end":9026262,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026267,"byte_end":9026280,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026285,"byte_end":9026315,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026320,"byte_end":9026323,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026328,"byte_end":9026392,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026397,"byte_end":9026458,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026463,"byte_end":9026466,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026471,"byte_end":9026503,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026508,"byte_end":9026520,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026525,"byte_end":9026532,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026537,"byte_end":9026544,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027200,"byte_end":9027203,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026688,"byte_end":9026746,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026751,"byte_end":9026754,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026759,"byte_end":9026819,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026824,"byte_end":9026827,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026832,"byte_end":9026867,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026872,"byte_end":9026875,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026880,"byte_end":9026894,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026899,"byte_end":9026902,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026907,"byte_end":9026920,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026925,"byte_end":9026955,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026960,"byte_end":9026963,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9026968,"byte_end":9027032,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027037,"byte_end":9027098,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027103,"byte_end":9027106,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027111,"byte_end":9027147,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027152,"byte_end":9027164,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027169,"byte_end":9027176,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027181,"byte_end":9027188,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027770,"byte_end":9027777,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027275,"byte_end":9027333,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027338,"byte_end":9027341,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027346,"byte_end":9027422,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027427,"byte_end":9027448,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027453,"byte_end":9027456,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027461,"byte_end":9027475,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027480,"byte_end":9027483,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027488,"byte_end":9027501,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027506,"byte_end":9027536,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027541,"byte_end":9027544,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027549,"byte_end":9027613,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027618,"byte_end":9027679,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027684,"byte_end":9027687,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027692,"byte_end":9027717,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027722,"byte_end":9027734,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027739,"byte_end":9027746,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027751,"byte_end":9027758,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028419,"byte_end":9028425,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027865,"byte_end":9027937,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027942,"byte_end":9027953,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027958,"byte_end":9027961,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9027966,"byte_end":9028029,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028034,"byte_end":9028037,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028042,"byte_end":9028083,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028088,"byte_end":9028091,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028096,"byte_end":9028110,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028115,"byte_end":9028118,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028123,"byte_end":9028136,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028141,"byte_end":9028171,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028176,"byte_end":9028179,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028184,"byte_end":9028248,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028253,"byte_end":9028314,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028319,"byte_end":9028322,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028327,"byte_end":9028366,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028371,"byte_end":9028383,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028388,"byte_end":9028395,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028400,"byte_end":9028407,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029367,"byte_end":9029377,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028513,"byte_end":9028583,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028588,"byte_end":9028599,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028604,"byte_end":9028607,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028612,"byte_end":9028687,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028692,"byte_end":9028755,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028760,"byte_end":9028831,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028836,"byte_end":9028853,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028858,"byte_end":9028861,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028866,"byte_end":9028939,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9028944,"byte_end":9029020,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029025,"byte_end":9029041,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029046,"byte_end":9029049,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029054,"byte_end":9029068,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029073,"byte_end":9029076,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029081,"byte_end":9029094,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029099,"byte_end":9029129,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029134,"byte_end":9029137,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029142,"byte_end":9029206,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029211,"byte_end":9029272,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029277,"byte_end":9029280,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029285,"byte_end":9029314,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029319,"byte_end":9029331,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029336,"byte_end":9029343,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029348,"byte_end":9029355,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029817,"byte_end":9029822,"line_start":669,"line_end":669,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029481,"byte_end":9029558,"line_start":662,"line_end":662,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029563,"byte_end":9029609,"line_start":663,"line_end":663,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029614,"byte_end":9029617,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029622,"byte_end":9029701,"line_start":665,"line_end":665,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029706,"byte_end":9029749,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029754,"byte_end":9029757,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029762,"byte_end":9029805,"line_start":668,"line_end":668,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030405,"byte_end":9030415,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029900,"byte_end":9029977,"line_start":673,"line_end":673,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9029982,"byte_end":9030028,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030033,"byte_end":9030036,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030041,"byte_end":9030119,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030124,"byte_end":9030172,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030177,"byte_end":9030180,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ **Note::** Dropping the write half will shutdown the write half of the TCP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030185,"byte_end":9030263,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling `shutdown(Write)` on the `TcpStream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030268,"byte_end":9030347,"line_start":680,"line_end":680,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030352,"byte_end":9030355,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9030360,"byte_end":9030393,"line_start":682,"line_end":682,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":3566},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":13817},{"krate":0,"index":3691}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/mod.rs","byte_start":9037668,"byte_end":9037690,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038146,"byte_end":9038155,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23406,"byte_end":23429,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038353,"byte_end":9038357,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038234,"byte_end":9038306,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038311,"byte_end":9038335,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040060,"byte_end":9040068,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039192,"byte_end":9039264,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039269,"byte_end":9039272,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039277,"byte_end":9039350,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039355,"byte_end":9039430,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039435,"byte_end":9039482,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039487,"byte_end":9039490,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039495,"byte_end":9039568,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039573,"byte_end":9039648,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039653,"byte_end":9039706,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039711,"byte_end":9039714,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039719,"byte_end":9039731,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039736,"byte_end":9039739,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039744,"byte_end":9039804,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039809,"byte_end":9039812,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039817,"byte_end":9039887,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039892,"byte_end":9039965,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9039970,"byte_end":9040048,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040452,"byte_end":9040457,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040260,"byte_end":9040337,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040342,"byte_end":9040415,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040420,"byte_end":9040440,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040592,"byte_end":9040602,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040521,"byte_end":9040580,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040874,"byte_end":9040881,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040688,"byte_end":9040762,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040767,"byte_end":9040840,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9040845,"byte_end":9040856,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041818,"byte_end":9041822,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041415,"byte_end":9041513,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041518,"byte_end":9041589,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041594,"byte_end":9041597,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041602,"byte_end":9041685,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041690,"byte_end":9041750,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041755,"byte_end":9041758,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9041763,"byte_end":9041800,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9042549,"byte_end":9042558,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043576,"byte_end":9043580,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9042936,"byte_end":9043015,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043020,"byte_end":9043104,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043109,"byte_end":9043141,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043146,"byte_end":9043149,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043154,"byte_end":9043235,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043240,"byte_end":9043323,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043328,"byte_end":9043362,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043367,"byte_end":9043370,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043375,"byte_end":9043458,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043463,"byte_end":9043508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043513,"byte_end":9043516,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043521,"byte_end":9043558,"line_start":153,"line_end":153,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9043720,"byte_end":9043729,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044448,"byte_end":9044455,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044157,"byte_end":9044229,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044234,"byte_end":9044305,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044310,"byte_end":9044313,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044318,"byte_end":9044394,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044399,"byte_end":9044430,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9044927,"byte_end":9044939,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045778,"byte_end":9045787,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045388,"byte_end":9045467,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045472,"byte_end":9045539,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045544,"byte_end":9045547,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045552,"byte_end":9045630,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045635,"byte_end":9045713,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045718,"byte_end":9045760,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9045946,"byte_end":9045960,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046662,"byte_end":9046671,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046445,"byte_end":9046509,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046514,"byte_end":9046517,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046522,"byte_end":9046588,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046593,"byte_end":9046596,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046601,"byte_end":9046650,"line_start":238,"line_end":238,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046927,"byte_end":9046940,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046750,"byte_end":9046814,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046819,"byte_end":9046822,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046827,"byte_end":9046898,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9046903,"byte_end":9046915,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047279,"byte_end":9047296,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047033,"byte_end":9047102,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047107,"byte_end":9047110,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047115,"byte_end":9047189,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047194,"byte_end":9047197,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047202,"byte_end":9047267,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047636,"byte_end":9047657,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047383,"byte_end":9047452,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047457,"byte_end":9047460,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047465,"byte_end":9047539,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047544,"byte_end":9047547,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047552,"byte_end":9047562,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047567,"byte_end":9047570,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047575,"byte_end":9047624,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3627},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048000,"byte_end":9048016,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047758,"byte_end":9047826,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047831,"byte_end":9047834,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047839,"byte_end":9047912,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047917,"byte_end":9047920,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9047925,"byte_end":9047988,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048495,"byte_end":9048515,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048101,"byte_end":9048169,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048174,"byte_end":9048177,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048182,"byte_end":9048252,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048257,"byte_end":9048331,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048336,"byte_end":9048398,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048403,"byte_end":9048406,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048411,"byte_end":9048421,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048426,"byte_end":9048429,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048434,"byte_end":9048483,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048864,"byte_end":9048881,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048616,"byte_end":9048687,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048692,"byte_end":9048695,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048700,"byte_end":9048774,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048779,"byte_end":9048782,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048787,"byte_end":9048852,"line_start":297,"line_end":297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049225,"byte_end":9049246,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9048968,"byte_end":9049039,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049044,"byte_end":9049047,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049052,"byte_end":9049128,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049133,"byte_end":9049136,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049141,"byte_end":9049151,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049156,"byte_end":9049159,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049164,"byte_end":9049213,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049540,"byte_end":9049543,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049347,"byte_end":9049405,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049410,"byte_end":9049413,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049418,"byte_end":9049478,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049483,"byte_end":9049486,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049491,"byte_end":9049528,"line_start":317,"line_end":317,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3632},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049800,"byte_end":9049807,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049615,"byte_end":9049673,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049678,"byte_end":9049681,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049686,"byte_end":9049762,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049767,"byte_end":9049788,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050325,"byte_end":9050342,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049895,"byte_end":9049953,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049958,"byte_end":9049961,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9049966,"byte_end":9050040,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050045,"byte_end":9050118,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050123,"byte_end":9050195,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050200,"byte_end":9050270,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050275,"byte_end":9050313,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050807,"byte_end":9050824,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050491,"byte_end":9050551,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050556,"byte_end":9050559,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050564,"byte_end":9050638,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050643,"byte_end":9050716,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050721,"byte_end":9050795,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051191,"byte_end":9051209,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9050967,"byte_end":9051026,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051031,"byte_end":9051034,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051039,"byte_end":9051109,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051114,"byte_end":9051117,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051122,"byte_end":9051179,"line_start":354,"line_end":354,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051585,"byte_end":9051603,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051359,"byte_end":9051420,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051425,"byte_end":9051428,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051433,"byte_end":9051503,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051508,"byte_end":9051511,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051516,"byte_end":9051573,"line_start":363,"line_end":363,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3695},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054238,"byte_end":9054246,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054050,"byte_end":9054109,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054110,"byte_end":9054113,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054114,"byte_end":9054194,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054195,"byte_end":9054209,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3700},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054460,"byte_end":9054468,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054265,"byte_end":9054324,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054325,"byte_end":9054328,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054329,"byte_end":9054416,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054417,"byte_end":9054431,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3705},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054810,"byte_end":9054822,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054681,"byte_end":9054758,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054759,"byte_end":9054781,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3707},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054823,"byte_end":9054835,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3708},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054837,"byte_end":9054849,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055859,"byte_end":9055866,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055644,"byte_end":9055715,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055720,"byte_end":9055786,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055791,"byte_end":9055847,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056357,"byte_end":9056366,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055967,"byte_end":9056046,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056051,"byte_end":9056118,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056123,"byte_end":9056126,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056131,"byte_end":9056209,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056214,"byte_end":9056292,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056297,"byte_end":9056339,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057146,"byte_end":9057150,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056501,"byte_end":9056580,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056585,"byte_end":9056669,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056674,"byte_end":9056706,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056711,"byte_end":9056714,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056719,"byte_end":9056800,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056805,"byte_end":9056888,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056893,"byte_end":9056927,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056932,"byte_end":9056935,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9056940,"byte_end":9057023,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057028,"byte_end":9057073,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057078,"byte_end":9057081,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057086,"byte_end":9057128,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3675},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057499,"byte_end":9057506,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057284,"byte_end":9057355,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057360,"byte_end":9057426,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057431,"byte_end":9057487,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057898,"byte_end":9057905,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057607,"byte_end":9057679,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057684,"byte_end":9057755,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057760,"byte_end":9057763,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057768,"byte_end":9057844,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057849,"byte_end":9057880,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058457,"byte_end":9058461,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058049,"byte_end":9058147,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058152,"byte_end":9058223,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058228,"byte_end":9058231,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058236,"byte_end":9058319,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058324,"byte_end":9058384,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058389,"byte_end":9058392,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058397,"byte_end":9058439,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3711},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3773},{"krate":0,"index":3788},{"krate":0,"index":3789},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3950}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/mod.rs","byte_start":9058769,"byte_end":9058805,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3954},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059443,"byte_end":9059455,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3955}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059612,"byte_end":9059616,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059539,"byte_end":9059600,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060079,"byte_end":9060083,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059799,"byte_end":9059848,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059853,"byte_end":9059856,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059861,"byte_end":9059932,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059937,"byte_end":9060007,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060012,"byte_end":9060067,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3733},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060909,"byte_end":9060917,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060294,"byte_end":9060361,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060366,"byte_end":9060413,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060418,"byte_end":9060421,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060426,"byte_end":9060496,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060501,"byte_end":9060555,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060560,"byte_end":9060563,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060568,"byte_end":9060580,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060585,"byte_end":9060588,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060593,"byte_end":9060653,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060658,"byte_end":9060661,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060666,"byte_end":9060736,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060741,"byte_end":9060814,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9060819,"byte_end":9060897,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3735},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061368,"byte_end":9061375,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061289,"byte_end":9061356,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3736},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061728,"byte_end":9061735,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061509,"byte_end":9061558,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061563,"byte_end":9061566,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061571,"byte_end":9061643,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061648,"byte_end":9061716,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3738},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061907,"byte_end":9061911,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9061839,"byte_end":9061889,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3743},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9063106,"byte_end":9063110,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9063054,"byte_end":9063088,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9063788,"byte_end":9063795,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9063716,"byte_end":9063770,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9064516,"byte_end":9064525,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9064464,"byte_end":9064498,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065252,"byte_end":9065262,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065181,"byte_end":9065240,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065478,"byte_end":9065487,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065348,"byte_end":9065394,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065399,"byte_end":9065402,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065407,"byte_end":9065466,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3761},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065631,"byte_end":9065641,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065572,"byte_end":9065619,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066015,"byte_end":9066023,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065734,"byte_end":9065800,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065805,"byte_end":9065808,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065813,"byte_end":9065881,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065886,"byte_end":9065956,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9065961,"byte_end":9066003,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067401,"byte_end":9067409,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3958}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067300,"byte_end":9067323,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067341,"byte_end":9067389,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3784},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067918,"byte_end":9067929,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067589,"byte_end":9067664,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067669,"byte_end":9067684,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067689,"byte_end":9067692,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067697,"byte_end":9067767,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067772,"byte_end":9067847,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067852,"byte_end":9067906,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3962},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070255,"byte_end":9070267,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3963}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070766,"byte_end":9070770,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070351,"byte_end":9070412,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070417,"byte_end":9070420,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070425,"byte_end":9070437,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070442,"byte_end":9070445,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070450,"byte_end":9070510,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070515,"byte_end":9070518,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070523,"byte_end":9070593,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070598,"byte_end":9070671,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070676,"byte_end":9070754,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071614,"byte_end":9071622,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070999,"byte_end":9071066,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071071,"byte_end":9071118,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071123,"byte_end":9071126,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071131,"byte_end":9071201,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071206,"byte_end":9071260,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071265,"byte_end":9071268,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071273,"byte_end":9071285,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071290,"byte_end":9071293,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071298,"byte_end":9071358,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071363,"byte_end":9071366,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071371,"byte_end":9071441,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071446,"byte_end":9071519,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071524,"byte_end":9071602,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071909,"byte_end":9071919,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9071843,"byte_end":9071897,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9072064,"byte_end":9072074,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9072005,"byte_end":9072052,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9072240,"byte_end":9072246,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9072167,"byte_end":9072222,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074715,"byte_end":9074723,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073351,"byte_end":9073425,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073430,"byte_end":9073433,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073438,"byte_end":9073501,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073506,"byte_end":9073509,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073514,"byte_end":9073590,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073595,"byte_end":9073664,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073669,"byte_end":9073698,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073703,"byte_end":9073706,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073711,"byte_end":9073723,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073728,"byte_end":9073731,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073736,"byte_end":9073811,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073816,"byte_end":9073891,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073896,"byte_end":9073970,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9073975,"byte_end":9074050,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074055,"byte_end":9074063,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074068,"byte_end":9074071,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074076,"byte_end":9074090,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074095,"byte_end":9074098,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074103,"byte_end":9074116,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074121,"byte_end":9074154,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074159,"byte_end":9074192,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074197,"byte_end":9074200,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074205,"byte_end":9074223,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074228,"byte_end":9074249,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074254,"byte_end":9074332,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074337,"byte_end":9074384,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074389,"byte_end":9074392,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074397,"byte_end":9074453,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074458,"byte_end":9074484,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074489,"byte_end":9074520,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074525,"byte_end":9074569,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074574,"byte_end":9074591,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074596,"byte_end":9074649,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074654,"byte_end":9074667,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074672,"byte_end":9074681,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074686,"byte_end":9074691,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074696,"byte_end":9074703,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3964},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9076834,"byte_end":9076842,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9076773,"byte_end":9076805,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9076927,"byte_end":9076936,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9076865,"byte_end":9076898,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9078902,"byte_end":9078912,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3979}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23599,"byte_end":23633,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079234,"byte_end":9079241,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9078992,"byte_end":9079035,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079040,"byte_end":9079043,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079048,"byte_end":9079119,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079124,"byte_end":9079200,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079205,"byte_end":9079216,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080126,"byte_end":9080134,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079517,"byte_end":9079582,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079587,"byte_end":9079632,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079637,"byte_end":9079640,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079645,"byte_end":9079713,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079718,"byte_end":9079772,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079777,"byte_end":9079780,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079785,"byte_end":9079797,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079802,"byte_end":9079805,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079810,"byte_end":9079870,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079875,"byte_end":9079878,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079883,"byte_end":9079953,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9079958,"byte_end":9080031,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080036,"byte_end":9080114,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080618,"byte_end":9080622,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080338,"byte_end":9080387,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080392,"byte_end":9080395,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080400,"byte_end":9080471,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080476,"byte_end":9080546,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080551,"byte_end":9080606,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081063,"byte_end":9081073,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9080983,"byte_end":9081051,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081240,"byte_end":9081249,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081159,"byte_end":9081228,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081428,"byte_end":9081437,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081334,"byte_end":9081416,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081573,"byte_end":9081583,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081514,"byte_end":9081561,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081957,"byte_end":9081965,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081676,"byte_end":9081742,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081747,"byte_end":9081750,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081755,"byte_end":9081823,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081828,"byte_end":9081898,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9081903,"byte_end":9081945,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082199,"byte_end":9082204,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082059,"byte_end":9082136,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082141,"byte_end":9082187,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3980},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085785,"byte_end":9085790,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085694,"byte_end":9085722,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3981},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085838,"byte_end":9085841,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085797,"byte_end":9085829,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3982},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085896,"byte_end":9085899,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3980},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/ucred.rs","byte_start":9085854,"byte_end":9085887,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93380,"byte_end":93386,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93317,"byte_end":93370,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93439,"byte_end":93444,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":93401,"byte_end":93429,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":556},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105035,"byte_end":105053,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105055,"byte_end":105102,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105103,"byte_end":105106,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105107,"byte_end":105183,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105184,"byte_end":105261,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105262,"byte_end":105314,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105315,"byte_end":105318,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105319,"byte_end":105326,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105327,"byte_end":105352,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105353,"byte_end":105379,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105380,"byte_end":105387,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105388,"byte_end":105391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/prelude.rs","byte_start":105392,"byte_end":105466,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":4103},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4253},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4414},{"krate":0,"index":4417},{"krate":0,"index":4277},{"krate":0,"index":4282},{"krate":0,"index":4324},{"krate":0,"index":4419},{"krate":0,"index":4423},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4426},{"krate":0,"index":4431},{"krate":0,"index":4338},{"krate":0,"index":4352},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4355},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4365}],"decl_id":null,"docs":" An implementation of asynchronous process management for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"process\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20581,"byte_end":20608,"line_start":199,"line_end":199,"column_start":13,"column_end":40}},{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20684,"byte_end":20701,"line_start":201,"line_end":201,"column_start":13,"column_end":30}},{"value":"/ An implementation of asynchronous process management for Tokio.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091215,"byte_end":9091282,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091283,"byte_end":9091286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a [`Command`] struct that imitates the interface of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091287,"byte_end":9091367,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`std::process::Command`] type in the standard library, but provides asynchronous versions of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091368,"byte_end":9091465,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ functions that create processes. These functions (`spawn`, `status`, `output` and their","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091466,"byte_end":9091557,"line_start":5,"line_end":5,"column_start":1,"column_end":92}},{"value":"/ variants) return \"future aware\" types that interoperate with Tokio. The asynchronous process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091558,"byte_end":9091654,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ support is provided through signal handling on Unix and system APIs on Windows.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091655,"byte_end":9091738,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091739,"byte_end":9091742,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091743,"byte_end":9091795,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091796,"byte_end":9091799,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091800,"byte_end":9091814,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091815,"byte_end":9091818,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Here's an example program which will spawn `echo hello world` and then wait","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091819,"byte_end":9091898,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ for it complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091899,"byte_end":9091919,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091920,"byte_end":9091923,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091924,"byte_end":9091937,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091938,"byte_end":9091970,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091971,"byte_end":9091974,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091975,"byte_end":9091993,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9091994,"byte_end":9092057,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/     // The usage is the same as with the standard library's `Command` type, however the value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092058,"byte_end":9092155,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/     // returned from `spawn` is a `Result` containing a `Future`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092156,"byte_end":9092225,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/     let child = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092226,"byte_end":9092292,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/                         .spawn();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092293,"byte_end":9092330,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092331,"byte_end":9092334,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Make sure our child succeeded in spawning and process the result","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092335,"byte_end":9092410,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/     let future = child.expect(\"failed to spawn\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092411,"byte_end":9092464,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092465,"byte_end":9092468,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Await until the future (and the command) completes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092469,"byte_end":9092530,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     let status = future.await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092531,"byte_end":9092566,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     println!(\"the command exited with: {}\", status);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092567,"byte_end":9092623,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092624,"byte_end":9092638,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092639,"byte_end":9092644,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092645,"byte_end":9092652,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092653,"byte_end":9092656,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Next, let's take a look at an example where we not only spawn `echo hello","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092657,"byte_end":9092734,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ world` but we also capture its output.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092735,"byte_end":9092777,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092778,"byte_end":9092781,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092782,"byte_end":9092795,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092796,"byte_end":9092828,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092829,"byte_end":9092832,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092833,"byte_end":9092851,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092852,"byte_end":9092915,"line_start":43,"line_end":43,"column_start":1,"column_end":64}},{"value":"/     // Like above, but use `output` which returns a future instead of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092916,"byte_end":9092989,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/     // immediately returning the `Child`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9092990,"byte_end":9093035,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     let output = Command::new(\"echo\").arg(\"hello\").arg(\"world\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093036,"byte_end":9093103,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/                         .output();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093104,"byte_end":9093142,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093143,"byte_end":9093146,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     let output = output.await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093147,"byte_end":9093182,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093183,"byte_end":9093186,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert!(output.status.success());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093187,"byte_end":9093228,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(output.stdout, b\"hello world\\n\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093229,"byte_end":9093281,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093282,"byte_end":9093296,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093297,"byte_end":9093302,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093303,"byte_end":9093310,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093311,"byte_end":9093314,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ We can also read input line by line.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093315,"byte_end":9093355,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093356,"byte_end":9093359,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093360,"byte_end":9093373,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{BufReader, AsyncBufReadExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093374,"byte_end":9093422,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093423,"byte_end":9093455,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093456,"byte_end":9093459,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093460,"byte_end":9093488,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093489,"byte_end":9093492,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093493,"byte_end":9093511,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093512,"byte_end":9093575,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/     let mut cmd = Command::new(\"cat\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093576,"byte_end":9093618,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093619,"byte_end":9093622,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Specify that we want the command's standard output piped back to us.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093623,"byte_end":9093702,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/     // By default, standard input/output/error will be inherited from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093703,"byte_end":9093780,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/     // current process (for example, this means that standard input will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093781,"byte_end":9093857,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/     // come from the keyboard and standard output/error will go directly to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093858,"byte_end":9093937,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/     // the terminal if this process is invoked from the command line).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9093938,"byte_end":9094012,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/     cmd.stdout(Stdio::piped());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094013,"byte_end":9094048,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094049,"byte_end":9094052,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut child = cmd.spawn()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094053,"byte_end":9094088,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/         .expect(\"failed to spawn command\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094089,"byte_end":9094136,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094137,"byte_end":9094140,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     let stdout = child.stdout.take()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094141,"byte_end":9094181,"line_start":79,"line_end":79,"column_start":1,"column_end":41}},{"value":"/         .expect(\"child did not have a handle to stdout\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094182,"byte_end":9094243,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094244,"byte_end":9094247,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     let mut reader = BufReader::new(stdout).lines();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094248,"byte_end":9094304,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094305,"byte_end":9094308,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     // Ensure the child process is spawned in the runtime so it can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094309,"byte_end":9094380,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/     // make progress on its own while we await for any output.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094381,"byte_end":9094447,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/     tokio::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094448,"byte_end":9094476,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/         let status = child.await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094477,"byte_end":9094513,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/             .expect(\"child process encountered an error\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094514,"byte_end":9094576,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094577,"byte_end":9094580,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         println!(\"child status was: {}\", status);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094581,"byte_end":9094634,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094635,"byte_end":9094646,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094647,"byte_end":9094650,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     while let Some(line) = reader.next_line().await? {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094651,"byte_end":9094709,"line_start":93,"line_end":93,"column_start":1,"column_end":59}},{"value":"/         println!(\"Line: {}\", line);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094710,"byte_end":9094749,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094750,"byte_end":9094759,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094760,"byte_end":9094763,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094764,"byte_end":9094778,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094779,"byte_end":9094784,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094785,"byte_end":9094792,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094793,"byte_end":9094796,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094797,"byte_end":9094810,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094811,"byte_end":9094814,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094815,"byte_end":9094890,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094891,"byte_end":9094964,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9094965,"byte_end":9095045,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095046,"byte_end":9095049,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095050,"byte_end":9095124,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095125,"byte_end":9095199,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095200,"byte_end":9095215,"line_start":109,"line_end":109,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095216,"byte_end":9095219,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`Command`]: crate::process::Command","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095220,"byte_end":9095260,"line_start":111,"line_end":111,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4414},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096281,"byte_end":9096288,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"Command","qualname":"::process::Command","value":"Command {  }","parent":null,"children":[{"krate":0,"index":4415},{"krate":0,"index":4416}],"decl_id":null,"docs":" This structure mimics the API of [`std::process::Command`] found in the standard library, but\n replaces functions that create a process with an asynchronous variant. The main provided\n asynchronous functions are [spawn](Command::spawn), [status](Command::status), and\n [output](Command::output).","sig":null,"attributes":[{"value":"/ This structure mimics the API of [`std::process::Command`] found in the standard library, but","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095769,"byte_end":9095866,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"/ replaces functions that create a process with an asynchronous variant. The main provided","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095867,"byte_end":9095959,"line_start":140,"line_end":140,"column_start":1,"column_end":93}},{"value":"/ asynchronous functions are [spawn](Command::spawn), [status](Command::status), and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9095960,"byte_end":9096046,"line_start":141,"line_end":141,"column_start":1,"column_end":87}},{"value":"/ [output](Command::output).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096047,"byte_end":9096077,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096078,"byte_end":9096081,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `Command` uses asynchronous versions of some `std` types (for example [`Child`]).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096082,"byte_end":9096167,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096168,"byte_end":9096171,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`std::process::Command`]: std::process::Command","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096172,"byte_end":9096224,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Child`]: struct@Child","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096225,"byte_end":9096252,"line_start":147,"line_end":147,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097638,"byte_end":9097641,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Command>::new","value":"pub fn new<S: AsRef<OsStr>>(S) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Command` for launching the program at\n path `program`, with the following default configuration:","sig":null,"attributes":[{"value":"/ Constructs a new `Command` for launching the program at","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096529,"byte_end":9096588,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ path `program`, with the following default configuration:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096593,"byte_end":9096654,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096659,"byte_end":9096662,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * No arguments to the program","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096667,"byte_end":9096700,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ * Inherit the current process's environment","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096705,"byte_end":9096752,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ * Inherit the current process's working directory","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096757,"byte_end":9096810,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/ * Inherit stdin/stdout/stderr for `spawn` or `status`, but create pipes for `output`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096815,"byte_end":9096903,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096908,"byte_end":9096911,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Builder methods are provided to change these defaults and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096916,"byte_end":9096977,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ otherwise configure the process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096982,"byte_end":9097018,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097023,"byte_end":9097026,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If `program` is not an absolute path, the `PATH` will be searched in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097031,"byte_end":9097103,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ an OS-defined way.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097108,"byte_end":9097130,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097135,"byte_end":9097138,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The search path to be used may be controlled by setting the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097143,"byte_end":9097206,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/ `PATH` environment variable on the Command,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097211,"byte_end":9097258,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ but this has some implementation limitations on Windows","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097263,"byte_end":9097322,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ (see issue [rust-lang/rust#37519]).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097327,"byte_end":9097366,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097371,"byte_end":9097374,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097379,"byte_end":9097393,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097398,"byte_end":9097401,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097406,"byte_end":9097422,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097427,"byte_end":9097430,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097435,"byte_end":9097448,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097453,"byte_end":9097485,"line_start":186,"line_end":186,"column_start":5,"column_end":37}},{"value":"/ let command = Command::new(\"sh\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097490,"byte_end":9097527,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097532,"byte_end":9097539,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097544,"byte_end":9097547,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [rust-lang/rust#37519]: https://github.com/rust-lang/rust/issues/37519","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097552,"byte_end":9097626,"line_start":190,"line_end":190,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098488,"byte_end":9098491,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"arg","qualname":"<Command>::arg","value":"pub fn arg<S: AsRef<OsStr>>(&mut Self, S) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Adds an argument to pass to the program.","sig":null,"attributes":[{"value":"/ Adds an argument to pass to the program.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097740,"byte_end":9097784,"line_start":195,"line_end":195,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097789,"byte_end":9097792,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Only one argument can be passed per use. So instead of:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097797,"byte_end":9097856,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097861,"byte_end":9097864,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097869,"byte_end":9097882,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097887,"byte_end":9097925,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C /path/to/repo\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097930,"byte_end":9097961,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097966,"byte_end":9097973,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097978,"byte_end":9097981,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ usage would be:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9097986,"byte_end":9098005,"line_start":204,"line_end":204,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098010,"byte_end":9098013,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098018,"byte_end":9098031,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ tokio::process::Command::new(\"sh\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098036,"byte_end":9098074,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/   .arg(\"-C\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098079,"byte_end":9098095,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/   .arg(\"/path/to/repo\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098100,"byte_end":9098128,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098133,"byte_end":9098140,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098145,"byte_end":9098148,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ To pass multiple arguments see [`args`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098153,"byte_end":9098197,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098202,"byte_end":9098205,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`args`]: method@Self::args","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098210,"byte_end":9098241,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098246,"byte_end":9098249,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098254,"byte_end":9098268,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098273,"byte_end":9098276,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098281,"byte_end":9098297,"line_start":218,"line_end":218,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098302,"byte_end":9098305,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098310,"byte_end":9098323,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098328,"byte_end":9098360,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098365,"byte_end":9098368,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098373,"byte_end":9098409,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/         .arg(\"-l\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098414,"byte_end":9098436,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/         .arg(\"-a\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098441,"byte_end":9098464,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098469,"byte_end":9098476,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098975,"byte_end":9098979,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"args","qualname":"<Command>::args","value":"pub fn args<I, S>(&mut Self, I) -> &mut Command where I: IntoIterator<Item =\nS>, S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple arguments to pass to the program.","sig":null,"attributes":[{"value":"/ Adds multiple arguments to pass to the program.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098597,"byte_end":9098648,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098653,"byte_end":9098656,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To pass a single argument see [`arg`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098661,"byte_end":9098703,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098708,"byte_end":9098711,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`arg`]: method@Self::arg","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098716,"byte_end":9098745,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098750,"byte_end":9098753,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098758,"byte_end":9098772,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098777,"byte_end":9098780,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098785,"byte_end":9098801,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098806,"byte_end":9098809,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098814,"byte_end":9098827,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098832,"byte_end":9098864,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098869,"byte_end":9098872,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098877,"byte_end":9098913,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/         .args(&[\"-l\", \"-a\"]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098918,"byte_end":9098951,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9098956,"byte_end":9098963,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4290},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099595,"byte_end":9099598,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"env","qualname":"<Command>::env","value":"pub fn env<K, V>(&mut Self, K, V) -> &mut Command where K: AsRef<OsStr>,\nV: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Inserts or updates an environment variable mapping.","sig":null,"attributes":[{"value":"/ Inserts or updates an environment variable mapping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099151,"byte_end":9099206,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099211,"byte_end":9099214,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note that environment variable names are case-insensitive (but case-preserving) on Windows,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099219,"byte_end":9099314,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ and case-sensitive on all other platforms.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099319,"byte_end":9099365,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099370,"byte_end":9099373,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099378,"byte_end":9099392,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099397,"byte_end":9099400,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099405,"byte_end":9099421,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099426,"byte_end":9099429,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099434,"byte_end":9099447,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099452,"byte_end":9099484,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099489,"byte_end":9099492,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099497,"byte_end":9099533,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         .env(\"PATH\", \"/bin\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099538,"byte_end":9099571,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099576,"byte_end":9099583,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100472,"byte_end":9100476,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"envs","qualname":"<Command>::envs","value":"pub fn envs<I, K, V>(&mut Self, I) -> &mut Command where I: IntoIterator<Item\n= (K, V)>, K: AsRef<OsStr>, V: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Adds or updates multiple environment variable mappings.","sig":null,"attributes":[{"value":"/ Adds or updates multiple environment variable mappings.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099770,"byte_end":9099829,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099834,"byte_end":9099837,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099842,"byte_end":9099856,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099861,"byte_end":9099864,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099869,"byte_end":9099885,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099890,"byte_end":9099893,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099898,"byte_end":9099911,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099916,"byte_end":9099948,"line_start":288,"line_end":288,"column_start":5,"column_end":37}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099953,"byte_end":9099983,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ use std::env;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9099988,"byte_end":9100005,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100010,"byte_end":9100044,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100049,"byte_end":9100052,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let filtered_env : HashMap<String, String> =","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100057,"byte_end":9100105,"line_start":293,"line_end":293,"column_start":5,"column_end":53}},{"value":"/     env::vars().filter(|&(ref k, _)|","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100110,"byte_end":9100150,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/         k == \"TERM\" || k == \"TZ\" || k == \"LANG\" || k == \"PATH\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100155,"byte_end":9100221,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/     ).collect();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100226,"byte_end":9100246,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100251,"byte_end":9100254,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"printenv\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100259,"byte_end":9100301,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/         .stdin(Stdio::null())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100306,"byte_end":9100339,"line_start":299,"line_end":299,"column_start":5,"column_end":38}},{"value":"/         .stdout(Stdio::inherit())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100344,"byte_end":9100381,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/         .env_clear()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100386,"byte_end":9100410,"line_start":301,"line_end":301,"column_start":5,"column_end":29}},{"value":"/         .envs(&filtered_env);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100415,"byte_end":9100448,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100453,"byte_end":9100460,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100954,"byte_end":9100964,"line_start":326,"line_end":326,"column_start":12,"column_end":22},"name":"env_remove","qualname":"<Command>::env_remove","value":"pub fn env_remove<K: AsRef<OsStr>>(&mut Self, K) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Removes an environment variable mapping.","sig":null,"attributes":[{"value":"/ Removes an environment variable mapping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100681,"byte_end":9100725,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100730,"byte_end":9100733,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100738,"byte_end":9100752,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100757,"byte_end":9100760,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100765,"byte_end":9100781,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100786,"byte_end":9100789,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100794,"byte_end":9100807,"line_start":320,"line_end":320,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100812,"byte_end":9100844,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100849,"byte_end":9100852,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100857,"byte_end":9100893,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/         .env_remove(\"PATH\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100898,"byte_end":9100930,"line_start":324,"line_end":324,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9100935,"byte_end":9100942,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101359,"byte_end":9101368,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"env_clear","qualname":"<Command>::env_clear","value":"pub fn env_clear(&mut Self) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Clears the entire environment map for the child process.","sig":null,"attributes":[{"value":"/ Clears the entire environment map for the child process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101077,"byte_end":9101137,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101142,"byte_end":9101145,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101150,"byte_end":9101164,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101169,"byte_end":9101172,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101177,"byte_end":9101193,"line_start":335,"line_end":335,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101198,"byte_end":9101201,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101206,"byte_end":9101219,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101224,"byte_end":9101256,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101261,"byte_end":9101264,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101269,"byte_end":9101305,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/         .env_clear();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101310,"byte_end":9101335,"line_start":341,"line_end":341,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101340,"byte_end":9101347,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4300},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102213,"byte_end":9102224,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"current_dir","qualname":"<Command>::current_dir","value":"pub fn current_dir<P: AsRef<Path>>(&mut Self, P) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the working directory for the child process.","sig":null,"attributes":[{"value":"/ Sets the working directory for the child process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101452,"byte_end":9101505,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101510,"byte_end":9101513,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101518,"byte_end":9101550,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101555,"byte_end":9101558,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the program path is relative (e.g., `\"./script.sh\"`), it's ambiguous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101563,"byte_end":9101638,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ whether it should be interpreted relative to the parent's working","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101643,"byte_end":9101712,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ directory or relative to `current_dir`. The behavior in this case is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101717,"byte_end":9101789,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ platform specific and unstable, and it's recommended to use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101794,"byte_end":9101857,"line_start":355,"line_end":355,"column_start":5,"column_end":68}},{"value":"/ [`canonicalize`] to get an absolute program path instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101862,"byte_end":9101923,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101928,"byte_end":9101931,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`canonicalize`]: crate::fs::canonicalize()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101936,"byte_end":9101983,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101988,"byte_end":9101991,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9101996,"byte_end":9102010,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102015,"byte_end":9102018,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102023,"byte_end":9102039,"line_start":362,"line_end":362,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102044,"byte_end":9102047,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102052,"byte_end":9102065,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102070,"byte_end":9102102,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102107,"byte_end":9102110,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102115,"byte_end":9102151,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/         .current_dir(\"/bin\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102156,"byte_end":9102189,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102194,"byte_end":9102201,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102919,"byte_end":9102924,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Command>::stdin","value":"pub fn stdin<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard input (stdin) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard input (stdin) handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102337,"byte_end":9102414,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102419,"byte_end":9102422,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102427,"byte_end":9102494,"line_start":377,"line_end":377,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102499,"byte_end":9102549,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102554,"byte_end":9102557,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102562,"byte_end":9102607,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102612,"byte_end":9102653,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102658,"byte_end":9102661,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102666,"byte_end":9102680,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102685,"byte_end":9102688,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102693,"byte_end":9102709,"line_start":385,"line_end":385,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102714,"byte_end":9102717,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102722,"byte_end":9102735,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102740,"byte_end":9102770,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102775,"byte_end":9102807,"line_start":389,"line_end":389,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102812,"byte_end":9102815,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102820,"byte_end":9102856,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/         .stdin(Stdio::null());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102861,"byte_end":9102895,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9102900,"byte_end":9102907,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4304},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103615,"byte_end":9103621,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Command>::stdout","value":"pub fn stdout<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard output (stdout) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard output (stdout) handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103031,"byte_end":9103110,"line_start":399,"line_end":399,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103115,"byte_end":9103118,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103123,"byte_end":9103190,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103195,"byte_end":9103245,"line_start":402,"line_end":402,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103250,"byte_end":9103253,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103258,"byte_end":9103303,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103308,"byte_end":9103349,"line_start":405,"line_end":405,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103354,"byte_end":9103357,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103362,"byte_end":9103376,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103381,"byte_end":9103384,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103389,"byte_end":9103405,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103410,"byte_end":9103413,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103418,"byte_end":9103431,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103436,"byte_end":9103469,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/ use std::process::Stdio;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103474,"byte_end":9103502,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103507,"byte_end":9103510,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103515,"byte_end":9103551,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/         .stdout(Stdio::null());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103556,"byte_end":9103591,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103596,"byte_end":9103603,"line_start":417,"line_end":417,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104314,"byte_end":9104320,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Command>::stderr","value":"pub fn stderr<T: Into<Stdio>>(&mut Self, T) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets configuration for the child process's standard error (stderr) handle.","sig":null,"attributes":[{"value":"/ Sets configuration for the child process's standard error (stderr) handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103729,"byte_end":9103807,"line_start":423,"line_end":423,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103812,"byte_end":9103815,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Defaults to [`inherit`] when used with `spawn` or `status`, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103820,"byte_end":9103887,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ defaults to [`piped`] when used with `output`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103892,"byte_end":9103942,"line_start":426,"line_end":426,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103947,"byte_end":9103950,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ [`inherit`]: std::process::Stdio::inherit","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9103955,"byte_end":9104000,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ [`piped`]: std::process::Stdio::piped","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104005,"byte_end":9104046,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104051,"byte_end":9104054,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104059,"byte_end":9104073,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104078,"byte_end":9104081,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104086,"byte_end":9104102,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104107,"byte_end":9104110,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104115,"byte_end":9104128,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104133,"byte_end":9104166,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ use std::process::{Stdio};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104171,"byte_end":9104201,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104206,"byte_end":9104209,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let command = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104214,"byte_end":9104250,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/         .stderr(Stdio::null());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104255,"byte_end":9104290,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104295,"byte_end":9104302,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4308},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104773,"byte_end":9104785,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"kill_on_drop","qualname":"<Command>::kill_on_drop","value":"pub fn kill_on_drop(&mut Self, bool) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Controls whether a `kill` operation should be invoked on a spawned child\n process when its corresponding `Child` handle is dropped.","sig":null,"attributes":[{"value":"/ Controls whether a `kill` operation should be invoked on a spawned child","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104428,"byte_end":9104504,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ process when its corresponding `Child` handle is dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104509,"byte_end":9104570,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104575,"byte_end":9104578,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ By default, this value is assumed to be `false`, meaning the next spawned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104583,"byte_end":9104660,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"/ process will not be killed on drop, similar to the behavior of the standard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104665,"byte_end":9104744,"line_start":451,"line_end":451,"column_start":5,"column_end":84}},{"value":"/ library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9104749,"byte_end":9104761,"line_start":452,"line_end":452,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105502,"byte_end":9105505,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"uid","qualname":"<Command>::uid","value":"pub fn uid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Sets the child process's user ID. This translates to a\n `setuid` call in the child process. Failure in the `setuid`\n call will cause the spawn to fail.\n","sig":null,"attributes":[{"value":"/ Sets the child process's user ID. This translates to a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105304,"byte_end":9105362,"line_start":469,"line_end":469,"column_start":5,"column_end":63}},{"value":"/ `setuid` call in the child process. Failure in the `setuid`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105367,"byte_end":9105430,"line_start":470,"line_end":470,"column_start":5,"column_end":68}},{"value":"/ call will cause the spawn to fail.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105435,"byte_end":9105473,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"cfg(unix)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105478,"byte_end":9105490,"line_start":472,"line_end":472,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4310},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105743,"byte_end":9105746,"line_start":481,"line_end":481,"column_start":12,"column_end":15},"name":"gid","qualname":"<Command>::gid","value":"pub fn gid(&mut Self, u32) -> &mut Command","parent":null,"children":[],"decl_id":null,"docs":" Similar to `uid` but sets the group ID of the child process. This has\n the same semantics as the `uid` field.\n","sig":null,"attributes":[{"value":"/ Similar to `uid` but sets the group ID of the child process. This has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105594,"byte_end":9105667,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ the same semantics as the `uid` field.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105672,"byte_end":9105714,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"cfg(unix)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105719,"byte_end":9105731,"line_start":480,"line_end":480,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107400,"byte_end":9107408,"line_start":516,"line_end":516,"column_start":19,"column_end":27},"name":"pre_exec","qualname":"<Command>::pre_exec","value":"pub unsafe fn pre_exec<F>(&mut Self, F) -> &mut Command where F: FnMut() ->\nio::Result<()> + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Schedules a closure to be run just before the `exec` function is\n invoked.","sig":null,"attributes":[{"value":"/ Schedules a closure to be run just before the `exec` function is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105835,"byte_end":9105903,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ invoked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105908,"byte_end":9105920,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105925,"byte_end":9105928,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ The closure is allowed to return an I/O error whose OS error code will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9105933,"byte_end":9106007,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ be communicated back to the parent and returned as an error from when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106012,"byte_end":9106085,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ the spawn was requested.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106090,"byte_end":9106118,"line_start":491,"line_end":491,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106123,"byte_end":9106126,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Multiple closures can be registered and they will be called in order of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106131,"byte_end":9106206,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ their registration. If a closure returns `Err` then no further closures","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106211,"byte_end":9106286,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ will be called and the spawn operation will immediately return with a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106291,"byte_end":9106364,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ failure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106369,"byte_end":9106381,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106386,"byte_end":9106389,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106394,"byte_end":9106406,"line_start":498,"line_end":498,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106411,"byte_end":9106414,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ This closure will be run in the context of the child process after a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106419,"byte_end":9106491,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ `fork`. This primarily means that any modifications made to memory on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106496,"byte_end":9106569,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ behalf of this closure will **not** be visible to the parent process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106574,"byte_end":9106647,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ This is often a very constrained environment where normal operations","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106652,"byte_end":9106724,"line_start":503,"line_end":503,"column_start":5,"column_end":77}},{"value":"/ like `malloc` or acquiring a mutex are not guaranteed to work (due to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106729,"byte_end":9106802,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ other threads perhaps still running when the `fork` was run).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106807,"byte_end":9106872,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106877,"byte_end":9106880,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This also means that all resources such as file descriptors and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106885,"byte_end":9106952,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"/ memory-mapped regions got duplicated. It is your responsibility to make","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9106957,"byte_end":9107032,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ sure that the closure does not violate library invariants by making","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107037,"byte_end":9107108,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/ invalid use of these duplicates.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107113,"byte_end":9107149,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107154,"byte_end":9107157,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ When this closure is run, aspects such as the stdio file descriptors and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107162,"byte_end":9107238,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ working directory have successfully been changed, so output to these","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107243,"byte_end":9107315,"line_start":513,"line_end":513,"column_start":5,"column_end":77}},{"value":"/ locations may not appear where intended.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107320,"byte_end":9107364,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"cfg(unix)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107369,"byte_end":9107381,"line_start":515,"line_end":515,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4313},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109047,"byte_end":9109052,"line_start":562,"line_end":562,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Command>::spawn","value":"pub fn spawn(&mut Self) -> io::Result<Child>","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, returning a handle to it.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, returning a handle to it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107577,"byte_end":9107647,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107652,"byte_end":9107655,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107660,"byte_end":9107731,"line_start":526,"line_end":526,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107736,"byte_end":9107739,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method will spawn the child process synchronously and return a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107744,"byte_end":9107815,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ handle to a future-aware child process. The `Child` returned implements","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107820,"byte_end":9107895,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ `Future` itself to acquire the `ExitStatus` of the child, and otherwise","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107900,"byte_end":9107975,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ the `Child` has methods to acquire handles to the stdin, stdout, and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9107980,"byte_end":9108052,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ stderr streams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108057,"byte_end":9108076,"line_start":532,"line_end":532,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108081,"byte_end":9108084,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108089,"byte_end":9108160,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108165,"byte_end":9108180,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108185,"byte_end":9108188,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108193,"byte_end":9108206,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108211,"byte_end":9108214,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108219,"byte_end":9108294,"line_start":539,"line_end":539,"column_start":5,"column_end":80}},{"value":"/ paradigm of dropping-implies-cancellation, the spawned process will, by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108299,"byte_end":9108374,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108379,"byte_end":9108459,"line_start":541,"line_end":541,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108464,"byte_end":9108467,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108472,"byte_end":9108546,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108551,"byte_end":9108625,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ has exited.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108630,"byte_end":9108645,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108650,"byte_end":9108653,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108658,"byte_end":9108672,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108677,"byte_end":9108680,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108685,"byte_end":9108701,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108706,"byte_end":9108709,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108714,"byte_end":9108727,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108732,"byte_end":9108764,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108769,"byte_end":9108772,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108777,"byte_end":9108828,"line_start":554,"line_end":554,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108833,"byte_end":9108859,"line_start":555,"line_end":555,"column_start":5,"column_end":31}},{"value":"/         .spawn()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108864,"byte_end":9108884,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"/         .expect(\"ls command failed to start\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108889,"byte_end":9108938,"line_start":557,"line_end":557,"column_start":5,"column_end":54}},{"value":"/         .await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108943,"byte_end":9108961,"line_start":558,"line_end":558,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9108966,"byte_end":9109013,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109018,"byte_end":9109023,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109028,"byte_end":9109035,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110610,"byte_end":9110616,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"status","qualname":"<Command>::status","value":"pub fn status(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting its exit status.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109549,"byte_end":9109622,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ collecting its exit status.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109627,"byte_end":9109658,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109663,"byte_end":9109666,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109671,"byte_end":9109742,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ If any input/output handles are set to a pipe then they will be immediately","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109747,"byte_end":9109826,"line_start":578,"line_end":578,"column_start":5,"column_end":84}},{"value":"/ closed after the child is spawned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109831,"byte_end":9109869,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109874,"byte_end":9109877,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109882,"byte_end":9109953,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109958,"byte_end":9109973,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109978,"byte_end":9109981,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9109986,"byte_end":9110048,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110053,"byte_end":9110101,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110106,"byte_end":9110109,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110114,"byte_end":9110126,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110131,"byte_end":9110134,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This future will return an error if the child process cannot be spawned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110139,"byte_end":9110214,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ or if there is an error while awaiting its status.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110219,"byte_end":9110273,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110278,"byte_end":9110281,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110286,"byte_end":9110300,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110305,"byte_end":9110308,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110313,"byte_end":9110329,"line_start":594,"line_end":594,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110334,"byte_end":9110337,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110342,"byte_end":9110355,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110360,"byte_end":9110392,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110397,"byte_end":9110400,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() -> std::process::ExitStatus {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110405,"byte_end":9110456,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/     Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110461,"byte_end":9110487,"line_start":600,"line_end":600,"column_start":5,"column_end":31}},{"value":"/         .status()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110492,"byte_end":9110513,"line_start":601,"line_end":601,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110518,"byte_end":9110536,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110541,"byte_end":9110588,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9110593,"byte_end":9110598,"line_start":604,"line_end":604,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112505,"byte_end":9112511,"line_start":657,"line_end":657,"column_start":12,"column_end":18},"name":"output","qualname":"<Command>::output","value":"pub fn output(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Executes the command as a child process, waiting for it to finish and\n collecting all of its output.","sig":null,"attributes":[{"value":"/ Executes the command as a child process, waiting for it to finish and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111091,"byte_end":9111164,"line_start":622,"line_end":622,"column_start":5,"column_end":78}},{"value":"/ collecting all of its output.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111169,"byte_end":9111202,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111207,"byte_end":9111210,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ > **Note**: this method, unlike the standard library, will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111215,"byte_end":9111277,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/ > unconditionally configure the stdout/stderr handles to be pipes, even","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111282,"byte_end":9111357,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ > if they have been previously configured. If this is not desired then","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111362,"byte_end":9111436,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ > the `spawn` method should be used in combination with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111441,"byte_end":9111504,"line_start":628,"line_end":628,"column_start":5,"column_end":68}},{"value":"/ > `wait_with_output` method on child.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111509,"byte_end":9111550,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111555,"byte_end":9111558,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method will return a future representing the collection of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111563,"byte_end":9111634,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ child process's stdout/stderr. It will resolve to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111639,"byte_end":9111692,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ the `Output` type in the standard library, containing `stdout` and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111697,"byte_end":9111767,"line_start":633,"line_end":633,"column_start":5,"column_end":75}},{"value":"/ `stderr` as `Vec<u8>` along with an `ExitStatus` representing how the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111772,"byte_end":9111845,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ process exited.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111850,"byte_end":9111869,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111874,"byte_end":9111877,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ All I/O this child does will be associated with the current default","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111882,"byte_end":9111953,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/ event loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111958,"byte_end":9111973,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111978,"byte_end":9111981,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped before the future resolves, then","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9111986,"byte_end":9112048,"line_start":640,"line_end":640,"column_start":5,"column_end":67}},{"value":"/ the child will be killed, if it was spawned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112053,"byte_end":9112101,"line_start":641,"line_end":641,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112106,"byte_end":9112109,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112114,"byte_end":9112128,"line_start":643,"line_end":643,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112133,"byte_end":9112136,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112141,"byte_end":9112157,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112162,"byte_end":9112165,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112170,"byte_end":9112183,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ use tokio::process::Command;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112188,"byte_end":9112220,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112225,"byte_end":9112228,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ async fn run_ls() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112233,"byte_end":9112256,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/     let output: std::process::Output = Command::new(\"ls\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112261,"byte_end":9112322,"line_start":651,"line_end":651,"column_start":5,"column_end":66}},{"value":"/         .output()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112327,"byte_end":9112348,"line_start":652,"line_end":652,"column_start":5,"column_end":26}},{"value":"/         .await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112353,"byte_end":9112371,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/         .expect(\"ls command failed to run\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112376,"byte_end":9112424,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/     println!(\"stderr of ls: {:?}\", output.stderr);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112429,"byte_end":9112483,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112488,"byte_end":9112493,"line_start":656,"line_end":656,"column_start":5,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114860,"byte_end":9114865,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"Child","qualname":"::process::Child","value":"Child { stdin, stdout, stderr }","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430}],"decl_id":null,"docs":" Representation of a child process spawned onto an event loop.","sig":null,"attributes":[{"value":"/ Representation of a child process spawned onto an event loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114082,"byte_end":9114147,"line_start":728,"line_end":728,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114148,"byte_end":9114151,"line_start":729,"line_end":729,"column_start":1,"column_end":4}},{"value":"/ This type is also a future which will yield the `ExitStatus` of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114152,"byte_end":9114223,"line_start":730,"line_end":730,"column_start":1,"column_end":72}},{"value":"/ underlying child process. A `Child` here also provides access to information","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114224,"byte_end":9114304,"line_start":731,"line_end":731,"column_start":1,"column_end":81}},{"value":"/ like the OS-assigned identifier and the stdio streams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114305,"byte_end":9114363,"line_start":732,"line_end":732,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114364,"byte_end":9114367,"line_start":733,"line_end":733,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114368,"byte_end":9114381,"line_start":734,"line_end":734,"column_start":1,"column_end":14}},{"value":"/ Similar to the behavior to the standard library, and unlike the futures","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114382,"byte_end":9114457,"line_start":735,"line_end":735,"column_start":1,"column_end":76}},{"value":"/ paradigm of dropping-implies-cancellation, a spawned process will, by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114458,"byte_end":9114531,"line_start":736,"line_end":736,"column_start":1,"column_end":74}},{"value":"/ default, continue to execute even after the `Child` handle has been dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114532,"byte_end":9114612,"line_start":737,"line_end":737,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114613,"byte_end":9114616,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ The `Command::kill_on_drop` method can be used to modify this behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114617,"byte_end":9114691,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/ and kill the child process if the `Child` wrapper is dropped before it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114692,"byte_end":9114766,"line_start":740,"line_end":740,"column_start":1,"column_end":75}},{"value":"/ has exited.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114767,"byte_end":9114782,"line_start":741,"line_end":741,"column_start":1,"column_end":16}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114783,"byte_end":9114831,"line_start":742,"line_end":742,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4428},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115019,"byte_end":9115024,"line_start":749,"line_end":749,"column_start":9,"column_end":14},"name":"stdin","qualname":"::process::Child::stdin","value":"std::option::Option<process::ChildStdin>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for writing to the child's standard input (stdin), if it has\n been captured.\n","sig":null,"attributes":[{"value":"/ The handle for writing to the child's standard input (stdin), if it has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114912,"byte_end":9114987,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ been captured.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9114992,"byte_end":9115010,"line_start":748,"line_end":748,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4429},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115162,"byte_end":9115168,"line_start":753,"line_end":753,"column_start":9,"column_end":15},"name":"stdout","qualname":"::process::Child::stdout","value":"std::option::Option<process::ChildStdout>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard output (stdout), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard output (stdout), if it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115051,"byte_end":9115126,"line_start":751,"line_end":751,"column_start":5,"column_end":80}},{"value":"/ has been captured.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115131,"byte_end":9115153,"line_start":752,"line_end":752,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4430},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115306,"byte_end":9115312,"line_start":757,"line_end":757,"column_start":9,"column_end":15},"name":"stderr","qualname":"::process::Child::stderr","value":"std::option::Option<process::ChildStderr>","parent":{"krate":0,"index":4426},"children":[],"decl_id":null,"docs":" The handle for reading from the child's standard error (stderr), if it\n has been captured.\n","sig":null,"attributes":[{"value":"/ The handle for reading from the child's standard error (stderr), if it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115196,"byte_end":9115270,"line_start":755,"line_end":755,"column_start":5,"column_end":79}},{"value":"/ has been captured.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115275,"byte_end":9115297,"line_start":756,"line_end":756,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115441,"byte_end":9115443,"line_start":762,"line_end":762,"column_start":12,"column_end":14},"name":"id","qualname":"<Child>::id","value":"pub fn id(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the OS-assigned process identifier associated with this child.\n","sig":null,"attributes":[{"value":"/ Returns the OS-assigned process identifier associated with this child.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115355,"byte_end":9115429,"line_start":761,"line_end":761,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115617,"byte_end":9115621,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"kill","qualname":"<Child>::kill","value":"pub fn kill(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Forces the child to exit.","sig":null,"attributes":[{"value":"/ Forces the child to exit.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115501,"byte_end":9115530,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115535,"byte_end":9115538,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to sending a SIGKILL on unix platforms.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115543,"byte_end":9115605,"line_start":768,"line_end":768,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115777,"byte_end":9115782,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"stdin","qualname":"<Child>::stdin","value":"pub fn stdin(&mut Self) -> &mut Option<ChildStdin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdin` instead\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115709,"byte_end":9115765,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115946,"byte_end":9115952,"line_start":781,"line_end":781,"column_start":12,"column_end":18},"name":"stdout","qualname":"<Child>::stdout","value":"pub fn stdout(&mut Self) -> &mut Option<ChildStdout>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stdout` instead\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115877,"byte_end":9115934,"line_start":780,"line_end":780,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116118,"byte_end":9116124,"line_start":787,"line_end":787,"column_start":12,"column_end":18},"name":"stderr","qualname":"<Child>::stderr","value":"pub fn stderr(&mut Self) -> &mut Option<ChildStderr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"please use `child.stderr` instead\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116049,"byte_end":9116106,"line_start":786,"line_end":786,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9117132,"byte_end":9117148,"line_start":807,"line_end":807,"column_start":18,"column_end":34},"name":"wait_with_output","qualname":"<Child>::wait_with_output","value":"pub async fn wait_with_output(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will resolve to an `Output`, containing the exit\n status, stdout, and stderr of the child process.","sig":null,"attributes":[{"value":"/ Returns a future that will resolve to an `Output`, containing the exit","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116202,"byte_end":9116276,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ status, stdout, and stderr of the child process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116281,"byte_end":9116333,"line_start":792,"line_end":792,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116338,"byte_end":9116341,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ The returned future will simultaneously waits for the child to exit and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116346,"byte_end":9116421,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ collect all remaining output on the stdout/stderr handles, returning an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116426,"byte_end":9116501,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ `Output` instance.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116506,"byte_end":9116528,"line_start":796,"line_end":796,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116533,"byte_end":9116536,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ The stdin handle to the child process, if any, will be closed before","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116541,"byte_end":9116613,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/ waiting. This helps avoid deadlock: it ensures that the child does not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116618,"byte_end":9116692,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ block waiting for input from the parent, while the parent waits for the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116697,"byte_end":9116772,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ child to exit.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116777,"byte_end":9116795,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116800,"byte_end":9116803,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ By default, stdin, stdout and stderr are inherited from the parent. In","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116808,"byte_end":9116882,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ order to capture the output into this `Output` it is necessary to create","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116887,"byte_end":9116963,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ new pipes between parent and child. Use `stdout(Stdio::piped())` or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9116968,"byte_end":9117039,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ `stderr(Stdio::piped())`, respectively, when creating a `Command`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9117044,"byte_end":9117114,"line_start":806,"line_end":806,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4433},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118262,"byte_end":9118272,"line_start":845,"line_end":845,"column_start":12,"column_end":22},"name":"ChildStdin","qualname":"::process::ChildStdin","value":"ChildStdin {  }","parent":null,"children":[{"krate":0,"index":4434}],"decl_id":null,"docs":" The standard input stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard input stream for spawned children.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118048,"byte_end":9118099,"line_start":840,"line_end":840,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118100,"byte_end":9118103,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncWrite` trait to pass data to the stdin handle of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118104,"byte_end":9118187,"line_start":842,"line_end":842,"column_start":1,"column_end":84}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118188,"byte_end":9118233,"line_start":843,"line_end":843,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4437},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118513,"byte_end":9118524,"line_start":854,"line_end":854,"column_start":12,"column_end":23},"name":"ChildStdout","qualname":"::process::ChildStdout","value":"ChildStdout {  }","parent":null,"children":[{"krate":0,"index":4438}],"decl_id":null,"docs":" The standard output stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard output stream for spawned children.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118306,"byte_end":9118358,"line_start":849,"line_end":849,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118359,"byte_end":9118362,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stdout","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118363,"byte_end":9118438,"line_start":851,"line_end":851,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118439,"byte_end":9118484,"line_start":852,"line_end":852,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4441},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118765,"byte_end":9118776,"line_start":863,"line_end":863,"column_start":12,"column_end":23},"name":"ChildStderr","qualname":"::process::ChildStderr","value":"ChildStderr {  }","parent":null,"children":[{"krate":0,"index":4442}],"decl_id":null,"docs":" The standard error stream for spawned children.","sig":null,"attributes":[{"value":"/ The standard error stream for spawned children.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118559,"byte_end":9118610,"line_start":858,"line_end":858,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118611,"byte_end":9118614,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ This type implements the `AsyncRead` trait to read data from the stderr","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118615,"byte_end":9118690,"line_start":860,"line_end":860,"column_start":1,"column_end":76}},{"value":"/ handle of a child process asynchronously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118691,"byte_end":9118736,"line_start":861,"line_end":861,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":4455},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":5180},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":580},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":5285},{"krate":0,"index":5335},{"krate":0,"index":693},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":5366},{"krate":0,"index":5467},{"krate":0,"index":5665},{"krate":0,"index":5694},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":5695},{"krate":0,"index":5699},{"krate":0,"index":5701},{"krate":0,"index":5711},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105678,"byte_end":105700,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105701,"byte_end":105704,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105705,"byte_end":105770,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105771,"byte_end":105841,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105842,"byte_end":105856,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105857,"byte_end":105860,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105861,"byte_end":105939,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105940,"byte_end":105997,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":105998,"byte_end":106068,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106069,"byte_end":106141,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106142,"byte_end":106145,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106146,"byte_end":106226,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106227,"byte_end":106300,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106301,"byte_end":106375,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106376,"byte_end":106454,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106455,"byte_end":106468,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106469,"byte_end":106472,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106473,"byte_end":106484,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106485,"byte_end":106488,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106489,"byte_end":106556,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106557,"byte_end":106560,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106561,"byte_end":106574,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106575,"byte_end":106607,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106608,"byte_end":106634,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106635,"byte_end":106638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106639,"byte_end":106657,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106658,"byte_end":106721,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106722,"byte_end":106792,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106793,"byte_end":106796,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106797,"byte_end":106811,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106812,"byte_end":106871,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106872,"byte_end":106875,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106876,"byte_end":106913,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106914,"byte_end":106954,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106955,"byte_end":106958,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":106959,"byte_end":107039,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107040,"byte_end":107062,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107063,"byte_end":107126,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107127,"byte_end":107167,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107168,"byte_end":107218,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107219,"byte_end":107254,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107255,"byte_end":107290,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107291,"byte_end":107373,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107374,"byte_end":107409,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107410,"byte_end":107435,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107436,"byte_end":107458,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107459,"byte_end":107462,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107463,"byte_end":107505,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107506,"byte_end":107578,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107579,"byte_end":107656,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107657,"byte_end":107688,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107689,"byte_end":107710,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107711,"byte_end":107728,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107729,"byte_end":107744,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107745,"byte_end":107754,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107755,"byte_end":107760,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107761,"byte_end":107768,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107769,"byte_end":107772,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107773,"byte_end":107851,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107852,"byte_end":107930,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107931,"byte_end":107992,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107993,"byte_end":107996,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":107997,"byte_end":108050,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108051,"byte_end":108054,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108055,"byte_end":108068,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108069,"byte_end":108101,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108102,"byte_end":108128,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108129,"byte_end":108161,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108162,"byte_end":108165,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108166,"byte_end":108223,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108224,"byte_end":108253,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108254,"byte_end":108291,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108292,"byte_end":108295,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108296,"byte_end":108326,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108327,"byte_end":108354,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108355,"byte_end":108429,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108430,"byte_end":108433,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108434,"byte_end":108452,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108453,"byte_end":108516,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108517,"byte_end":108520,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108521,"byte_end":108562,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108563,"byte_end":108607,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108608,"byte_end":108611,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108612,"byte_end":108696,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108697,"byte_end":108723,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108724,"byte_end":108791,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108792,"byte_end":108836,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108837,"byte_end":108891,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108892,"byte_end":108931,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108932,"byte_end":108971,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":108972,"byte_end":109058,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109059,"byte_end":109098,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109099,"byte_end":109128,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109129,"byte_end":109155,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109156,"byte_end":109159,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109160,"byte_end":109206,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109207,"byte_end":109283,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109284,"byte_end":109365,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109366,"byte_end":109401,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109402,"byte_end":109427,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109428,"byte_end":109449,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109450,"byte_end":109469,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109470,"byte_end":109483,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109484,"byte_end":109494,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109495,"byte_end":109500,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109501,"byte_end":109508,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109509,"byte_end":109512,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109513,"byte_end":109542,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109547,"byte_end":109625,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109626,"byte_end":109702,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109703,"byte_end":109745,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109746,"byte_end":109749,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109750,"byte_end":109774,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109775,"byte_end":109778,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109779,"byte_end":109858,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109859,"byte_end":109934,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":109935,"byte_end":110005,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110006,"byte_end":110046,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110047,"byte_end":110054,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110055,"byte_end":110078,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110079,"byte_end":110082,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110083,"byte_end":110142,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110143,"byte_end":110185,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110186,"byte_end":110212,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110213,"byte_end":110231,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110232,"byte_end":110246,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110247,"byte_end":110254,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110255,"byte_end":110258,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110259,"byte_end":110324,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110325,"byte_end":110395,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110396,"byte_end":110399,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110400,"byte_end":110427,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110428,"byte_end":110431,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110432,"byte_end":110503,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110504,"byte_end":110582,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110583,"byte_end":110662,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110663,"byte_end":110747,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110748,"byte_end":110828,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110829,"byte_end":110836,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110837,"byte_end":110860,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110861,"byte_end":110864,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110865,"byte_end":110924,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110925,"byte_end":110970,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":110971,"byte_end":111000,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111001,"byte_end":111019,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111020,"byte_end":111034,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111035,"byte_end":111042,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111043,"byte_end":111046,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111047,"byte_end":111127,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111128,"byte_end":111170,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111171,"byte_end":111174,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111175,"byte_end":111252,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111253,"byte_end":111322,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111323,"byte_end":111326,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111327,"byte_end":111352,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111353,"byte_end":111356,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111357,"byte_end":111431,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111432,"byte_end":111512,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111513,"byte_end":111592,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111593,"byte_end":111672,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111673,"byte_end":111742,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111743,"byte_end":111746,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111747,"byte_end":111781,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111782,"byte_end":111785,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111786,"byte_end":111865,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111866,"byte_end":111934,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111935,"byte_end":111997,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":111998,"byte_end":112001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112002,"byte_end":112080,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112081,"byte_end":112160,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112161,"byte_end":112219,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112220,"byte_end":112223,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112224,"byte_end":112248,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112249,"byte_end":112273,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112274,"byte_end":112308,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112309,"byte_end":112347,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112348,"byte_end":112394,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112395,"byte_end":112445,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112446,"byte_end":112520,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112521,"byte_end":112601,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112602,"byte_end":112664,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112665,"byte_end":112731,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":112732,"byte_end":112796,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178132,"byte_end":9178141,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4997}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4639},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178317,"byte_end":9178326,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178292,"byte_end":9178305,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178544,"byte_end":9178549,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178519,"byte_end":9178532,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178879,"byte_end":9178891,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178799,"byte_end":9178867,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179397,"byte_end":9179405,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179018,"byte_end":9179080,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179085,"byte_end":9179088,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179093,"byte_end":9179107,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179112,"byte_end":9179115,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179120,"byte_end":9179127,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179132,"byte_end":9179151,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179156,"byte_end":9179159,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179164,"byte_end":9179182,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179187,"byte_end":9179208,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179213,"byte_end":9179251,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179256,"byte_end":9179283,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179288,"byte_end":9179318,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179323,"byte_end":9179326,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179331,"byte_end":9179363,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179368,"byte_end":9179373,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179378,"byte_end":9179385,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180312,"byte_end":9180322,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179531,"byte_end":9179610,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179615,"byte_end":9179618,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179623,"byte_end":9179635,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179640,"byte_end":9179643,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179648,"byte_end":9179722,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179727,"byte_end":9179802,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179807,"byte_end":9179865,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179870,"byte_end":9179873,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179878,"byte_end":9179892,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179897,"byte_end":9179900,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179905,"byte_end":9179924,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179929,"byte_end":9179948,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179953,"byte_end":9179956,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179961,"byte_end":9179979,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9179984,"byte_end":9180005,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180010,"byte_end":9180048,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180053,"byte_end":9180080,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180085,"byte_end":9180115,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180120,"byte_end":9180123,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180128,"byte_end":9180155,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180160,"byte_end":9180208,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180213,"byte_end":9180264,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180269,"byte_end":9180278,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180283,"byte_end":9180288,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180293,"byte_end":9180300,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181087,"byte_end":9181101,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180463,"byte_end":9180532,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180537,"byte_end":9180609,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180614,"byte_end":9180627,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180632,"byte_end":9180635,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180640,"byte_end":9180654,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180659,"byte_end":9180662,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180667,"byte_end":9180686,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180691,"byte_end":9180710,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180715,"byte_end":9180718,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180723,"byte_end":9180741,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180746,"byte_end":9180767,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180772,"byte_end":9180810,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180815,"byte_end":9180842,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180847,"byte_end":9180877,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180882,"byte_end":9180885,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180890,"byte_end":9180940,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180945,"byte_end":9180993,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9180998,"byte_end":9181039,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181044,"byte_end":9181053,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181058,"byte_end":9181063,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181068,"byte_end":9181075,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4998},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197467,"byte_end":9197477,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":592},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128991,"byte_end":128998,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128163,"byte_end":128221,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128222,"byte_end":128225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128226,"byte_end":128298,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128299,"byte_end":128347,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128348,"byte_end":128351,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128352,"byte_end":128417,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128418,"byte_end":128421,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128422,"byte_end":128499,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128500,"byte_end":128513,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128514,"byte_end":128517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128518,"byte_end":128551,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128552,"byte_end":128590,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128591,"byte_end":128594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128595,"byte_end":128609,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128610,"byte_end":128613,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128614,"byte_end":128621,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128622,"byte_end":128654,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128655,"byte_end":128658,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128659,"byte_end":128674,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128675,"byte_end":128699,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128700,"byte_end":128736,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128737,"byte_end":128770,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128771,"byte_end":128799,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128800,"byte_end":128842,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128843,"byte_end":128890,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128891,"byte_end":128911,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128912,"byte_end":128934,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128935,"byte_end":128938,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128939,"byte_end":128965,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128966,"byte_end":128971,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":128972,"byte_end":128979,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130153,"byte_end":130156,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129979,"byte_end":130051,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130056,"byte_end":130067,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130072,"byte_end":130075,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130080,"byte_end":130141,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131360,"byte_end":131370,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130846,"byte_end":130884,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130889,"byte_end":130892,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130897,"byte_end":130968,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":130973,"byte_end":131049,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131054,"byte_end":131108,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131113,"byte_end":131116,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131121,"byte_end":131135,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131140,"byte_end":131143,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131148,"byte_end":131155,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131160,"byte_end":131183,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131188,"byte_end":131191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131196,"byte_end":131232,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131237,"byte_end":131266,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131271,"byte_end":131292,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131297,"byte_end":131313,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131318,"byte_end":131336,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131341,"byte_end":131348,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131925,"byte_end":131936,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131547,"byte_end":131620,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131625,"byte_end":131703,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131708,"byte_end":131711,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131716,"byte_end":131791,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131796,"byte_end":131831,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131836,"byte_end":131839,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":131844,"byte_end":131913,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132645,"byte_end":132657,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132038,"byte_end":132113,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132118,"byte_end":132121,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132126,"byte_end":132203,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132208,"byte_end":132243,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132248,"byte_end":132251,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132256,"byte_end":132325,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132330,"byte_end":132333,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132338,"byte_end":132390,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132395,"byte_end":132398,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132403,"byte_end":132417,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132422,"byte_end":132425,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132430,"byte_end":132437,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132442,"byte_end":132465,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132470,"byte_end":132473,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132478,"byte_end":132514,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132519,"byte_end":132548,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132553,"byte_end":132577,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132582,"byte_end":132598,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132603,"byte_end":132621,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132626,"byte_end":132633,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133536,"byte_end":133547,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132818,"byte_end":132874,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132879,"byte_end":132882,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132887,"byte_end":132964,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":132969,"byte_end":133051,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133056,"byte_end":133126,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133131,"byte_end":133134,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133139,"byte_end":133219,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133224,"byte_end":133227,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133232,"byte_end":133261,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133266,"byte_end":133269,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133274,"byte_end":133359,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133364,"byte_end":133367,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133372,"byte_end":133461,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133466,"byte_end":133524,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134071,"byte_end":134082,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133701,"byte_end":133765,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133770,"byte_end":133773,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133778,"byte_end":133825,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133830,"byte_end":133833,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133838,"byte_end":133852,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133857,"byte_end":133860,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133865,"byte_end":133872,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133877,"byte_end":133902,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133907,"byte_end":133910,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133915,"byte_end":133936,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133941,"byte_end":133977,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":133982,"byte_end":134013,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134018,"byte_end":134035,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134040,"byte_end":134047,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134052,"byte_end":134059,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134806,"byte_end":134823,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134196,"byte_end":134250,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134255,"byte_end":134258,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134263,"byte_end":134335,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134340,"byte_end":134373,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134378,"byte_end":134381,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134386,"byte_end":134454,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134459,"byte_end":134520,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134525,"byte_end":134528,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134533,"byte_end":134547,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134552,"byte_end":134555,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134560,"byte_end":134567,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134572,"byte_end":134597,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134602,"byte_end":134605,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134610,"byte_end":134631,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134636,"byte_end":134672,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134677,"byte_end":134706,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134711,"byte_end":134748,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134753,"byte_end":134770,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134775,"byte_end":134782,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134787,"byte_end":134794,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135464,"byte_end":135479,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":134930,"byte_end":135005,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135010,"byte_end":135025,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135030,"byte_end":135033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135038,"byte_end":135100,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135105,"byte_end":135108,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135113,"byte_end":135127,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135132,"byte_end":135135,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135140,"byte_end":135147,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135152,"byte_end":135177,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135190,"byte_end":135211,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135216,"byte_end":135257,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135262,"byte_end":135291,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135296,"byte_end":135325,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135330,"byte_end":135369,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135374,"byte_end":135384,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135389,"byte_end":135406,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135411,"byte_end":135418,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135423,"byte_end":135430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135435,"byte_end":135452,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136130,"byte_end":136144,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135640,"byte_end":135691,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135696,"byte_end":135699,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135704,"byte_end":135766,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135771,"byte_end":135774,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135779,"byte_end":135793,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135798,"byte_end":135801,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135806,"byte_end":135813,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135818,"byte_end":135843,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135848,"byte_end":135851,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135856,"byte_end":135877,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135882,"byte_end":135923,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135928,"byte_end":135957,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135962,"byte_end":135990,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":135995,"byte_end":136035,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136040,"byte_end":136050,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136055,"byte_end":136072,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136077,"byte_end":136084,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136089,"byte_end":136096,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136101,"byte_end":136118,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136690,"byte_end":136695,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136305,"byte_end":136342,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136347,"byte_end":136350,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136355,"byte_end":136418,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136423,"byte_end":136426,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136431,"byte_end":136445,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136450,"byte_end":136453,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136458,"byte_end":136465,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136470,"byte_end":136502,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136507,"byte_end":136510,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136515,"byte_end":136564,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136569,"byte_end":136572,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136577,"byte_end":136600,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136605,"byte_end":136654,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136659,"byte_end":136666,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":136671,"byte_end":136678,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138320,"byte_end":138329,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138840,"byte_end":138851,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":139464,"byte_end":139479,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":141215,"byte_end":141233,"line_start":458,"line_end":458,"column_start":16,"column_end":34},"name":"threaded_scheduler","qualname":"<Builder>::threaded_scheduler","value":"pub fn threaded_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a multi-threaded scheduler for executing tasks.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150461,"byte_end":150467,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150192,"byte_end":150218,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150219,"byte_end":150222,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150223,"byte_end":150311,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150312,"byte_end":150362,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150363,"byte_end":150366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150367,"byte_end":150425,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152004,"byte_end":152009,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150831,"byte_end":150906,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150911,"byte_end":150989,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150994,"byte_end":151062,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151067,"byte_end":151070,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151075,"byte_end":151133,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151138,"byte_end":151141,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151146,"byte_end":151186,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151191,"byte_end":151238,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151243,"byte_end":151300,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151305,"byte_end":151342,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151347,"byte_end":151350,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151355,"byte_end":151368,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151373,"byte_end":151376,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151381,"byte_end":151388,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151393,"byte_end":151425,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151430,"byte_end":151433,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151438,"byte_end":151480,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151485,"byte_end":151551,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151556,"byte_end":151589,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151594,"byte_end":151626,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151631,"byte_end":151642,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151647,"byte_end":151652,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151657,"byte_end":151660,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151665,"byte_end":151680,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151685,"byte_end":151726,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151731,"byte_end":151772,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151777,"byte_end":151780,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151785,"byte_end":151828,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151833,"byte_end":151836,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151841,"byte_end":151916,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151921,"byte_end":151970,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151975,"byte_end":151980,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":151985,"byte_end":151992,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153479,"byte_end":153486,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152127,"byte_end":152191,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152196,"byte_end":152199,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152204,"byte_end":152215,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152220,"byte_end":152223,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152228,"byte_end":152322,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152327,"byte_end":152419,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152424,"byte_end":152500,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152505,"byte_end":152508,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152513,"byte_end":152527,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152532,"byte_end":152535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152540,"byte_end":152622,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152627,"byte_end":152673,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152678,"byte_end":152681,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152686,"byte_end":152693,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152698,"byte_end":152720,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152725,"byte_end":152759,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152764,"byte_end":152780,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152785,"byte_end":152824,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152829,"byte_end":152851,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152856,"byte_end":152887,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152892,"byte_end":152895,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152900,"byte_end":152941,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152946,"byte_end":152981,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":152986,"byte_end":153010,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153015,"byte_end":153071,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153076,"byte_end":153083,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153088,"byte_end":153091,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153096,"byte_end":153114,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153119,"byte_end":153146,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153151,"byte_end":153236,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153241,"byte_end":153285,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153290,"byte_end":153335,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153340,"byte_end":153383,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153388,"byte_end":153395,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153400,"byte_end":153429,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153434,"byte_end":153443,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153448,"byte_end":153455,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153460,"byte_end":153467,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153784,"byte_end":153795,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153591,"byte_end":153651,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153656,"byte_end":153659,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153664,"byte_end":153715,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153720,"byte_end":153723,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153728,"byte_end":153772,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":155320,"byte_end":155325,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159444,"byte_end":159452,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5282},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":162841,"byte_end":162855,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163244,"byte_end":163259,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163164,"byte_end":163232,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5695},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114701,"byte_end":114708,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5698}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113684,"byte_end":113706,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113707,"byte_end":113710,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113711,"byte_end":113788,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113789,"byte_end":113840,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113841,"byte_end":113844,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113845,"byte_end":113925,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":113926,"byte_end":114011,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114012,"byte_end":114015,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114016,"byte_end":114075,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114076,"byte_end":114079,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114080,"byte_end":114094,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114095,"byte_end":114098,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114099,"byte_end":114178,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114179,"byte_end":114238,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114239,"byte_end":114242,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114243,"byte_end":114281,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114282,"byte_end":114333,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114334,"byte_end":114357,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114358,"byte_end":114361,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114362,"byte_end":114434,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114435,"byte_end":114508,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114509,"byte_end":114532,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114533,"byte_end":114536,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114537,"byte_end":114561,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114562,"byte_end":114583,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114584,"byte_end":114613,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114614,"byte_end":114645,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":114646,"byte_end":114672,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116929,"byte_end":116932,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115522,"byte_end":115590,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115595,"byte_end":115598,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115603,"byte_end":115669,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115674,"byte_end":115747,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115752,"byte_end":115823,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115828,"byte_end":115903,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115908,"byte_end":115946,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115951,"byte_end":115954,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115959,"byte_end":116019,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116024,"byte_end":116098,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116103,"byte_end":116106,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116111,"byte_end":116187,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116192,"byte_end":116268,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116273,"byte_end":116339,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116344,"byte_end":116347,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116352,"byte_end":116411,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116416,"byte_end":116419,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116424,"byte_end":116438,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116443,"byte_end":116446,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116451,"byte_end":116514,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116519,"byte_end":116522,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116527,"byte_end":116534,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116539,"byte_end":116571,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116576,"byte_end":116579,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116584,"byte_end":116611,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116616,"byte_end":116634,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116639,"byte_end":116642,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116647,"byte_end":116672,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116677,"byte_end":116684,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116689,"byte_end":116692,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116697,"byte_end":116718,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116723,"byte_end":116752,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116757,"byte_end":116812,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116817,"byte_end":116866,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":116871,"byte_end":116917,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118522,"byte_end":118527,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117342,"byte_end":117384,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117389,"byte_end":117392,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117397,"byte_end":117468,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117473,"byte_end":117548,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117553,"byte_end":117576,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117581,"byte_end":117584,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117589,"byte_end":117648,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117653,"byte_end":117656,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117661,"byte_end":117682,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117687,"byte_end":117690,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117695,"byte_end":117709,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117714,"byte_end":117717,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117722,"byte_end":117729,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117734,"byte_end":117766,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117771,"byte_end":117774,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117779,"byte_end":117795,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117800,"byte_end":117825,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117830,"byte_end":117867,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117872,"byte_end":117875,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117880,"byte_end":117918,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117923,"byte_end":117943,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":117948,"byte_end":117999,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118004,"byte_end":118011,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118016,"byte_end":118023,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118028,"byte_end":118035,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118040,"byte_end":118043,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118048,"byte_end":118060,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118065,"byte_end":118068,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118073,"byte_end":118146,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118151,"byte_end":118216,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118221,"byte_end":118282,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118287,"byte_end":118314,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118319,"byte_end":118322,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118327,"byte_end":118358,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118363,"byte_end":118421,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118426,"byte_end":118478,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118483,"byte_end":118510,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120148,"byte_end":120156,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":118929,"byte_end":119003,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119008,"byte_end":119024,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119029,"byte_end":119032,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119037,"byte_end":119104,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119109,"byte_end":119182,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119187,"byte_end":119252,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119257,"byte_end":119260,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119265,"byte_end":119341,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119346,"byte_end":119412,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119417,"byte_end":119489,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119494,"byte_end":119517,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119522,"byte_end":119525,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119530,"byte_end":119593,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119598,"byte_end":119601,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119606,"byte_end":119618,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119623,"byte_end":119626,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119631,"byte_end":119709,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119714,"byte_end":119749,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119754,"byte_end":119757,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119762,"byte_end":119776,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119781,"byte_end":119784,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119789,"byte_end":119802,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119807,"byte_end":119839,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119844,"byte_end":119847,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119852,"byte_end":119877,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119882,"byte_end":119923,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119928,"byte_end":119931,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":119936,"byte_end":120007,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120012,"byte_end":120035,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120040,"byte_end":120066,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120071,"byte_end":120078,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120083,"byte_end":120090,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120095,"byte_end":120098,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120103,"byte_end":120136,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121678,"byte_end":121683,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120562,"byte_end":120637,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120642,"byte_end":120720,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120725,"byte_end":120793,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120798,"byte_end":120801,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120806,"byte_end":120863,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120868,"byte_end":120871,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120876,"byte_end":120916,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120921,"byte_end":120968,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":120973,"byte_end":121028,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121033,"byte_end":121070,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121075,"byte_end":121078,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121083,"byte_end":121096,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121101,"byte_end":121104,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121109,"byte_end":121116,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121121,"byte_end":121153,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121158,"byte_end":121161,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121166,"byte_end":121208,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121213,"byte_end":121275,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121280,"byte_end":121313,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121318,"byte_end":121350,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121355,"byte_end":121366,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121371,"byte_end":121376,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121381,"byte_end":121384,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121389,"byte_end":121404,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121409,"byte_end":121450,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121455,"byte_end":121458,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121463,"byte_end":121506,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121511,"byte_end":121514,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121519,"byte_end":121594,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121599,"byte_end":121644,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121649,"byte_end":121654,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121659,"byte_end":121666,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122270,"byte_end":122276,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121790,"byte_end":121835,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121840,"byte_end":121843,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121848,"byte_end":121932,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":121937,"byte_end":121997,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122002,"byte_end":122005,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122010,"byte_end":122024,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122029,"byte_end":122032,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122037,"byte_end":122044,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122049,"byte_end":122081,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122086,"byte_end":122089,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122094,"byte_end":122121,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122126,"byte_end":122144,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122149,"byte_end":122152,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122157,"byte_end":122186,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122191,"byte_end":122194,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122199,"byte_end":122246,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122251,"byte_end":122258,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123684,"byte_end":123700,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122329,"byte_end":122401,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122406,"byte_end":122427,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122432,"byte_end":122435,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122440,"byte_end":122515,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122520,"byte_end":122593,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122598,"byte_end":122675,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122680,"byte_end":122751,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122756,"byte_end":122759,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122764,"byte_end":122838,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122843,"byte_end":122917,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":122922,"byte_end":122997,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123002,"byte_end":123078,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123083,"byte_end":123128,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123133,"byte_end":123136,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123141,"byte_end":123155,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123160,"byte_end":123163,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123168,"byte_end":123175,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123180,"byte_end":123212,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123217,"byte_end":123237,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123242,"byte_end":123245,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123250,"byte_end":123270,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123275,"byte_end":123303,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123308,"byte_end":123311,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123316,"byte_end":123331,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123336,"byte_end":123385,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123390,"byte_end":123393,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123398,"byte_end":123434,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123439,"byte_end":123480,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123485,"byte_end":123543,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123548,"byte_end":123562,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123567,"byte_end":123577,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123582,"byte_end":123585,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123590,"byte_end":123650,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123655,"byte_end":123660,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123665,"byte_end":123672,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124980,"byte_end":124999,"line_start":578,"line_end":578,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123862,"byte_end":123938,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123943,"byte_end":123946,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":123951,"byte_end":124032,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124037,"byte_end":124120,"line_start":555,"line_end":555,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124125,"byte_end":124211,"line_start":556,"line_end":556,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124216,"byte_end":124301,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124306,"byte_end":124309,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124314,"byte_end":124400,"line_start":559,"line_end":559,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124405,"byte_end":124495,"line_start":560,"line_end":560,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124500,"byte_end":124511,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124516,"byte_end":124519,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124524,"byte_end":124609,"line_start":563,"line_end":563,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124614,"byte_end":124617,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124622,"byte_end":124629,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124634,"byte_end":124666,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124671,"byte_end":124674,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124679,"byte_end":124694,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124699,"byte_end":124748,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124753,"byte_end":124756,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124761,"byte_end":124797,"line_start":571,"line_end":571,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124802,"byte_end":124857,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124862,"byte_end":124879,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124884,"byte_end":124931,"line_start":574,"line_end":574,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124936,"byte_end":124946,"line_start":575,"line_end":575,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124951,"byte_end":124956,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":124961,"byte_end":124968,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5750},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":5751},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5807},{"krate":0,"index":5811}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20815,"byte_end":20841,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":20916,"byte_end":20933,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298004,"byte_end":9298046,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298047,"byte_end":9298050,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298051,"byte_end":9298128,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298129,"byte_end":9298207,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298208,"byte_end":9298288,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298289,"byte_end":9298317,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298318,"byte_end":9298321,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298322,"byte_end":9298397,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298398,"byte_end":9298431,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298432,"byte_end":9298435,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298436,"byte_end":9298450,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298451,"byte_end":9298454,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298455,"byte_end":9298490,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298491,"byte_end":9298494,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298495,"byte_end":9298513,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298514,"byte_end":9298536,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298537,"byte_end":9298540,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298541,"byte_end":9298559,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298560,"byte_end":9298623,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298624,"byte_end":9298656,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298657,"byte_end":9298694,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298695,"byte_end":9298709,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298710,"byte_end":9298715,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298716,"byte_end":9298723,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298724,"byte_end":9298727,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298728,"byte_end":9298755,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298756,"byte_end":9298759,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298760,"byte_end":9298778,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298779,"byte_end":9298799,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298800,"byte_end":9298850,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298851,"byte_end":9298854,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298855,"byte_end":9298873,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298874,"byte_end":9298937,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298938,"byte_end":9298986,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9298987,"byte_end":9299042,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299043,"byte_end":9299046,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299047,"byte_end":9299097,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299098,"byte_end":9299112,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299113,"byte_end":9299145,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299146,"byte_end":9299185,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299186,"byte_end":9299195,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299196,"byte_end":9299201,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299202,"byte_end":9299209,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299210,"byte_end":9299217,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5755},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301293,"byte_end":9301299,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299591,"byte_end":9299657,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299658,"byte_end":9299661,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299662,"byte_end":9299739,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299740,"byte_end":9299818,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299819,"byte_end":9299868,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299869,"byte_end":9299872,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299873,"byte_end":9299949,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9299950,"byte_end":9300028,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300029,"byte_end":9300067,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300068,"byte_end":9300071,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300072,"byte_end":9300085,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300086,"byte_end":9300089,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300090,"byte_end":9300172,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300173,"byte_end":9300253,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300254,"byte_end":9300335,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300336,"byte_end":9300361,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300362,"byte_end":9300365,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300366,"byte_end":9300439,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300440,"byte_end":9300512,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300513,"byte_end":9300591,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300592,"byte_end":9300669,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300670,"byte_end":9300746,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300747,"byte_end":9300826,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300827,"byte_end":9300851,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300852,"byte_end":9300855,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300856,"byte_end":9300934,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300935,"byte_end":9300995,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9300996,"byte_end":9300999,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301000,"byte_end":9301014,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301015,"byte_end":9301018,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301019,"byte_end":9301037,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301038,"byte_end":9301060,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301061,"byte_end":9301064,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301065,"byte_end":9301083,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301084,"byte_end":9301105,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301106,"byte_end":9301145,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301146,"byte_end":9301149,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301150,"byte_end":9301218,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301219,"byte_end":9301222,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301223,"byte_end":9301265,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301266,"byte_end":9301271,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/ctrl_c.rs","byte_start":9301272,"byte_end":9301279,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5811},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5815},{"krate":0,"index":5816},{"krate":0,"index":5817},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5820},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5823},{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5906},{"krate":0,"index":5909},{"krate":0,"index":5852},{"krate":0,"index":5911},{"krate":0,"index":5917},{"krate":0,"index":5915},{"krate":0,"index":5914},{"krate":0,"index":5854},{"krate":0,"index":5867},{"krate":0,"index":5871},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5878},{"krate":0,"index":5880},{"krate":0,"index":5923},{"krate":0,"index":5926},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5928},{"krate":0,"index":5892}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9310737,"byte_end":9310781,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9310782,"byte_end":9310785,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9310786,"byte_end":9310860,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9310861,"byte_end":9310918,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9310920,"byte_end":9310933,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5911},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312248,"byte_end":9312258,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312149,"byte_end":9312206,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5855},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312657,"byte_end":9312665,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312290,"byte_end":9312338,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312343,"byte_end":9312346,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312351,"byte_end":9312420,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312425,"byte_end":9312437,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312442,"byte_end":9312460,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312465,"byte_end":9312507,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312512,"byte_end":9312534,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312539,"byte_end":9312584,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312589,"byte_end":9312633,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312638,"byte_end":9312645,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5856},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312919,"byte_end":9312924,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312723,"byte_end":9312757,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312762,"byte_end":9312765,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312770,"byte_end":9312845,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312850,"byte_end":9312907,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5857},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313166,"byte_end":9313171,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312976,"byte_end":9313010,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313015,"byte_end":9313018,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313023,"byte_end":9313097,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313102,"byte_end":9313154,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5858},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313417,"byte_end":9313423,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313223,"byte_end":9313256,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313261,"byte_end":9313264,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313269,"byte_end":9313343,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313348,"byte_end":9313405,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5859},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314076,"byte_end":9314085,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313893,"byte_end":9313926,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313931,"byte_end":9313934,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9313939,"byte_end":9314002,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314007,"byte_end":9314064,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5860},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314334,"byte_end":9314336,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314136,"byte_end":9314168,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314173,"byte_end":9314176,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314181,"byte_end":9314253,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314258,"byte_end":9314322,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5861},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314620,"byte_end":9314624,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314386,"byte_end":9314420,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314425,"byte_end":9314428,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314433,"byte_end":9314507,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314512,"byte_end":9314587,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314592,"byte_end":9314608,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5862},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314927,"byte_end":9314931,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314676,"byte_end":9314710,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314715,"byte_end":9314718,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314723,"byte_end":9314789,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314794,"byte_end":9314853,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314858,"byte_end":9314915,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5863},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315179,"byte_end":9315188,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9314983,"byte_end":9315017,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315022,"byte_end":9315025,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315030,"byte_end":9315096,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315101,"byte_end":9315167,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315411,"byte_end":9315424,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315240,"byte_end":9315274,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315279,"byte_end":9315282,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315287,"byte_end":9315337,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315342,"byte_end":9315399,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5865},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315647,"byte_end":9315660,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315476,"byte_end":9315510,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315515,"byte_end":9315518,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315523,"byte_end":9315573,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315578,"byte_end":9315635,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5866},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315892,"byte_end":9315905,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315712,"byte_end":9315747,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315752,"byte_end":9315755,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315760,"byte_end":9315836,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9315841,"byte_end":9315880,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5923},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323328,"byte_end":9323334,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320563,"byte_end":9320631,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320632,"byte_end":9320635,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320636,"byte_end":9320709,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320710,"byte_end":9320788,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320789,"byte_end":9320826,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320827,"byte_end":9320830,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320831,"byte_end":9320901,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320902,"byte_end":9320977,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9320978,"byte_end":9321055,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321056,"byte_end":9321135,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321136,"byte_end":9321209,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321210,"byte_end":9321286,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321287,"byte_end":9321364,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321365,"byte_end":9321393,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321394,"byte_end":9321397,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321398,"byte_end":9321478,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321479,"byte_end":9321526,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321527,"byte_end":9321530,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321531,"byte_end":9321604,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321605,"byte_end":9321683,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321684,"byte_end":9321730,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321731,"byte_end":9321734,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321735,"byte_end":9321811,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321812,"byte_end":9321886,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321887,"byte_end":9321903,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321904,"byte_end":9321907,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321908,"byte_end":9321921,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321922,"byte_end":9321925,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9321926,"byte_end":9322000,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322001,"byte_end":9322078,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322079,"byte_end":9322156,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322157,"byte_end":9322178,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322179,"byte_end":9322182,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322183,"byte_end":9322256,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322257,"byte_end":9322332,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322333,"byte_end":9322409,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322410,"byte_end":9322486,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322487,"byte_end":9322564,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322565,"byte_end":9322630,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322631,"byte_end":9322634,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322635,"byte_end":9322713,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322714,"byte_end":9322774,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322775,"byte_end":9322778,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322779,"byte_end":9322793,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322794,"byte_end":9322797,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322798,"byte_end":9322817,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322818,"byte_end":9322821,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322822,"byte_end":9322840,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322841,"byte_end":9322891,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322892,"byte_end":9322895,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322896,"byte_end":9322914,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322915,"byte_end":9322978,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9322979,"byte_end":9323027,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323028,"byte_end":9323083,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323084,"byte_end":9323087,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323088,"byte_end":9323138,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323139,"byte_end":9323153,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323154,"byte_end":9323186,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323187,"byte_end":9323226,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323227,"byte_end":9323236,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323237,"byte_end":9323242,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323243,"byte_end":9323250,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323251,"byte_end":9323299,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5884},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324427,"byte_end":9324433,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323382,"byte_end":9323456,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323457,"byte_end":9323506,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323507,"byte_end":9323510,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323511,"byte_end":9323589,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323590,"byte_end":9323654,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323655,"byte_end":9323729,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323730,"byte_end":9323777,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323778,"byte_end":9323781,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323782,"byte_end":9323849,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323850,"byte_end":9323923,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323924,"byte_end":9323972,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323973,"byte_end":9323976,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9323977,"byte_end":9324044,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324045,"byte_end":9324114,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324115,"byte_end":9324165,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324166,"byte_end":9324169,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324170,"byte_end":9324182,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324183,"byte_end":9324186,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324187,"byte_end":9324245,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324246,"byte_end":9324314,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324315,"byte_end":9324344,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324345,"byte_end":9324419,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5886},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325644,"byte_end":9325648,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324937,"byte_end":9324985,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324990,"byte_end":9324993,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324998,"byte_end":9325070,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325075,"byte_end":9325078,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325083,"byte_end":9325097,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325102,"byte_end":9325105,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325110,"byte_end":9325129,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325134,"byte_end":9325137,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325142,"byte_end":9325160,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325165,"byte_end":9325215,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325220,"byte_end":9325223,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325228,"byte_end":9325246,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325251,"byte_end":9325314,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325319,"byte_end":9325367,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325372,"byte_end":9325427,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325432,"byte_end":9325435,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325440,"byte_end":9325490,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325495,"byte_end":9325509,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325514,"byte_end":9325546,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325551,"byte_end":9325590,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325595,"byte_end":9325604,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325609,"byte_end":9325614,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325619,"byte_end":9325626,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5891},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326597,"byte_end":9326606,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325770,"byte_end":9325840,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325845,"byte_end":9325865,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325870,"byte_end":9325873,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325878,"byte_end":9325950,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325955,"byte_end":9325958,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325963,"byte_end":9325977,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325982,"byte_end":9325985,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9325990,"byte_end":9326036,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326041,"byte_end":9326044,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326049,"byte_end":9326067,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326072,"byte_end":9326094,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326099,"byte_end":9326127,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326132,"byte_end":9326167,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326172,"byte_end":9326208,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326213,"byte_end":9326216,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326221,"byte_end":9326242,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326247,"byte_end":9326270,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326275,"byte_end":9326280,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326285,"byte_end":9326288,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326293,"byte_end":9326323,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326328,"byte_end":9326361,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326366,"byte_end":9326369,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326374,"byte_end":9326461,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326466,"byte_end":9326507,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326512,"byte_end":9326549,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326554,"byte_end":9326563,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326568,"byte_end":9326573,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326578,"byte_end":9326585,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5931},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":5932},{"krate":0,"index":5952},{"krate":0,"index":5953},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6157},{"krate":0,"index":6158},{"krate":0,"index":6177},{"krate":0,"index":6178},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6237},{"krate":0,"index":6238},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6480},{"krate":0,"index":6595},{"krate":0,"index":6618},{"krate":0,"index":6619},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6516},{"krate":0,"index":6518}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21047,"byte_end":21073,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9335776,"byte_end":9335807,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9335808,"byte_end":9335811,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9335812,"byte_end":9335957,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9335958,"byte_end":9335961,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9335962,"byte_end":9336013,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6519},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361694,"byte_end":9361703,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":6523},{"krate":0,"index":6524}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361540,"byte_end":9361597,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361615,"byte_end":9361682,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6530},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9362857,"byte_end":9362866,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6535}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9362703,"byte_end":9362760,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9362778,"byte_end":9362845,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10287},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9363986,"byte_end":9363991,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10290},{"krate":0,"index":10291}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10266},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365224,"byte_end":9365231,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":10269},{"krate":0,"index":10270}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6009},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365796,"byte_end":9365806,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365383,"byte_end":9365436,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365437,"byte_end":9365440,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365441,"byte_end":9365506,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365507,"byte_end":9365563,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365564,"byte_end":9365567,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365568,"byte_end":9365586,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365587,"byte_end":9365590,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365591,"byte_end":9365670,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365671,"byte_end":9365746,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365747,"byte_end":9365785,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":6080},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370707,"byte_end":9370721,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6082},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370801,"byte_end":9370811,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370735,"byte_end":9370787,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370863,"byte_end":9370873,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370822,"byte_end":9370851,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9371090,"byte_end":9371096,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370940,"byte_end":9370988,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370997,"byte_end":9371000,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9371009,"byte_end":9371078,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9371212,"byte_end":9371220,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":6080},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9371159,"byte_end":9371200,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371513,"byte_end":9371518,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371387,"byte_end":9371435,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371453,"byte_end":9371501,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6101},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372108,"byte_end":9372113,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371643,"byte_end":9371684,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371685,"byte_end":9371688,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371689,"byte_end":9371757,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371758,"byte_end":9371834,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371835,"byte_end":9371845,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371846,"byte_end":9371849,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371850,"byte_end":9371864,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371865,"byte_end":9371868,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371869,"byte_end":9371885,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371886,"byte_end":9371889,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371890,"byte_end":9371897,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371898,"byte_end":9371939,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371940,"byte_end":9371943,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371944,"byte_end":9371962,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371963,"byte_end":9371984,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371985,"byte_end":9372031,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372032,"byte_end":9372035,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372036,"byte_end":9372080,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372081,"byte_end":9372086,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372087,"byte_end":9372094,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10193},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9372696,"byte_end":9372702,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":10196},{"krate":0,"index":10197}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10148},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374134,"byte_end":9374143,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":10151},{"krate":0,"index":10152}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10120},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9375560,"byte_end":9375570,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10126}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10072},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9376726,"byte_end":9376730,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":10074}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6548},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377862,"byte_end":9377866,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":6550}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377738,"byte_end":9377784,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377802,"byte_end":9377850,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6202},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378440,"byte_end":9378444,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377918,"byte_end":9377982,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377983,"byte_end":9378011,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378012,"byte_end":9378015,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378016,"byte_end":9378089,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378090,"byte_end":9378145,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378146,"byte_end":9378149,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378150,"byte_end":9378157,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378158,"byte_end":9378180,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378181,"byte_end":9378222,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378223,"byte_end":9378226,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378227,"byte_end":9378275,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378276,"byte_end":9378279,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378280,"byte_end":9378326,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378327,"byte_end":9378373,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378374,"byte_end":9378416,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378417,"byte_end":9378424,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378425,"byte_end":9378432,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10005},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379224,"byte_end":9379227,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9956},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9380297,"byte_end":9380302,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":9959},{"krate":0,"index":9960},{"krate":0,"index":9961}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6554},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382177,"byte_end":9382181,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6557}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382021,"byte_end":9382080,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382098,"byte_end":9382165,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6562},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382877,"byte_end":9382881,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":6564}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382753,"byte_end":9382799,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382817,"byte_end":9382865,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6292},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383453,"byte_end":9383457,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382957,"byte_end":9383013,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383014,"byte_end":9383017,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383018,"byte_end":9383097,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383098,"byte_end":9383101,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383102,"byte_end":9383116,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383117,"byte_end":9383120,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383121,"byte_end":9383128,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383129,"byte_end":9383170,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383171,"byte_end":9383174,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383175,"byte_end":9383193,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383194,"byte_end":9383215,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383216,"byte_end":9383254,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383255,"byte_end":9383293,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383294,"byte_end":9383297,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383298,"byte_end":9383344,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383345,"byte_end":9383348,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383349,"byte_end":9383387,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383388,"byte_end":9383431,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383432,"byte_end":9383437,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383438,"byte_end":9383445,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384080,"byte_end":9384087,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9383950,"byte_end":9384002,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384020,"byte_end":9384068,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6315},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384827,"byte_end":9384834,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384218,"byte_end":9384258,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384259,"byte_end":9384262,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384263,"byte_end":9384321,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384322,"byte_end":9384393,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384394,"byte_end":9384463,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384464,"byte_end":9384508,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384509,"byte_end":9384512,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384513,"byte_end":9384527,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384528,"byte_end":9384531,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384532,"byte_end":9384548,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384549,"byte_end":9384552,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384553,"byte_end":9384566,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384567,"byte_end":9384608,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384609,"byte_end":9384612,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384613,"byte_end":9384631,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384632,"byte_end":9384653,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384654,"byte_end":9384703,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384704,"byte_end":9384707,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384708,"byte_end":9384743,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384744,"byte_end":9384771,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384772,"byte_end":9384775,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384776,"byte_end":9384799,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384800,"byte_end":9384805,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384806,"byte_end":9384813,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6575},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390483,"byte_end":9390492,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":6578}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385251,"byte_end":9385327,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385328,"byte_end":9385336,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385337,"byte_end":9385340,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385341,"byte_end":9385418,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385419,"byte_end":9385495,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385496,"byte_end":9385572,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385573,"byte_end":9385607,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385608,"byte_end":9385611,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385612,"byte_end":9385632,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385633,"byte_end":9385636,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385637,"byte_end":9385680,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385681,"byte_end":9385741,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385742,"byte_end":9385820,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385821,"byte_end":9385854,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385855,"byte_end":9385858,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385859,"byte_end":9385938,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9385939,"byte_end":9386019,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386020,"byte_end":9386092,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386093,"byte_end":9386117,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386118,"byte_end":9386121,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386122,"byte_end":9386135,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386136,"byte_end":9386139,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386140,"byte_end":9386218,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386219,"byte_end":9386288,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386289,"byte_end":9386368,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386369,"byte_end":9386400,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386401,"byte_end":9386404,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386405,"byte_end":9386425,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386426,"byte_end":9386429,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386430,"byte_end":9386507,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386508,"byte_end":9386585,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386586,"byte_end":9386663,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386664,"byte_end":9386738,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386739,"byte_end":9386817,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386818,"byte_end":9386895,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386896,"byte_end":9386917,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386918,"byte_end":9386921,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386922,"byte_end":9386979,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9386980,"byte_end":9387011,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387012,"byte_end":9387035,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387036,"byte_end":9387074,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387075,"byte_end":9387078,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387079,"byte_end":9387093,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387094,"byte_end":9387097,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387098,"byte_end":9387171,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387172,"byte_end":9387175,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387176,"byte_end":9387183,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387184,"byte_end":9387230,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387231,"byte_end":9387257,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387258,"byte_end":9387261,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387262,"byte_end":9387280,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387281,"byte_end":9387302,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387303,"byte_end":9387350,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387351,"byte_end":9387398,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387399,"byte_end":9387402,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387403,"byte_end":9387436,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387437,"byte_end":9387476,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387477,"byte_end":9387480,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387481,"byte_end":9387561,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387562,"byte_end":9387634,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387635,"byte_end":9387673,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387674,"byte_end":9387685,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387686,"byte_end":9387689,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387690,"byte_end":9387723,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387724,"byte_end":9387763,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387764,"byte_end":9387802,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387803,"byte_end":9387814,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387815,"byte_end":9387818,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387819,"byte_end":9387858,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387859,"byte_end":9387862,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387863,"byte_end":9387893,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387894,"byte_end":9387925,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387926,"byte_end":9387957,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387958,"byte_end":9387961,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387962,"byte_end":9387983,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9387984,"byte_end":9388007,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388008,"byte_end":9388063,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388064,"byte_end":9388067,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388068,"byte_end":9388097,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388098,"byte_end":9388133,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388134,"byte_end":9388154,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388155,"byte_end":9388190,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388191,"byte_end":9388204,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388205,"byte_end":9388208,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388209,"byte_end":9388275,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388276,"byte_end":9388304,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388305,"byte_end":9388314,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388315,"byte_end":9388320,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388321,"byte_end":9388328,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388329,"byte_end":9388332,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388333,"byte_end":9388411,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388412,"byte_end":9388488,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388489,"byte_end":9388529,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388530,"byte_end":9388533,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388534,"byte_end":9388611,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388612,"byte_end":9388649,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388650,"byte_end":9388653,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388654,"byte_end":9388667,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388668,"byte_end":9388722,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388723,"byte_end":9388726,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388727,"byte_end":9388745,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388746,"byte_end":9388767,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388768,"byte_end":9388790,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388791,"byte_end":9388796,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388797,"byte_end":9388800,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388801,"byte_end":9388851,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388852,"byte_end":9388907,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388908,"byte_end":9388938,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388939,"byte_end":9388944,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388945,"byte_end":9388948,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9388949,"byte_end":9389025,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389026,"byte_end":9389092,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389093,"byte_end":9389137,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389138,"byte_end":9389168,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389169,"byte_end":9389174,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389175,"byte_end":9389178,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389179,"byte_end":9389197,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389198,"byte_end":9389219,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389220,"byte_end":9389264,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389265,"byte_end":9389268,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389269,"byte_end":9389319,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389320,"byte_end":9389350,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389351,"byte_end":9389377,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389378,"byte_end":9389381,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389382,"byte_end":9389396,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389397,"byte_end":9389425,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389426,"byte_end":9389470,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389471,"byte_end":9389502,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389503,"byte_end":9389551,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389552,"byte_end":9389628,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389629,"byte_end":9389670,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389671,"byte_end":9389722,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389723,"byte_end":9389779,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389780,"byte_end":9389805,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389806,"byte_end":9389855,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389856,"byte_end":9389907,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389908,"byte_end":9389933,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389934,"byte_end":9389955,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389956,"byte_end":9389973,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9389974,"byte_end":9390030,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390031,"byte_end":9390111,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390112,"byte_end":9390154,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390155,"byte_end":9390205,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390206,"byte_end":9390223,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390224,"byte_end":9390299,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390300,"byte_end":9390376,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390377,"byte_end":9390407,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390408,"byte_end":9390421,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390422,"byte_end":9390431,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390432,"byte_end":9390437,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390438,"byte_end":9390445,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6336},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390965,"byte_end":9390968,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390597,"byte_end":9390630,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390635,"byte_end":9390638,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390643,"byte_end":9390717,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390722,"byte_end":9390771,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390776,"byte_end":9390779,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390784,"byte_end":9390798,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390803,"byte_end":9390806,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390811,"byte_end":9390818,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390823,"byte_end":9390867,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390872,"byte_end":9390875,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390880,"byte_end":9390941,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390946,"byte_end":9390953,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6337},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391473,"byte_end":9391486,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391041,"byte_end":9391102,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391107,"byte_end":9391110,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391115,"byte_end":9391191,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391196,"byte_end":9391267,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391272,"byte_end":9391275,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391280,"byte_end":9391294,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391299,"byte_end":9391302,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391307,"byte_end":9391314,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391319,"byte_end":9391363,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391368,"byte_end":9391371,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391376,"byte_end":9391449,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391454,"byte_end":9391461,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6338},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392104,"byte_end":9392108,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391617,"byte_end":9391678,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391683,"byte_end":9391686,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391691,"byte_end":9391730,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391735,"byte_end":9391738,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391743,"byte_end":9391757,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391762,"byte_end":9391765,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391770,"byte_end":9391777,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391782,"byte_end":9391826,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391831,"byte_end":9391834,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391839,"byte_end":9391874,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391879,"byte_end":9391882,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391887,"byte_end":9391925,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391930,"byte_end":9391961,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9391966,"byte_end":9391997,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392002,"byte_end":9392005,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392010,"byte_end":9392037,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392042,"byte_end":9392070,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392075,"byte_end":9392080,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392085,"byte_end":9392092,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6341},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392692,"byte_end":9392698,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392201,"byte_end":9392256,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392261,"byte_end":9392264,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392269,"byte_end":9392308,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392313,"byte_end":9392316,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392321,"byte_end":9392335,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392340,"byte_end":9392343,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392348,"byte_end":9392355,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392360,"byte_end":9392404,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392409,"byte_end":9392412,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392417,"byte_end":9392452,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392457,"byte_end":9392460,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392465,"byte_end":9392503,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392508,"byte_end":9392539,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392544,"byte_end":9392575,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392580,"byte_end":9392583,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392588,"byte_end":9392620,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392625,"byte_end":9392658,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392663,"byte_end":9392668,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392673,"byte_end":9392680,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393298,"byte_end":9393308,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392791,"byte_end":9392854,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392859,"byte_end":9392862,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392867,"byte_end":9392910,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392915,"byte_end":9392918,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392923,"byte_end":9392937,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392942,"byte_end":9392945,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392950,"byte_end":9392957,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9392962,"byte_end":9393006,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393011,"byte_end":9393014,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393019,"byte_end":9393054,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393059,"byte_end":9393062,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393067,"byte_end":9393105,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393110,"byte_end":9393141,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393146,"byte_end":9393177,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393182,"byte_end":9393185,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393190,"byte_end":9393226,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393231,"byte_end":9393264,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393269,"byte_end":9393274,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393279,"byte_end":9393286,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6347},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393886,"byte_end":9393894,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393413,"byte_end":9393485,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393490,"byte_end":9393493,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393498,"byte_end":9393569,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393574,"byte_end":9393640,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393645,"byte_end":9393648,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393653,"byte_end":9393667,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393672,"byte_end":9393675,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393680,"byte_end":9393687,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393692,"byte_end":9393736,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393741,"byte_end":9393744,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393749,"byte_end":9393822,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393827,"byte_end":9393862,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393867,"byte_end":9393874,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394270,"byte_end":9394273,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9393956,"byte_end":9394001,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394006,"byte_end":9394009,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394014,"byte_end":9394028,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394033,"byte_end":9394036,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394041,"byte_end":9394048,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394053,"byte_end":9394097,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394102,"byte_end":9394105,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394110,"byte_end":9394143,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394148,"byte_end":9394175,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394180,"byte_end":9394214,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394219,"byte_end":9394246,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394251,"byte_end":9394258,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6349},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394624,"byte_end":9394632,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394330,"byte_end":9394381,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394386,"byte_end":9394389,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394394,"byte_end":9394408,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394413,"byte_end":9394416,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394421,"byte_end":9394428,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394433,"byte_end":9394467,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394472,"byte_end":9394475,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394480,"byte_end":9394511,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394516,"byte_end":9394542,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394547,"byte_end":9394568,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394573,"byte_end":9394600,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394605,"byte_end":9394612,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6350},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395044,"byte_end":9395049,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394693,"byte_end":9394763,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394768,"byte_end":9394789,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394794,"byte_end":9394797,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394802,"byte_end":9394816,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394821,"byte_end":9394824,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394829,"byte_end":9394836,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394841,"byte_end":9394885,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394890,"byte_end":9394893,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394898,"byte_end":9394931,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394936,"byte_end":9394970,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394975,"byte_end":9394989,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9394994,"byte_end":9395020,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395025,"byte_end":9395032,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6351},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395724,"byte_end":9395730,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395104,"byte_end":9395146,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395151,"byte_end":9395154,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395159,"byte_end":9395224,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395229,"byte_end":9395232,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395237,"byte_end":9395312,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395317,"byte_end":9395356,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395361,"byte_end":9395364,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395369,"byte_end":9395383,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395388,"byte_end":9395391,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395396,"byte_end":9395403,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395408,"byte_end":9395452,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395457,"byte_end":9395460,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395465,"byte_end":9395500,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395505,"byte_end":9395508,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395513,"byte_end":9395569,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395574,"byte_end":9395603,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395608,"byte_end":9395611,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395616,"byte_end":9395646,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395651,"byte_end":9395700,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395705,"byte_end":9395712,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6352},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396461,"byte_end":9396467,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9395909,"byte_end":9396010,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396015,"byte_end":9396018,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396023,"byte_end":9396097,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396102,"byte_end":9396166,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396171,"byte_end":9396174,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396179,"byte_end":9396193,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396198,"byte_end":9396201,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396206,"byte_end":9396213,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396218,"byte_end":9396262,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396267,"byte_end":9396270,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396275,"byte_end":9396310,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396315,"byte_end":9396351,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396356,"byte_end":9396394,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396399,"byte_end":9396437,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396442,"byte_end":9396449,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397301,"byte_end":9397313,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396769,"byte_end":9396839,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396844,"byte_end":9396847,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396852,"byte_end":9396926,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9396931,"byte_end":9396995,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397000,"byte_end":9397003,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397008,"byte_end":9397022,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397027,"byte_end":9397030,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397035,"byte_end":9397042,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397047,"byte_end":9397091,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397096,"byte_end":9397099,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397104,"byte_end":9397139,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397144,"byte_end":9397180,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397185,"byte_end":9397228,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397233,"byte_end":9397277,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397282,"byte_end":9397289,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9919},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400253,"byte_end":9400257,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":9921},{"krate":0,"index":9922}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9874},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9401819,"byte_end":9401828,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6587},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403632,"byte_end":9403639,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":6590}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403468,"byte_end":9403535,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403553,"byte_end":9403620,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9837},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404488,"byte_end":9404492,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9839},{"krate":0,"index":9840}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9788},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406335,"byte_end":9406344,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":9791},{"krate":0,"index":9792},{"krate":0,"index":9793}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9765},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9438012,"byte_end":9438019,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9767},{"krate":0,"index":9768},{"krate":0,"index":9769},{"krate":0,"index":9770}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":6482},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337017,"byte_end":9337026,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6487},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6513},{"krate":0,"index":6515}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336906,"byte_end":9336980,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9336981,"byte_end":9337006,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":6483},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338096,"byte_end":9338100,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337041,"byte_end":9337111,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337116,"byte_end":9337139,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337144,"byte_end":9337147,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337152,"byte_end":9337170,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337175,"byte_end":9337178,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337183,"byte_end":9337196,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337201,"byte_end":9337252,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337257,"byte_end":9337264,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337269,"byte_end":9337272,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337277,"byte_end":9337345,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337350,"byte_end":9337425,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337430,"byte_end":9337505,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337510,"byte_end":9337564,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337569,"byte_end":9337644,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337649,"byte_end":9337659,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337664,"byte_end":9337667,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337672,"byte_end":9337686,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337691,"byte_end":9337694,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337699,"byte_end":9337706,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337711,"byte_end":9337731,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337736,"byte_end":9337759,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337764,"byte_end":9337805,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337810,"byte_end":9337813,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337818,"byte_end":9337859,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337864,"byte_end":9337867,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337872,"byte_end":9337917,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337922,"byte_end":9337967,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337972,"byte_end":9338017,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338022,"byte_end":9338064,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338069,"byte_end":9338076,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338081,"byte_end":9338088,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6484},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339171,"byte_end":9339179,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338202,"byte_end":9338270,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338275,"byte_end":9338343,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338348,"byte_end":9338351,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338356,"byte_end":9338374,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338379,"byte_end":9338382,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338387,"byte_end":9338400,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338405,"byte_end":9338462,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338467,"byte_end":9338474,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338479,"byte_end":9338482,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338487,"byte_end":9338551,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338556,"byte_end":9338618,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338623,"byte_end":9338683,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338688,"byte_end":9338731,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338736,"byte_end":9338739,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338744,"byte_end":9338758,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338763,"byte_end":9338766,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338771,"byte_end":9338778,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338783,"byte_end":9338803,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338808,"byte_end":9338831,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338836,"byte_end":9338877,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338882,"byte_end":9338885,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338890,"byte_end":9338957,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338962,"byte_end":9338965,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9338970,"byte_end":9339023,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339028,"byte_end":9339081,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339086,"byte_end":9339139,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339144,"byte_end":9339151,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339156,"byte_end":9339163,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6487},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340247,"byte_end":9340250,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339323,"byte_end":9339398,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339403,"byte_end":9339426,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339431,"byte_end":9339434,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339439,"byte_end":9339511,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339516,"byte_end":9339580,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339585,"byte_end":9339622,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339627,"byte_end":9339630,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339635,"byte_end":9339711,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339716,"byte_end":9339787,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339792,"byte_end":9339813,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339818,"byte_end":9339821,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339826,"byte_end":9339840,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339845,"byte_end":9339848,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339853,"byte_end":9339860,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339865,"byte_end":9339885,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339890,"byte_end":9339913,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339918,"byte_end":9339959,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339964,"byte_end":9339967,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9339972,"byte_end":9340009,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340014,"byte_end":9340057,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340062,"byte_end":9340065,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340070,"byte_end":9340115,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340120,"byte_end":9340165,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340170,"byte_end":9340215,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340220,"byte_end":9340227,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340232,"byte_end":9340239,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6490},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342860,"byte_end":9342865,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340394,"byte_end":9340467,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340472,"byte_end":9340488,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340493,"byte_end":9340496,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340501,"byte_end":9340577,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340582,"byte_end":9340647,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340652,"byte_end":9340727,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340732,"byte_end":9340806,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340811,"byte_end":9340854,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340859,"byte_end":9340862,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340867,"byte_end":9340942,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9340947,"byte_end":9341013,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341018,"byte_end":9341061,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341066,"byte_end":9341069,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341074,"byte_end":9341145,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341150,"byte_end":9341153,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341158,"byte_end":9341201,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341206,"byte_end":9341209,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341214,"byte_end":9341228,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341233,"byte_end":9341236,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341241,"byte_end":9341248,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341253,"byte_end":9341286,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341291,"byte_end":9341317,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341322,"byte_end":9341342,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341347,"byte_end":9341350,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341355,"byte_end":9341383,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341388,"byte_end":9341391,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341396,"byte_end":9341404,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341409,"byte_end":9341427,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341432,"byte_end":9341440,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341445,"byte_end":9341482,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341487,"byte_end":9341508,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341513,"byte_end":9341533,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341538,"byte_end":9341585,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341590,"byte_end":9341637,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341642,"byte_end":9341645,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341650,"byte_end":9341686,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341691,"byte_end":9341694,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341699,"byte_end":9341732,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341737,"byte_end":9341780,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341785,"byte_end":9341824,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341829,"byte_end":9341868,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341873,"byte_end":9341876,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341881,"byte_end":9341926,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341931,"byte_end":9341992,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9341997,"byte_end":9342000,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342005,"byte_end":9342044,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342049,"byte_end":9342060,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342065,"byte_end":9342068,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342073,"byte_end":9342106,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342111,"byte_end":9342164,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342169,"byte_end":9342229,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342234,"byte_end":9342237,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342242,"byte_end":9342281,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342286,"byte_end":9342289,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342294,"byte_end":9342355,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342360,"byte_end":9342363,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342368,"byte_end":9342403,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342408,"byte_end":9342447,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342452,"byte_end":9342463,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342468,"byte_end":9342471,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342476,"byte_end":9342523,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342528,"byte_end":9342575,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342580,"byte_end":9342627,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342632,"byte_end":9342679,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342684,"byte_end":9342731,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342736,"byte_end":9342739,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342744,"byte_end":9342783,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342788,"byte_end":9342830,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342835,"byte_end":9342840,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9342845,"byte_end":9342852,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6492},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344170,"byte_end":9344176,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343021,"byte_end":9343093,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343098,"byte_end":9343112,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343117,"byte_end":9343120,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343125,"byte_end":9343200,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343205,"byte_end":9343251,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343256,"byte_end":9343328,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343333,"byte_end":9343382,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343387,"byte_end":9343445,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343450,"byte_end":9343453,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343458,"byte_end":9343534,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343539,"byte_end":9343611,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343616,"byte_end":9343637,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343642,"byte_end":9343645,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343650,"byte_end":9343664,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343669,"byte_end":9343672,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343677,"byte_end":9343684,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343689,"byte_end":9343709,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343714,"byte_end":9343737,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343742,"byte_end":9343783,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343788,"byte_end":9343791,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343796,"byte_end":9343833,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343838,"byte_end":9343888,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343893,"byte_end":9343896,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343901,"byte_end":9343945,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343950,"byte_end":9343994,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9343999,"byte_end":9344043,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344048,"byte_end":9344092,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344097,"byte_end":9344138,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344143,"byte_end":9344150,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344155,"byte_end":9344162,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6494},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345543,"byte_end":9345553,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344327,"byte_end":9344402,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344407,"byte_end":9344470,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344475,"byte_end":9344478,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344483,"byte_end":9344558,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344563,"byte_end":9344615,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344620,"byte_end":9344696,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344701,"byte_end":9344761,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344766,"byte_end":9344769,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344774,"byte_end":9344850,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344855,"byte_end":9344931,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344936,"byte_end":9344957,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344962,"byte_end":9344965,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344970,"byte_end":9344984,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9344989,"byte_end":9344996,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345001,"byte_end":9345021,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345026,"byte_end":9345049,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345054,"byte_end":9345095,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345100,"byte_end":9345103,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345108,"byte_end":9345145,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345150,"byte_end":9345193,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345198,"byte_end":9345249,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345254,"byte_end":9345261,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345266,"byte_end":9345269,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345274,"byte_end":9345318,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345323,"byte_end":9345367,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345372,"byte_end":9345416,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345421,"byte_end":9345465,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345470,"byte_end":9345511,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345516,"byte_end":9345523,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345528,"byte_end":9345535,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6497},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347685,"byte_end":9347689,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345717,"byte_end":9345772,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345777,"byte_end":9345780,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345785,"byte_end":9345858,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345863,"byte_end":9345935,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9345940,"byte_end":9346014,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346019,"byte_end":9346045,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346050,"byte_end":9346053,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346058,"byte_end":9346072,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346077,"byte_end":9346080,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346085,"byte_end":9346092,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346097,"byte_end":9346140,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346145,"byte_end":9346148,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346153,"byte_end":9346175,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346180,"byte_end":9346215,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346220,"byte_end":9346223,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346228,"byte_end":9346282,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346287,"byte_end":9346309,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346314,"byte_end":9346333,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346338,"byte_end":9346343,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346348,"byte_end":9346351,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346356,"byte_end":9346387,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346392,"byte_end":9346416,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346421,"byte_end":9346424,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346429,"byte_end":9346521,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346526,"byte_end":9346559,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346564,"byte_end":9346604,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346609,"byte_end":9346612,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346617,"byte_end":9346666,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346671,"byte_end":9346700,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346705,"byte_end":9346743,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346748,"byte_end":9346768,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346773,"byte_end":9346806,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346811,"byte_end":9346824,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346829,"byte_end":9346838,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346843,"byte_end":9346848,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346853,"byte_end":9346856,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346861,"byte_end":9346879,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346884,"byte_end":9346905,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346910,"byte_end":9346958,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346963,"byte_end":9346966,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9346971,"byte_end":9347012,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347017,"byte_end":9347066,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347071,"byte_end":9347117,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347122,"byte_end":9347171,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347176,"byte_end":9347222,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347227,"byte_end":9347230,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347235,"byte_end":9347271,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347276,"byte_end":9347315,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347320,"byte_end":9347323,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347328,"byte_end":9347377,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347382,"byte_end":9347428,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347433,"byte_end":9347436,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347441,"byte_end":9347502,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347507,"byte_end":9347553,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347558,"byte_end":9347604,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347609,"byte_end":9347655,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347660,"byte_end":9347665,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347670,"byte_end":9347677,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6498},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348425,"byte_end":9348429,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347782,"byte_end":9347853,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347858,"byte_end":9347861,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347866,"byte_end":9347939,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347944,"byte_end":9347979,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347984,"byte_end":9347987,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9347992,"byte_end":9348006,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348011,"byte_end":9348014,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348019,"byte_end":9348026,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348031,"byte_end":9348051,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348056,"byte_end":9348079,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348084,"byte_end":9348125,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348130,"byte_end":9348133,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348138,"byte_end":9348188,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348193,"byte_end":9348196,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348201,"byte_end":9348246,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348251,"byte_end":9348296,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348301,"byte_end":9348346,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348351,"byte_end":9348393,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348398,"byte_end":9348405,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348410,"byte_end":9348417,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6499},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349322,"byte_end":9349332,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348535,"byte_end":9348598,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348603,"byte_end":9348626,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348631,"byte_end":9348634,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348639,"byte_end":9348714,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348719,"byte_end":9348791,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348796,"byte_end":9348860,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348865,"byte_end":9348868,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348873,"byte_end":9348887,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348892,"byte_end":9348895,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348900,"byte_end":9348907,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348912,"byte_end":9348932,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348937,"byte_end":9348960,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9348965,"byte_end":9349006,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349011,"byte_end":9349014,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349019,"byte_end":9349085,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349090,"byte_end":9349093,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349098,"byte_end":9349143,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349148,"byte_end":9349193,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349198,"byte_end":9349243,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349248,"byte_end":9349290,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349295,"byte_end":9349302,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349307,"byte_end":9349314,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6501},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350029,"byte_end":9350033,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349489,"byte_end":9349555,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349560,"byte_end":9349582,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349587,"byte_end":9349590,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349595,"byte_end":9349609,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349614,"byte_end":9349617,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349622,"byte_end":9349629,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349634,"byte_end":9349654,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349659,"byte_end":9349682,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349687,"byte_end":9349728,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349733,"byte_end":9349736,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349741,"byte_end":9349791,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349796,"byte_end":9349799,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349804,"byte_end":9349849,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349854,"byte_end":9349899,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349904,"byte_end":9349950,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9349955,"byte_end":9349997,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350002,"byte_end":9350009,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350014,"byte_end":9350021,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351011,"byte_end":9351021,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350139,"byte_end":9350212,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350217,"byte_end":9350240,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350245,"byte_end":9350248,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350253,"byte_end":9350331,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350336,"byte_end":9350408,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350413,"byte_end":9350473,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350478,"byte_end":9350481,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350486,"byte_end":9350549,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350554,"byte_end":9350557,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350562,"byte_end":9350576,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350581,"byte_end":9350584,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350589,"byte_end":9350596,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350601,"byte_end":9350621,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350626,"byte_end":9350649,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350654,"byte_end":9350695,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350700,"byte_end":9350774,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350779,"byte_end":9350782,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350787,"byte_end":9350832,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350837,"byte_end":9350882,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350887,"byte_end":9350932,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350937,"byte_end":9350979,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350984,"byte_end":9350991,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9350996,"byte_end":9351003,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352600,"byte_end":9352603,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351178,"byte_end":9351239,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351244,"byte_end":9351247,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351252,"byte_end":9351322,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351327,"byte_end":9351397,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351402,"byte_end":9351467,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351472,"byte_end":9351524,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351529,"byte_end":9351532,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351537,"byte_end":9351609,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351614,"byte_end":9351688,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351693,"byte_end":9351729,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351734,"byte_end":9351737,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351742,"byte_end":9351777,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351782,"byte_end":9351785,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351790,"byte_end":9351804,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351809,"byte_end":9351812,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351817,"byte_end":9351833,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351838,"byte_end":9351841,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351846,"byte_end":9351853,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351858,"byte_end":9351878,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351883,"byte_end":9351906,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351911,"byte_end":9351952,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351957,"byte_end":9351960,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351965,"byte_end":9351987,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9351992,"byte_end":9351995,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352000,"byte_end":9352052,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352057,"byte_end":9352060,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352065,"byte_end":9352118,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352123,"byte_end":9352130,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352135,"byte_end":9352142,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352147,"byte_end":9352150,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352155,"byte_end":9352189,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352194,"byte_end":9352197,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352202,"byte_end":9352209,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352214,"byte_end":9352234,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352239,"byte_end":9352262,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352267,"byte_end":9352308,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352313,"byte_end":9352316,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352321,"byte_end":9352343,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352348,"byte_end":9352351,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352356,"byte_end":9352392,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352397,"byte_end":9352400,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352405,"byte_end":9352447,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352452,"byte_end":9352455,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352460,"byte_end":9352519,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352524,"byte_end":9352568,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352573,"byte_end":9352580,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352585,"byte_end":9352592,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354128,"byte_end":9354131,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352768,"byte_end":9352827,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352832,"byte_end":9352835,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352840,"byte_end":9352910,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352915,"byte_end":9352988,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9352993,"byte_end":9353057,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353062,"byte_end":9353082,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353087,"byte_end":9353090,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353095,"byte_end":9353167,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353172,"byte_end":9353245,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353250,"byte_end":9353285,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353290,"byte_end":9353293,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353298,"byte_end":9353334,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353339,"byte_end":9353342,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353347,"byte_end":9353363,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353368,"byte_end":9353371,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353376,"byte_end":9353383,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353388,"byte_end":9353408,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353413,"byte_end":9353436,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353441,"byte_end":9353482,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353487,"byte_end":9353490,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353495,"byte_end":9353517,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353522,"byte_end":9353525,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353530,"byte_end":9353582,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353587,"byte_end":9353590,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353595,"byte_end":9353648,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353653,"byte_end":9353660,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353665,"byte_end":9353672,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353677,"byte_end":9353680,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353685,"byte_end":9353718,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353723,"byte_end":9353726,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353731,"byte_end":9353738,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353743,"byte_end":9353763,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353768,"byte_end":9353791,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353796,"byte_end":9353837,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353842,"byte_end":9353845,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353850,"byte_end":9353872,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353877,"byte_end":9353880,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353885,"byte_end":9353921,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353926,"byte_end":9353929,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353934,"byte_end":9353975,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353980,"byte_end":9353983,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9353988,"byte_end":9354047,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354052,"byte_end":9354096,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354101,"byte_end":9354108,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354113,"byte_end":9354120,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355274,"byte_end":9355279,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354296,"byte_end":9354367,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354372,"byte_end":9354428,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354433,"byte_end":9354436,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354441,"byte_end":9354515,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354520,"byte_end":9354556,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354561,"byte_end":9354564,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354569,"byte_end":9354583,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354588,"byte_end":9354591,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354596,"byte_end":9354603,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354608,"byte_end":9354649,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354654,"byte_end":9354657,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354662,"byte_end":9354680,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354685,"byte_end":9354706,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354711,"byte_end":9354757,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354762,"byte_end":9354808,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354813,"byte_end":9354816,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354821,"byte_end":9354861,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354866,"byte_end":9354869,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354874,"byte_end":9354923,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354928,"byte_end":9354977,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9354982,"byte_end":9355031,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355036,"byte_end":9355085,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355090,"byte_end":9355139,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355144,"byte_end":9355193,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355198,"byte_end":9355244,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355249,"byte_end":9355254,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355259,"byte_end":9355266,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355872,"byte_end":9355876,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355435,"byte_end":9355504,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355509,"byte_end":9355545,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355550,"byte_end":9355553,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355558,"byte_end":9355572,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355577,"byte_end":9355593,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355598,"byte_end":9355605,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355610,"byte_end":9355630,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355635,"byte_end":9355658,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355663,"byte_end":9355696,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355701,"byte_end":9355704,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355709,"byte_end":9355751,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355756,"byte_end":9355804,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355809,"byte_end":9355812,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355817,"byte_end":9355840,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355845,"byte_end":9355852,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9355857,"byte_end":9355864,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358189,"byte_end":9358196,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356055,"byte_end":9356117,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356122,"byte_end":9356125,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356130,"byte_end":9356206,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356211,"byte_end":9356278,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356283,"byte_end":9356331,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356336,"byte_end":9356401,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356406,"byte_end":9356409,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356414,"byte_end":9356428,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356433,"byte_end":9356436,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356441,"byte_end":9356515,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356520,"byte_end":9356592,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356597,"byte_end":9356672,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356677,"byte_end":9356739,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356744,"byte_end":9356747,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356752,"byte_end":9356763,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356768,"byte_end":9356771,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356776,"byte_end":9356846,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356851,"byte_end":9356889,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356894,"byte_end":9356897,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356902,"byte_end":9356916,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356921,"byte_end":9356924,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356929,"byte_end":9356945,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356950,"byte_end":9356953,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356958,"byte_end":9356965,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9356970,"byte_end":9357011,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357016,"byte_end":9357019,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357024,"byte_end":9357042,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357047,"byte_end":9357068,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357073,"byte_end":9357104,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357109,"byte_end":9357148,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357153,"byte_end":9357184,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357189,"byte_end":9357215,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357220,"byte_end":9357243,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357248,"byte_end":9357251,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357256,"byte_end":9357299,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357304,"byte_end":9357309,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357314,"byte_end":9357321,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357326,"byte_end":9357329,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357334,"byte_end":9357376,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357381,"byte_end":9357384,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357389,"byte_end":9357396,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357401,"byte_end":9357442,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357447,"byte_end":9357450,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357455,"byte_end":9357473,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357478,"byte_end":9357499,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357504,"byte_end":9357569,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357574,"byte_end":9357618,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357623,"byte_end":9357674,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357679,"byte_end":9357705,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357710,"byte_end":9357733,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357738,"byte_end":9357741,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357746,"byte_end":9357792,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357797,"byte_end":9357800,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357805,"byte_end":9357877,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357882,"byte_end":9357954,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357959,"byte_end":9357962,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9357967,"byte_end":9358011,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358016,"byte_end":9358049,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358054,"byte_end":9358080,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358085,"byte_end":9358108,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358113,"byte_end":9358116,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358121,"byte_end":9358159,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358164,"byte_end":9358169,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358174,"byte_end":9358181,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360851,"byte_end":9360858,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":6482},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358336,"byte_end":9358388,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358393,"byte_end":9358396,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358401,"byte_end":9358473,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358478,"byte_end":9358548,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358553,"byte_end":9358556,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358561,"byte_end":9358637,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358642,"byte_end":9358719,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358724,"byte_end":9358800,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358805,"byte_end":9358848,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358853,"byte_end":9358856,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358861,"byte_end":9358872,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358877,"byte_end":9358880,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358885,"byte_end":9358951,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358956,"byte_end":9358982,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358987,"byte_end":9358990,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9358995,"byte_end":9359070,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359075,"byte_end":9359109,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359114,"byte_end":9359117,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359122,"byte_end":9359136,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359141,"byte_end":9359144,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359149,"byte_end":9359223,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359228,"byte_end":9359231,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359236,"byte_end":9359243,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359248,"byte_end":9359268,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359273,"byte_end":9359296,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359301,"byte_end":9359342,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359347,"byte_end":9359375,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359380,"byte_end":9359423,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359428,"byte_end":9359431,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359436,"byte_end":9359504,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359509,"byte_end":9359512,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359517,"byte_end":9359584,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359589,"byte_end":9359646,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359651,"byte_end":9359708,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359713,"byte_end":9359770,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359775,"byte_end":9359829,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359834,"byte_end":9359837,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359842,"byte_end":9359927,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9359932,"byte_end":9360008,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360013,"byte_end":9360070,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360075,"byte_end":9360125,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360130,"byte_end":9360187,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360192,"byte_end":9360249,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360254,"byte_end":9360308,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360313,"byte_end":9360316,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360321,"byte_end":9360392,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360397,"byte_end":9360460,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360465,"byte_end":9360537,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360542,"byte_end":9360604,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360609,"byte_end":9360612,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360617,"byte_end":9360674,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360679,"byte_end":9360733,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360738,"byte_end":9360745,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360750,"byte_end":9360757,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9360762,"byte_end":9360791,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":6620},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6631},{"krate":0,"index":6632},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6821},{"krate":0,"index":7248},{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7383},{"krate":0,"index":7384},{"krate":0,"index":7503},{"krate":0,"index":7594},{"krate":0,"index":7732},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7814},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7817},{"krate":0,"index":7818},{"krate":0,"index":7863},{"krate":0,"index":7864}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439558,"byte_end":9439622,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439623,"byte_end":9439626,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439627,"byte_end":9439702,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439703,"byte_end":9439783,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439784,"byte_end":9439863,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439864,"byte_end":9439898,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439899,"byte_end":9439902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439903,"byte_end":9439927,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439928,"byte_end":9439931,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439932,"byte_end":9439953,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439954,"byte_end":9439957,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9439958,"byte_end":9440031,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440032,"byte_end":9440111,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440112,"byte_end":9440181,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440182,"byte_end":9440185,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440186,"byte_end":9440265,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440266,"byte_end":9440343,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440344,"byte_end":9440419,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440420,"byte_end":9440492,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440493,"byte_end":9440565,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440566,"byte_end":9440643,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ messages.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440644,"byte_end":9440657,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440658,"byte_end":9440661,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440662,"byte_end":9440740,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440741,"byte_end":9440802,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440803,"byte_end":9440806,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440807,"byte_end":9440831,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440832,"byte_end":9440835,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440836,"byte_end":9440915,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440916,"byte_end":9440994,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9440995,"byte_end":9441039,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441040,"byte_end":9441043,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441044,"byte_end":9441124,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441125,"byte_end":9441141,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441142,"byte_end":9441145,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441146,"byte_end":9441153,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441154,"byte_end":9441183,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441184,"byte_end":9441187,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441188,"byte_end":9441231,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441232,"byte_end":9441294,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441295,"byte_end":9441300,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441301,"byte_end":9441304,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441305,"byte_end":9441323,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441324,"byte_end":9441345,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441346,"byte_end":9441388,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441389,"byte_end":9441392,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441393,"byte_end":9441426,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441427,"byte_end":9441474,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441475,"byte_end":9441509,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441510,"byte_end":9441521,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441522,"byte_end":9441525,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441526,"byte_end":9441603,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441604,"byte_end":9441607,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441608,"byte_end":9441650,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441651,"byte_end":9441687,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441688,"byte_end":9441693,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441694,"byte_end":9441701,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441702,"byte_end":9441705,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441706,"byte_end":9441770,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441771,"byte_end":9441835,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441836,"byte_end":9441898,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441899,"byte_end":9441969,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9441970,"byte_end":9442035,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442036,"byte_end":9442046,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442047,"byte_end":9442050,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442051,"byte_end":9442067,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442068,"byte_end":9442071,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442072,"byte_end":9442079,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442080,"byte_end":9442123,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442124,"byte_end":9442175,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442176,"byte_end":9442181,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442182,"byte_end":9442185,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442186,"byte_end":9442204,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442205,"byte_end":9442226,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442227,"byte_end":9442278,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442279,"byte_end":9442315,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442316,"byte_end":9442327,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442328,"byte_end":9442331,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442332,"byte_end":9442409,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442410,"byte_end":9442413,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442414,"byte_end":9442456,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442457,"byte_end":9442502,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442503,"byte_end":9442508,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442509,"byte_end":9442516,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442517,"byte_end":9442520,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442521,"byte_end":9442543,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442544,"byte_end":9442587,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442588,"byte_end":9442591,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442592,"byte_end":9442613,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442614,"byte_end":9442617,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442618,"byte_end":9442695,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442696,"byte_end":9442776,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442777,"byte_end":9442832,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442833,"byte_end":9442836,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442837,"byte_end":9442915,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442916,"byte_end":9442936,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442937,"byte_end":9442940,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442941,"byte_end":9442948,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442949,"byte_end":9442975,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442976,"byte_end":9442979,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9442980,"byte_end":9443033,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443034,"byte_end":9443088,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443089,"byte_end":9443094,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443095,"byte_end":9443098,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443099,"byte_end":9443117,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443118,"byte_end":9443139,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443140,"byte_end":9443190,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443191,"byte_end":9443194,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443195,"byte_end":9443228,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443229,"byte_end":9443257,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443258,"byte_end":9443310,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443311,"byte_end":9443355,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443356,"byte_end":9443369,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443370,"byte_end":9443381,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443382,"byte_end":9443385,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443386,"byte_end":9443433,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443434,"byte_end":9443472,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443473,"byte_end":9443482,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443483,"byte_end":9443488,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443489,"byte_end":9443496,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443497,"byte_end":9443500,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443501,"byte_end":9443581,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443582,"byte_end":9443659,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443660,"byte_end":9443733,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443734,"byte_end":9443809,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443810,"byte_end":9443823,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443824,"byte_end":9443827,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443828,"byte_end":9443903,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443904,"byte_end":9443983,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9443984,"byte_end":9444062,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444063,"byte_end":9444142,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444143,"byte_end":9444223,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444224,"byte_end":9444289,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444290,"byte_end":9444293,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444294,"byte_end":9444374,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444375,"byte_end":9444387,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444388,"byte_end":9444391,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444392,"byte_end":9444405,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444406,"byte_end":9444447,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444448,"byte_end":9444478,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444479,"byte_end":9444505,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444506,"byte_end":9444509,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444510,"byte_end":9444528,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444529,"byte_end":9444568,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444569,"byte_end":9444644,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444645,"byte_end":9444691,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444692,"byte_end":9444695,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444696,"byte_end":9444720,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444721,"byte_end":9444800,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444801,"byte_end":9444832,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let mut tx = tx.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444833,"byte_end":9444869,"line_start":153,"line_end":153,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444870,"byte_end":9444873,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444874,"byte_end":9444911,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444912,"byte_end":9444974,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444975,"byte_end":9444990,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9444991,"byte_end":9445000,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445001,"byte_end":9445004,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445005,"byte_end":9445084,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445085,"byte_end":9445160,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445161,"byte_end":9445239,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445240,"byte_end":9445287,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445288,"byte_end":9445305,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445306,"byte_end":9445309,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445310,"byte_end":9445357,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445358,"byte_end":9445399,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445400,"byte_end":9445409,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445410,"byte_end":9445413,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445414,"byte_end":9445428,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445429,"byte_end":9445434,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445435,"byte_end":9445442,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445443,"byte_end":9445446,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445447,"byte_end":9445522,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445523,"byte_end":9445598,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445599,"byte_end":9445678,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445679,"byte_end":9445744,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445745,"byte_end":9445822,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445823,"byte_end":9445826,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445827,"byte_end":9445905,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445906,"byte_end":9445986,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9445987,"byte_end":9446032,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446033,"byte_end":9446036,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446037,"byte_end":9446044,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446045,"byte_end":9446082,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446083,"byte_end":9446110,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446111,"byte_end":9446114,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446115,"byte_end":9446133,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446134,"byte_end":9446152,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446153,"byte_end":9446196,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446197,"byte_end":9446202,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446203,"byte_end":9446206,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446207,"byte_end":9446225,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446226,"byte_end":9446247,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446248,"byte_end":9446337,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446338,"byte_end":9446341,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446342,"byte_end":9446387,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446388,"byte_end":9446421,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446422,"byte_end":9446459,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446460,"byte_end":9446463,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446464,"byte_end":9446531,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446532,"byte_end":9446559,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446560,"byte_end":9446594,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446595,"byte_end":9446638,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446639,"byte_end":9446676,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446677,"byte_end":9446730,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446731,"byte_end":9446752,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446753,"byte_end":9446770,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446771,"byte_end":9446784,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446785,"byte_end":9446796,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446797,"byte_end":9446800,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446801,"byte_end":9446839,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446840,"byte_end":9446843,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446844,"byte_end":9446904,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446905,"byte_end":9446929,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446930,"byte_end":9446974,"line_start":216,"line_end":216,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446975,"byte_end":9446978,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9446979,"byte_end":9447034,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447035,"byte_end":9447095,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447096,"byte_end":9447099,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447100,"byte_end":9447170,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447171,"byte_end":9447220,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447221,"byte_end":9447224,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447225,"byte_end":9447278,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447279,"byte_end":9447295,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447296,"byte_end":9447305,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447306,"byte_end":9447309,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447310,"byte_end":9447351,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447352,"byte_end":9447403,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447404,"byte_end":9447443,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447444,"byte_end":9447453,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447454,"byte_end":9447459,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447460,"byte_end":9447467,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447468,"byte_end":9447471,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447472,"byte_end":9447488,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447489,"byte_end":9447492,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447493,"byte_end":9447519,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447520,"byte_end":9447523,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447524,"byte_end":9447591,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447592,"byte_end":9447664,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447665,"byte_end":9447738,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447739,"byte_end":9447792,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447793,"byte_end":9447796,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447797,"byte_end":9447877,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447878,"byte_end":9447900,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447901,"byte_end":9447904,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447905,"byte_end":9447920,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447921,"byte_end":9447924,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447925,"byte_end":9447932,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447933,"byte_end":9447964,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447965,"byte_end":9447968,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447969,"byte_end":9447987,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9447988,"byte_end":9448009,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448010,"byte_end":9448061,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448062,"byte_end":9448099,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448100,"byte_end":9448103,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448104,"byte_end":9448137,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448138,"byte_end":9448192,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448193,"byte_end":9448247,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448248,"byte_end":9448259,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448260,"byte_end":9448263,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448264,"byte_end":9448297,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448298,"byte_end":9448352,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448353,"byte_end":9448407,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448408,"byte_end":9448419,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448420,"byte_end":9448423,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448424,"byte_end":9448453,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448454,"byte_end":9448483,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448484,"byte_end":9448489,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448490,"byte_end":9448497,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448498,"byte_end":9448501,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448502,"byte_end":9448551,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448552,"byte_end":9448555,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448556,"byte_end":9448578,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448579,"byte_end":9448582,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448583,"byte_end":9448659,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448660,"byte_end":9448738,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448739,"byte_end":9448818,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448819,"byte_end":9448884,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448885,"byte_end":9448888,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448889,"byte_end":9448969,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448970,"byte_end":9448973,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9448974,"byte_end":9449048,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449049,"byte_end":9449122,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449123,"byte_end":9449136,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449137,"byte_end":9449140,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449141,"byte_end":9449214,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449215,"byte_end":9449295,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449296,"byte_end":9449371,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449372,"byte_end":9449375,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449376,"byte_end":9449383,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449384,"byte_end":9449411,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449412,"byte_end":9449459,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449460,"byte_end":9449463,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449464,"byte_end":9449480,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449481,"byte_end":9449484,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449485,"byte_end":9449527,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449528,"byte_end":9449547,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449548,"byte_end":9449574,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449575,"byte_end":9449580,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449581,"byte_end":9449584,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449585,"byte_end":9449602,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449603,"byte_end":9449660,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449661,"byte_end":9449719,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449720,"byte_end":9449772,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449773,"byte_end":9449782,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449783,"byte_end":9449788,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449789,"byte_end":9449792,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449793,"byte_end":9449828,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449829,"byte_end":9449857,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449858,"byte_end":9449863,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449864,"byte_end":9449867,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449868,"byte_end":9449886,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449887,"byte_end":9449908,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449909,"byte_end":9449952,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9449953,"byte_end":9450018,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450019,"byte_end":9450022,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450023,"byte_end":9450101,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450102,"byte_end":9450156,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450157,"byte_end":9450160,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450161,"byte_end":9450205,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450206,"byte_end":9450239,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450240,"byte_end":9450258,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450259,"byte_end":9450308,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450309,"byte_end":9450372,"line_start":325,"line_end":325,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450373,"byte_end":9450376,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450377,"byte_end":9450423,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450424,"byte_end":9450497,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450498,"byte_end":9450501,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450502,"byte_end":9450576,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450577,"byte_end":9450617,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450618,"byte_end":9450659,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450660,"byte_end":9450722,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/                 config = new_config;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450723,"byte_end":9450763,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450764,"byte_end":9450781,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450782,"byte_end":9450795,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450796,"byte_end":9450807,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450808,"byte_end":9450811,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450812,"byte_end":9450845,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450846,"byte_end":9450849,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450850,"byte_end":9450928,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450929,"byte_end":9450983,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450984,"byte_end":9450994,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9450995,"byte_end":9451072,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451073,"byte_end":9451151,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451152,"byte_end":9451187,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451188,"byte_end":9451211,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451212,"byte_end":9451275,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451276,"byte_end":9451312,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451313,"byte_end":9451316,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451317,"byte_end":9451367,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451368,"byte_end":9451447,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451448,"byte_end":9451523,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451524,"byte_end":9451577,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451578,"byte_end":9451624,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451625,"byte_end":9451657,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451658,"byte_end":9451661,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451662,"byte_end":9451740,"line_start":358,"line_end":358,"column_start":1,"column_end":79}},{"value":"/             // first time the config is received from the watch, it will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451741,"byte_end":9451817,"line_start":359,"line_end":359,"column_start":1,"column_end":77}},{"value":"/             // always complete immediatedly.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451818,"byte_end":9451866,"line_start":360,"line_end":360,"column_start":1,"column_end":49}},{"value":"/             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451867,"byte_end":9451923,"line_start":361,"line_end":361,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451924,"byte_end":9451927,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451928,"byte_end":9451978,"line_start":363,"line_end":363,"column_start":1,"column_end":51}},{"value":"/             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9451979,"byte_end":9452054,"line_start":364,"line_end":364,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452055,"byte_end":9452058,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452059,"byte_end":9452081,"line_start":366,"line_end":366,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452082,"byte_end":9452118,"line_start":367,"line_end":367,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut delay => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452119,"byte_end":9452162,"line_start":368,"line_end":368,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452163,"byte_end":9452227,"line_start":369,"line_end":369,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452228,"byte_end":9452285,"line_start":370,"line_end":370,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452286,"byte_end":9452289,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452290,"byte_end":9452345,"line_start":372,"line_end":372,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452346,"byte_end":9452400,"line_start":373,"line_end":373,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452401,"byte_end":9452404,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452405,"byte_end":9452455,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452456,"byte_end":9452535,"line_start":376,"line_end":376,"column_start":1,"column_end":80}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452536,"byte_end":9452561,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/                     new_conf = rx.recv() => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452562,"byte_end":9452611,"line_start":378,"line_end":378,"column_start":1,"column_end":50}},{"value":"/                         conf = new_conf.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452612,"byte_end":9452665,"line_start":379,"line_end":379,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452666,"byte_end":9452669,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452670,"byte_end":9452747,"line_start":381,"line_end":381,"column_start":1,"column_end":78}},{"value":"/                         // `delay` using the new `timeout` value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452748,"byte_end":9452817,"line_start":382,"line_end":382,"column_start":1,"column_end":70}},{"value":"/                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452818,"byte_end":9452883,"line_start":383,"line_end":383,"column_start":1,"column_end":66}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452884,"byte_end":9452909,"line_start":384,"line_end":384,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452910,"byte_end":9452950,"line_start":385,"line_end":385,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9452951,"byte_end":9453006,"line_start":386,"line_end":386,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453007,"byte_end":9453041,"line_start":387,"line_end":387,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453042,"byte_end":9453067,"line_start":388,"line_end":388,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453068,"byte_end":9453089,"line_start":389,"line_end":389,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453090,"byte_end":9453107,"line_start":390,"line_end":390,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453108,"byte_end":9453123,"line_start":391,"line_end":391,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453124,"byte_end":9453127,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453128,"byte_end":9453161,"line_start":393,"line_end":393,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453162,"byte_end":9453171,"line_start":394,"line_end":394,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453172,"byte_end":9453175,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453176,"byte_end":9453217,"line_start":396,"line_end":396,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453218,"byte_end":9453252,"line_start":397,"line_end":397,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453253,"byte_end":9453262,"line_start":398,"line_end":398,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453263,"byte_end":9453268,"line_start":399,"line_end":399,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453269,"byte_end":9453276,"line_start":400,"line_end":400,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453277,"byte_end":9453280,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: crate::sync::watch","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453281,"byte_end":9453322,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453323,"byte_end":9453372,"line_start":403,"line_end":403,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453373,"byte_end":9453376,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453377,"byte_end":9453404,"line_start":405,"line_end":405,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453405,"byte_end":9453408,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453409,"byte_end":9453483,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453484,"byte_end":9453558,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453559,"byte_end":9453635,"line_start":409,"line_end":409,"column_start":1,"column_end":77}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453636,"byte_end":9453686,"line_start":410,"line_end":410,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453687,"byte_end":9453690,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453691,"byte_end":9453768,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453769,"byte_end":9453846,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453847,"byte_end":9453850,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453851,"byte_end":9453928,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453929,"byte_end":9453984,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453985,"byte_end":9453988,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9453989,"byte_end":9454068,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454069,"byte_end":9454147,"line_start":419,"line_end":419,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454148,"byte_end":9454173,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454174,"byte_end":9454177,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454178,"byte_end":9454253,"line_start":422,"line_end":422,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454254,"byte_end":9454330,"line_start":423,"line_end":423,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454331,"byte_end":9454398,"line_start":424,"line_end":424,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454399,"byte_end":9454402,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454403,"byte_end":9454479,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454480,"byte_end":9454556,"line_start":427,"line_end":427,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454557,"byte_end":9454631,"line_start":428,"line_end":428,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454632,"byte_end":9454659,"line_start":429,"line_end":429,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7952},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456793,"byte_end":9456800,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455840,"byte_end":9455928,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455929,"byte_end":9455932,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455933,"byte_end":9455940,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455941,"byte_end":9455961,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455962,"byte_end":9455985,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9455986,"byte_end":9456015,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456016,"byte_end":9456019,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456020,"byte_end":9456054,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456055,"byte_end":9456078,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456079,"byte_end":9456082,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456083,"byte_end":9456128,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456129,"byte_end":9456174,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456175,"byte_end":9456195,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456196,"byte_end":9456228,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456229,"byte_end":9456283,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456284,"byte_end":9456329,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456330,"byte_end":9456363,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456364,"byte_end":9456400,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456401,"byte_end":9456437,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456438,"byte_end":9456473,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456474,"byte_end":9456488,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456489,"byte_end":9456500,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456501,"byte_end":9456506,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456507,"byte_end":9456581,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456582,"byte_end":9456620,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456621,"byte_end":9456676,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456677,"byte_end":9456748,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456749,"byte_end":9456756,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9456757,"byte_end":9456764,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457263,"byte_end":9457266,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457023,"byte_end":9457090,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457095,"byte_end":9457098,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457103,"byte_end":9457191,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457196,"byte_end":9457251,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458339,"byte_end":9458343,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457865,"byte_end":9457925,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457930,"byte_end":9457933,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457938,"byte_end":9458014,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458019,"byte_end":9458044,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458049,"byte_end":9458052,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458057,"byte_end":9458150,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458155,"byte_end":9458248,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9458253,"byte_end":9458321,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7964},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460265,"byte_end":9460282,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460129,"byte_end":9460229,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6630},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460530,"byte_end":9460539,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460320,"byte_end":9460387,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460392,"byte_end":9460395,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460400,"byte_end":9460492,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460497,"byte_end":9460518,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6634},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":15299},{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":15305},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":7971},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":7988},{"krate":0,"index":7984},{"krate":0,"index":7985},{"krate":0,"index":7990},{"krate":0,"index":8002},{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":6664},{"krate":0,"index":6670},{"krate":0,"index":6675},{"krate":0,"index":6681},{"krate":0,"index":6686},{"krate":0,"index":6690},{"krate":0,"index":6696},{"krate":0,"index":6700},{"krate":0,"index":6703},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":6718},{"krate":0,"index":6720},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":6733},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6745},{"krate":0,"index":6765},{"krate":0,"index":6770},{"krate":0,"index":6775},{"krate":0,"index":6780},{"krate":0,"index":8004},{"krate":0,"index":8005},{"krate":0,"index":8009},{"krate":0,"index":6785},{"krate":0,"index":6791},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":6803},{"krate":0,"index":6808},{"krate":0,"index":6813},{"krate":0,"index":6815},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6819}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460581,"byte_end":9460661,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460662,"byte_end":9460680,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460681,"byte_end":9460684,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460685,"byte_end":9460763,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460764,"byte_end":9460839,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460840,"byte_end":9460918,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460919,"byte_end":9460973,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460974,"byte_end":9460977,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9460978,"byte_end":9461054,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461055,"byte_end":9461135,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461136,"byte_end":9461213,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461214,"byte_end":9461264,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461265,"byte_end":9461268,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461269,"byte_end":9461347,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461348,"byte_end":9461405,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461406,"byte_end":9461409,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461410,"byte_end":9461488,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461489,"byte_end":9461561,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461562,"byte_end":9461578,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461579,"byte_end":9461582,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461583,"byte_end":9461597,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461598,"byte_end":9461601,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461602,"byte_end":9461682,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461683,"byte_end":9461762,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461763,"byte_end":9461840,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461841,"byte_end":9461919,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461920,"byte_end":9461927,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461928,"byte_end":9461931,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9461932,"byte_end":9462009,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462010,"byte_end":9462085,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462086,"byte_end":9462166,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462167,"byte_end":9462170,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462171,"byte_end":9462243,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462244,"byte_end":9462322,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462323,"byte_end":9462399,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462400,"byte_end":9462459,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462460,"byte_end":9462463,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462464,"byte_end":9462542,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462543,"byte_end":9462617,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462618,"byte_end":9462654,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462655,"byte_end":9462658,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462659,"byte_end":9462738,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462739,"byte_end":9462816,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462817,"byte_end":9462892,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462893,"byte_end":9462924,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462925,"byte_end":9462928,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462929,"byte_end":9462943,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462944,"byte_end":9462947,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9462948,"byte_end":9463023,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463024,"byte_end":9463102,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463103,"byte_end":9463180,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463181,"byte_end":9463212,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463213,"byte_end":9463216,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463217,"byte_end":9463263,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463264,"byte_end":9463332,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463333,"byte_end":9463383,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463384,"byte_end":9463432,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463433,"byte_end":9463501,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463502,"byte_end":9463570,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463571,"byte_end":9463623,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463624,"byte_end":9463627,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463628,"byte_end":9463642,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463643,"byte_end":9463646,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463647,"byte_end":9463662,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463663,"byte_end":9463666,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463667,"byte_end":9463674,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463675,"byte_end":9463706,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463707,"byte_end":9463710,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463711,"byte_end":9463729,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463730,"byte_end":9463751,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463752,"byte_end":9463803,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463804,"byte_end":9463841,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463842,"byte_end":9463845,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463846,"byte_end":9463879,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463880,"byte_end":9463934,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463935,"byte_end":9463989,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9463990,"byte_end":9464001,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464002,"byte_end":9464005,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464006,"byte_end":9464039,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464040,"byte_end":9464094,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464095,"byte_end":9464149,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464150,"byte_end":9464161,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464162,"byte_end":9464165,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464166,"byte_end":9464195,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464196,"byte_end":9464225,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464226,"byte_end":9464231,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464232,"byte_end":9464239,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464240,"byte_end":9464243,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464244,"byte_end":9464260,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464261,"byte_end":9464264,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464265,"byte_end":9464272,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464273,"byte_end":9464304,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464305,"byte_end":9464308,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464309,"byte_end":9464327,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464328,"byte_end":9464349,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464350,"byte_end":9464399,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464400,"byte_end":9464403,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464404,"byte_end":9464433,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464434,"byte_end":9464463,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464464,"byte_end":9464493,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464494,"byte_end":9464497,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464498,"byte_end":9464535,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464536,"byte_end":9464578,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464579,"byte_end":9464582,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464583,"byte_end":9464652,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464653,"byte_end":9464656,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464657,"byte_end":9464706,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464707,"byte_end":9464756,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9464757,"byte_end":9464762,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":6656},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465959,"byte_end":9465965,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6658}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465166,"byte_end":9465212,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465213,"byte_end":9465216,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465217,"byte_end":9465277,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465278,"byte_end":9465305,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465306,"byte_end":9465309,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465310,"byte_end":9465324,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465325,"byte_end":9465328,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465329,"byte_end":9465336,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465337,"byte_end":9465368,"line_start":133,"line_end":133,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465369,"byte_end":9465372,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465373,"byte_end":9465391,"line_start":135,"line_end":135,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465392,"byte_end":9465413,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465414,"byte_end":9465465,"line_start":137,"line_end":137,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465466,"byte_end":9465503,"line_start":138,"line_end":138,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465504,"byte_end":9465507,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465508,"byte_end":9465541,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465542,"byte_end":9465596,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465597,"byte_end":9465651,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465652,"byte_end":9465663,"line_start":143,"line_end":143,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465664,"byte_end":9465667,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465668,"byte_end":9465701,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465702,"byte_end":9465756,"line_start":146,"line_end":146,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465757,"byte_end":9465811,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465812,"byte_end":9465823,"line_start":148,"line_end":148,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465824,"byte_end":9465827,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465828,"byte_end":9465857,"line_start":150,"line_end":150,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465858,"byte_end":9465887,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465888,"byte_end":9465893,"line_start":152,"line_end":152,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465894,"byte_end":9465901,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465902,"byte_end":9465905,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9465906,"byte_end":9465947,"line_start":155,"line_end":155,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6659},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466805,"byte_end":9466813,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466002,"byte_end":9466050,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466051,"byte_end":9466054,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466055,"byte_end":9466121,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466122,"byte_end":9466151,"line_start":163,"line_end":163,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466152,"byte_end":9466155,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466156,"byte_end":9466170,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466171,"byte_end":9466174,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466175,"byte_end":9466182,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466183,"byte_end":9466214,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466215,"byte_end":9466218,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466219,"byte_end":9466237,"line_start":170,"line_end":170,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466238,"byte_end":9466259,"line_start":171,"line_end":171,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466260,"byte_end":9466311,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466312,"byte_end":9466349,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466350,"byte_end":9466353,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466354,"byte_end":9466387,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466388,"byte_end":9466442,"line_start":176,"line_end":176,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466443,"byte_end":9466497,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466498,"byte_end":9466509,"line_start":178,"line_end":178,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466510,"byte_end":9466513,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466514,"byte_end":9466547,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466548,"byte_end":9466602,"line_start":181,"line_end":181,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466603,"byte_end":9466657,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466658,"byte_end":9466669,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466670,"byte_end":9466673,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466674,"byte_end":9466703,"line_start":185,"line_end":185,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466704,"byte_end":9466733,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466734,"byte_end":9466739,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466740,"byte_end":9466747,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466748,"byte_end":9466751,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9466752,"byte_end":9466793,"line_start":190,"line_end":190,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7971},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467356,"byte_end":9467365,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467059,"byte_end":9467112,"line_start":202,"line_end":202,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467113,"byte_end":9467116,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467117,"byte_end":9467189,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467190,"byte_end":9467267,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467268,"byte_end":9467327,"line_start":206,"line_end":206,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7974},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467369,"byte_end":9467374,"line_start":208,"line_end":208,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::broadcast::SendError::0","value":"T","parent":{"krate":0,"index":7971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7979},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467704,"byte_end":9467710,"line_start":218,"line_end":218,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467607,"byte_end":9467682,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467687,"byte_end":9467699,"line_start":217,"line_end":217,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7981},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467916,"byte_end":9467922,"line_start":224,"line_end":224,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":7978},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467717,"byte_end":9467789,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467794,"byte_end":9467854,"line_start":221,"line_end":221,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467859,"byte_end":9467862,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467867,"byte_end":9467911,"line_start":223,"line_end":223,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7978},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467591,"byte_end":9467600,"line_start":215,"line_end":215,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7979},{"krate":0,"index":7981}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467378,"byte_end":9467445,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467446,"byte_end":9467449,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467450,"byte_end":9467502,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467503,"byte_end":9467553,"line_start":213,"line_end":213,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7991},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468309,"byte_end":9468314,"line_start":235,"line_end":235,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468176,"byte_end":9468234,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468239,"byte_end":9468304,"line_start":234,"line_end":234,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7993},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468418,"byte_end":9468424,"line_start":239,"line_end":239,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468321,"byte_end":9468396,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468401,"byte_end":9468413,"line_start":238,"line_end":238,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7995},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468673,"byte_end":9468679,"line_start":246,"line_end":246,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7990},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468431,"byte_end":9468505,"line_start":241,"line_end":241,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468510,"byte_end":9468578,"line_start":242,"line_end":242,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468583,"byte_end":9468611,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468616,"byte_end":9468619,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468624,"byte_end":9468668,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":7990},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468157,"byte_end":9468169,"line_start":232,"line_end":232,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`][Sender] handles, so data may yet become available.\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7993},{"krate":0,"index":7995}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9467932,"byte_end":9468003,"line_start":227,"line_end":227,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468004,"byte_end":9468007,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468008,"byte_end":9468068,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9468069,"byte_end":9468119,"line_start":230,"line_end":230,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":6714},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472980,"byte_end":9472987,"line_start":403,"line_end":403,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471368,"byte_end":9471444,"line_start":358,"line_end":358,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471445,"byte_end":9471494,"line_start":359,"line_end":359,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471495,"byte_end":9471498,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471499,"byte_end":9471568,"line_start":361,"line_end":361,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471569,"byte_end":9471619,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471620,"byte_end":9471623,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471624,"byte_end":9471698,"line_start":364,"line_end":364,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471699,"byte_end":9471774,"line_start":365,"line_end":365,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471775,"byte_end":9471843,"line_start":366,"line_end":366,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471844,"byte_end":9471847,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471848,"byte_end":9471924,"line_start":368,"line_end":368,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471925,"byte_end":9472006,"line_start":369,"line_end":369,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472007,"byte_end":9472046,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472047,"byte_end":9472050,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472051,"byte_end":9472097,"line_start":372,"line_end":372,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472098,"byte_end":9472166,"line_start":373,"line_end":373,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472167,"byte_end":9472217,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472218,"byte_end":9472270,"line_start":375,"line_end":375,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472271,"byte_end":9472323,"line_start":376,"line_end":376,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472324,"byte_end":9472376,"line_start":377,"line_end":377,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472377,"byte_end":9472380,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472381,"byte_end":9472395,"line_start":379,"line_end":379,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472396,"byte_end":9472399,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472400,"byte_end":9472407,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472408,"byte_end":9472439,"line_start":382,"line_end":382,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472440,"byte_end":9472443,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472444,"byte_end":9472462,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472463,"byte_end":9472484,"line_start":385,"line_end":385,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472485,"byte_end":9472536,"line_start":386,"line_end":386,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472537,"byte_end":9472574,"line_start":387,"line_end":387,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472575,"byte_end":9472578,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472579,"byte_end":9472612,"line_start":389,"line_end":389,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472613,"byte_end":9472667,"line_start":390,"line_end":390,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472668,"byte_end":9472722,"line_start":391,"line_end":391,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472723,"byte_end":9472734,"line_start":392,"line_end":392,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472735,"byte_end":9472738,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472739,"byte_end":9472772,"line_start":394,"line_end":394,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472773,"byte_end":9472827,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472828,"byte_end":9472882,"line_start":396,"line_end":396,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472883,"byte_end":9472894,"line_start":397,"line_end":397,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472895,"byte_end":9472898,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472899,"byte_end":9472928,"line_start":399,"line_end":399,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472929,"byte_end":9472958,"line_start":400,"line_end":400,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472959,"byte_end":9472964,"line_start":401,"line_end":401,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9472965,"byte_end":9472972,"line_start":402,"line_end":402,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476054,"byte_end":9476058,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474204,"byte_end":9474278,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474283,"byte_end":9474319,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474324,"byte_end":9474327,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474332,"byte_end":9474407,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474412,"byte_end":9474478,"line_start":455,"line_end":455,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474483,"byte_end":9474534,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474539,"byte_end":9474542,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474547,"byte_end":9474559,"line_start":458,"line_end":458,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474564,"byte_end":9474567,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474572,"byte_end":9474646,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474651,"byte_end":9474727,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474732,"byte_end":9474785,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474790,"byte_end":9474793,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474798,"byte_end":9474808,"line_start":464,"line_end":464,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474813,"byte_end":9474816,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474821,"byte_end":9474893,"line_start":466,"line_end":466,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474898,"byte_end":9474973,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474978,"byte_end":9475039,"line_start":468,"line_end":468,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475044,"byte_end":9475047,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475052,"byte_end":9475125,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475130,"byte_end":9475195,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475200,"byte_end":9475218,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475223,"byte_end":9475226,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475231,"byte_end":9475281,"line_start":474,"line_end":474,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475286,"byte_end":9475346,"line_start":475,"line_end":475,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475351,"byte_end":9475354,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475359,"byte_end":9475373,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475378,"byte_end":9475381,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475386,"byte_end":9475393,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475398,"byte_end":9475429,"line_start":480,"line_end":480,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475434,"byte_end":9475437,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475442,"byte_end":9475460,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475465,"byte_end":9475486,"line_start":483,"line_end":483,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475491,"byte_end":9475542,"line_start":484,"line_end":484,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475547,"byte_end":9475584,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475589,"byte_end":9475592,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475597,"byte_end":9475630,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475635,"byte_end":9475689,"line_start":488,"line_end":488,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475694,"byte_end":9475748,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475753,"byte_end":9475764,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475769,"byte_end":9475772,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475777,"byte_end":9475810,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475815,"byte_end":9475869,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475874,"byte_end":9475928,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475933,"byte_end":9475944,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475949,"byte_end":9475952,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475957,"byte_end":9475986,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9475991,"byte_end":9476020,"line_start":498,"line_end":498,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476025,"byte_end":9476030,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476035,"byte_end":9476042,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6728},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476818,"byte_end":9476827,"line_start":529,"line_end":529,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476223,"byte_end":9476300,"line_start":506,"line_end":506,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476305,"byte_end":9476334,"line_start":507,"line_end":507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476339,"byte_end":9476342,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476347,"byte_end":9476361,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476366,"byte_end":9476369,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476374,"byte_end":9476381,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476386,"byte_end":9476417,"line_start":512,"line_end":512,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476422,"byte_end":9476425,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476430,"byte_end":9476448,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476453,"byte_end":9476474,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476479,"byte_end":9476526,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476531,"byte_end":9476534,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476539,"byte_end":9476566,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476571,"byte_end":9476600,"line_start":519,"line_end":519,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476605,"byte_end":9476608,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476613,"byte_end":9476649,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476654,"byte_end":9476657,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476662,"byte_end":9476691,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476696,"byte_end":9476699,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476704,"byte_end":9476749,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476754,"byte_end":9476784,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476789,"byte_end":9476794,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9476799,"byte_end":9476806,"line_start":528,"line_end":528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6729},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478414,"byte_end":9478428,"line_start":586,"line_end":586,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477262,"byte_end":9477304,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477309,"byte_end":9477312,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477317,"byte_end":9477393,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477398,"byte_end":9477471,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477476,"byte_end":9477496,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477501,"byte_end":9477504,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477509,"byte_end":9477519,"line_start":556,"line_end":556,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477524,"byte_end":9477527,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477532,"byte_end":9477602,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477607,"byte_end":9477675,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477680,"byte_end":9477693,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477698,"byte_end":9477701,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477706,"byte_end":9477758,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477763,"byte_end":9477813,"line_start":563,"line_end":563,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477818,"byte_end":9477864,"line_start":564,"line_end":564,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477869,"byte_end":9477929,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477934,"byte_end":9477982,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477987,"byte_end":9477990,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9477995,"byte_end":9478009,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478014,"byte_end":9478017,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478022,"byte_end":9478029,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478034,"byte_end":9478065,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478070,"byte_end":9478073,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478078,"byte_end":9478096,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478101,"byte_end":9478122,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478127,"byte_end":9478175,"line_start":575,"line_end":575,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478180,"byte_end":9478183,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478188,"byte_end":9478231,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478236,"byte_end":9478239,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478244,"byte_end":9478282,"line_start":579,"line_end":579,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478287,"byte_end":9478290,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478295,"byte_end":9478338,"line_start":581,"line_end":581,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478343,"byte_end":9478346,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478351,"byte_end":9478380,"line_start":583,"line_end":583,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478385,"byte_end":9478390,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9478395,"byte_end":9478402,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487077,"byte_end":9487085,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485483,"byte_end":9485556,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485561,"byte_end":9485564,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485569,"byte_end":9485641,"line_start":793,"line_end":793,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485646,"byte_end":9485670,"line_start":794,"line_end":794,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485675,"byte_end":9485678,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485683,"byte_end":9485763,"line_start":796,"line_end":796,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485768,"byte_end":9485842,"line_start":797,"line_end":797,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485847,"byte_end":9485850,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485855,"byte_end":9485928,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485933,"byte_end":9486007,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486012,"byte_end":9486015,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486020,"byte_end":9486096,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486101,"byte_end":9486177,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486182,"byte_end":9486253,"line_start":804,"line_end":804,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486258,"byte_end":9486331,"line_start":805,"line_end":805,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486336,"byte_end":9486409,"line_start":806,"line_end":806,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486414,"byte_end":9486485,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486490,"byte_end":9486542,"line_start":808,"line_end":808,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486547,"byte_end":9486550,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486555,"byte_end":9486607,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486612,"byte_end":9486662,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486667,"byte_end":9486670,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486675,"byte_end":9486689,"line_start":813,"line_end":813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486694,"byte_end":9486697,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486702,"byte_end":9486709,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486714,"byte_end":9486745,"line_start":816,"line_end":816,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486750,"byte_end":9486753,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486758,"byte_end":9486776,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486781,"byte_end":9486802,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486807,"byte_end":9486857,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486862,"byte_end":9486865,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486870,"byte_end":9486910,"line_start":822,"line_end":822,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486915,"byte_end":9486918,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486923,"byte_end":9486952,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486957,"byte_end":9486960,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9486965,"byte_end":9487008,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487013,"byte_end":9487043,"line_start":827,"line_end":827,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487048,"byte_end":9487053,"line_start":828,"line_end":828,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487058,"byte_end":9487065,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487327,"byte_end":9487336,"line_start":837,"line_end":837,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.2.21\", note = \"use async fn recv()\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9487254,"byte_end":9487315,"line_start":836,"line_end":836,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6762},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491367,"byte_end":9491371,"line_start":951,"line_end":951,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489151,"byte_end":9489197,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489202,"byte_end":9489205,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489210,"byte_end":9489278,"line_start":889,"line_end":889,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489283,"byte_end":9489315,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489320,"byte_end":9489323,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489328,"byte_end":9489398,"line_start":892,"line_end":892,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489403,"byte_end":9489477,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489482,"byte_end":9489485,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489490,"byte_end":9489566,"line_start":895,"line_end":895,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489571,"byte_end":9489647,"line_start":896,"line_end":896,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489652,"byte_end":9489720,"line_start":897,"line_end":897,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489725,"byte_end":9489798,"line_start":898,"line_end":898,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489803,"byte_end":9489872,"line_start":899,"line_end":899,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489877,"byte_end":9489922,"line_start":900,"line_end":900,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489927,"byte_end":9489930,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489935,"byte_end":9489985,"line_start":902,"line_end":902,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9489990,"byte_end":9490042,"line_start":903,"line_end":903,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490047,"byte_end":9490050,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490055,"byte_end":9490069,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490074,"byte_end":9490077,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490082,"byte_end":9490089,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490094,"byte_end":9490125,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490130,"byte_end":9490133,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490138,"byte_end":9490156,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490161,"byte_end":9490182,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490187,"byte_end":9490238,"line_start":912,"line_end":912,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490243,"byte_end":9490280,"line_start":913,"line_end":913,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490285,"byte_end":9490288,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490293,"byte_end":9490326,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490331,"byte_end":9490385,"line_start":916,"line_end":916,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490390,"byte_end":9490444,"line_start":917,"line_end":917,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490449,"byte_end":9490460,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490465,"byte_end":9490468,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490473,"byte_end":9490506,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490511,"byte_end":9490565,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490570,"byte_end":9490624,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490629,"byte_end":9490640,"line_start":923,"line_end":923,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490645,"byte_end":9490648,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490653,"byte_end":9490682,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490687,"byte_end":9490716,"line_start":926,"line_end":926,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490721,"byte_end":9490726,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490731,"byte_end":9490738,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490743,"byte_end":9490746,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490751,"byte_end":9490767,"line_start":930,"line_end":930,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490772,"byte_end":9490775,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490780,"byte_end":9490787,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490792,"byte_end":9490823,"line_start":933,"line_end":933,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490828,"byte_end":9490831,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490836,"byte_end":9490854,"line_start":935,"line_end":935,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490859,"byte_end":9490880,"line_start":936,"line_end":936,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490885,"byte_end":9490934,"line_start":937,"line_end":937,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490939,"byte_end":9490942,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490947,"byte_end":9490976,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9490981,"byte_end":9491010,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491015,"byte_end":9491044,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491049,"byte_end":9491052,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491057,"byte_end":9491094,"line_start":943,"line_end":943,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491099,"byte_end":9491141,"line_start":944,"line_end":944,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491146,"byte_end":9491149,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491154,"byte_end":9491223,"line_start":946,"line_end":946,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491228,"byte_end":9491231,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491236,"byte_end":9491285,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491290,"byte_end":9491339,"line_start":949,"line_end":949,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491344,"byte_end":9491349,"line_start":950,"line_end":950,"column_start":5,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9496025,"byte_end":9496036,"line_start":1110,"line_end":1110,"column_start":16,"column_end":27},"name":"into_stream","qualname":"<Receiver<T>>::into_stream","value":"pub fn into_stream(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convert the receiver into a `Stream`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6821},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":6822},{"krate":0,"index":6895},{"krate":0,"index":6955},{"krate":0,"index":6956},{"krate":0,"index":6957},{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":7123},{"krate":0,"index":7169},{"krate":0,"index":7216},{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7247}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499690,"byte_end":9499759,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499760,"byte_end":9499783,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499784,"byte_end":9499787,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499788,"byte_end":9499863,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499864,"byte_end":9499942,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9499943,"byte_end":9500023,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ notified when a new value is sent. If the channel is at capacity, the send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500024,"byte_end":9500102,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ is rejected and the task will be notified when additional capacity is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500103,"byte_end":9500176,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ available. In other words, the channel provides backpressure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500177,"byte_end":9500242,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500243,"byte_end":9500246,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500247,"byte_end":9500327,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500328,"byte_end":9500406,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500407,"byte_end":9500483,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500484,"byte_end":9500563,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method never does any kind of sleeping.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500564,"byte_end":9500643,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500644,"byte_end":9500715,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500716,"byte_end":9500738,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500739,"byte_end":9500742,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500743,"byte_end":9500762,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500763,"byte_end":9500766,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500767,"byte_end":9500833,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500834,"byte_end":9500914,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500915,"byte_end":9500992,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500993,"byte_end":9500996,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9500997,"byte_end":9501067,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501068,"byte_end":9501147,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501148,"byte_end":9501171,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501172,"byte_end":9501175,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501176,"byte_end":9501196,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501197,"byte_end":9501200,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501201,"byte_end":9501281,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501282,"byte_end":9501362,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501363,"byte_end":9501441,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501442,"byte_end":9501514,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501515,"byte_end":9501589,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501590,"byte_end":9501602,"line_start":38,"line_end":38,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501603,"byte_end":9501606,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501607,"byte_end":9501654,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501655,"byte_end":9501658,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501659,"byte_end":9501740,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501741,"byte_end":9501776,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501777,"byte_end":9501780,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501781,"byte_end":9501861,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. To call the async","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501862,"byte_end":9501942,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ [`send`][bounded-send] or [`recv`][bounded-recv] methods in sync code, you","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9501943,"byte_end":9502021,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ will need to use [`Handle::block_on`], which allow you to execute an async","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502022,"byte_end":9502100,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ method in synchronous code. This is necessary because a bounded channel may","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502101,"byte_end":9502180,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ need to wait for additional capacity to become available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502181,"byte_end":9502242,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502243,"byte_end":9502246,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502247,"byte_end":9502327,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502328,"byte_end":9502406,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502407,"byte_end":9502473,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502474,"byte_end":9502556,"line_start":55,"line_end":55,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502557,"byte_end":9502621,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502622,"byte_end":9502625,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502626,"byte_end":9502667,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502668,"byte_end":9502713,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502714,"byte_end":9502767,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502768,"byte_end":9502823,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502824,"byte_end":9502883,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502884,"byte_end":9502944,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502945,"byte_end":9502990,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9502991,"byte_end":9503081,"line_start":65,"line_end":65,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":6907},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9516946,"byte_end":9516952,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6909}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9516821,"byte_end":9516866,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9516867,"byte_end":9516870,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9516871,"byte_end":9516934,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":6916},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517461,"byte_end":9517469,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6918}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517333,"byte_end":9517381,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517382,"byte_end":9517385,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517386,"byte_end":9517449,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6922},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518857,"byte_end":9518864,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517750,"byte_end":9517830,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517831,"byte_end":9517872,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517873,"byte_end":9517876,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517877,"byte_end":9517954,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517955,"byte_end":9517980,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517981,"byte_end":9517984,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517985,"byte_end":9518064,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518065,"byte_end":9518113,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518114,"byte_end":9518117,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518118,"byte_end":9518197,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518198,"byte_end":9518273,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518274,"byte_end":9518340,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518341,"byte_end":9518344,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518345,"byte_end":9518359,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518360,"byte_end":9518363,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518364,"byte_end":9518375,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518376,"byte_end":9518402,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518403,"byte_end":9518406,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518407,"byte_end":9518425,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518426,"byte_end":9518447,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518448,"byte_end":9518498,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518499,"byte_end":9518502,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518503,"byte_end":9518536,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518537,"byte_end":9518565,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518566,"byte_end":9518616,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518617,"byte_end":9518666,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518667,"byte_end":9518694,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518695,"byte_end":9518712,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518713,"byte_end":9518726,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518727,"byte_end":9518738,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518739,"byte_end":9518742,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518743,"byte_end":9518788,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518789,"byte_end":9518825,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518826,"byte_end":9518835,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518836,"byte_end":9518841,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9518842,"byte_end":9518849,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6928},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520546,"byte_end":9520550,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519464,"byte_end":9519510,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519515,"byte_end":9519518,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519523,"byte_end":9519595,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519600,"byte_end":9519654,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519659,"byte_end":9519662,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519667,"byte_end":9519681,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519686,"byte_end":9519689,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519694,"byte_end":9519701,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519706,"byte_end":9519732,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519737,"byte_end":9519740,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519745,"byte_end":9519763,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519768,"byte_end":9519789,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519794,"byte_end":9519844,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519849,"byte_end":9519852,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519857,"byte_end":9519890,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519895,"byte_end":9519939,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519944,"byte_end":9519955,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519960,"byte_end":9519963,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519968,"byte_end":9520019,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520024,"byte_end":9520066,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520071,"byte_end":9520076,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520081,"byte_end":9520088,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520093,"byte_end":9520096,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520101,"byte_end":9520125,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520130,"byte_end":9520133,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520138,"byte_end":9520145,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520150,"byte_end":9520176,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520181,"byte_end":9520184,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520189,"byte_end":9520207,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520212,"byte_end":9520233,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520238,"byte_end":9520288,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520293,"byte_end":9520296,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520301,"byte_end":9520341,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520346,"byte_end":9520386,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520391,"byte_end":9520394,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520399,"byte_end":9520450,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520455,"byte_end":9520506,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520511,"byte_end":9520516,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520521,"byte_end":9520528,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6933},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520716,"byte_end":9520725,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6934},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521381,"byte_end":9521389,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520818,"byte_end":9520891,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520896,"byte_end":9520899,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520904,"byte_end":9520976,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9520981,"byte_end":9521052,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521057,"byte_end":9521110,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521115,"byte_end":9521118,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521123,"byte_end":9521195,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521200,"byte_end":9521224,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521229,"byte_end":9521232,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521237,"byte_end":9521307,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521312,"byte_end":9521369,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6935},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521707,"byte_end":9521712,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521470,"byte_end":9521534,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521539,"byte_end":9521542,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521547,"byte_end":9521622,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521627,"byte_end":9521695,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523802,"byte_end":9523806,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ mut Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522158,"byte_end":9522209,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522214,"byte_end":9522217,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522222,"byte_end":9522298,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522303,"byte_end":9522379,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522384,"byte_end":9522458,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522463,"byte_end":9522538,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522543,"byte_end":9522612,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522617,"byte_end":9522689,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522694,"byte_end":9522725,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522730,"byte_end":9522733,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522738,"byte_end":9522750,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522755,"byte_end":9522758,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522763,"byte_end":9522836,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522841,"byte_end":9522915,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522920,"byte_end":9522980,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522985,"byte_end":9522988,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522993,"byte_end":9523023,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523028,"byte_end":9523054,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523059,"byte_end":9523062,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523067,"byte_end":9523081,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523086,"byte_end":9523089,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523094,"byte_end":9523164,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523169,"byte_end":9523208,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523213,"byte_end":9523216,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523221,"byte_end":9523232,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523237,"byte_end":9523263,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523268,"byte_end":9523271,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523276,"byte_end":9523294,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523299,"byte_end":9523320,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523325,"byte_end":9523373,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523378,"byte_end":9523381,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523386,"byte_end":9523419,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523424,"byte_end":9523452,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523457,"byte_end":9523507,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523512,"byte_end":9523561,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523566,"byte_end":9523593,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523598,"byte_end":9523615,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523620,"byte_end":9523633,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523638,"byte_end":9523649,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523654,"byte_end":9523657,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523662,"byte_end":9523707,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523712,"byte_end":9523748,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523753,"byte_end":9523762,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523767,"byte_end":9523772,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9523777,"byte_end":9523784,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6946},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526539,"byte_end":9526547,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524227,"byte_end":9524286,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524291,"byte_end":9524294,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524299,"byte_end":9524378,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524383,"byte_end":9524458,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524463,"byte_end":9524541,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524546,"byte_end":9524588,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524593,"byte_end":9524596,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524601,"byte_end":9524673,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524678,"byte_end":9524729,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524734,"byte_end":9524737,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524742,"byte_end":9524754,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524759,"byte_end":9524762,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524767,"byte_end":9524838,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524843,"byte_end":9524919,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524924,"byte_end":9524946,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524951,"byte_end":9524954,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9524959,"byte_end":9525032,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525037,"byte_end":9525111,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525116,"byte_end":9525176,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525181,"byte_end":9525184,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525189,"byte_end":9525215,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525220,"byte_end":9525258,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525263,"byte_end":9525287,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525292,"byte_end":9525322,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525327,"byte_end":9525330,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525335,"byte_end":9525349,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525354,"byte_end":9525357,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525362,"byte_end":9525369,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525374,"byte_end":9525400,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525405,"byte_end":9525408,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525413,"byte_end":9525431,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525436,"byte_end":9525457,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525462,"byte_end":9525508,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525513,"byte_end":9525562,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525567,"byte_end":9525601,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525606,"byte_end":9525609,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525614,"byte_end":9525647,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525652,"byte_end":9525691,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525696,"byte_end":9525735,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525740,"byte_end":9525802,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525807,"byte_end":9525818,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525823,"byte_end":9525826,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525831,"byte_end":9525864,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525869,"byte_end":9525918,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525923,"byte_end":9525970,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9525975,"byte_end":9526011,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526016,"byte_end":9526027,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526032,"byte_end":9526035,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526040,"byte_end":9526060,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526065,"byte_end":9526104,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526109,"byte_end":9526154,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526159,"byte_end":9526162,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526167,"byte_end":9526206,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526211,"byte_end":9526256,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526261,"byte_end":9526264,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526269,"byte_end":9526318,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526323,"byte_end":9526354,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526359,"byte_end":9526421,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526426,"byte_end":9526491,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526496,"byte_end":9526505,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526510,"byte_end":9526515,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526520,"byte_end":9526527,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6947},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528364,"byte_end":9528376,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ mut Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526668,"byte_end":9526748,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526753,"byte_end":9526756,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526761,"byte_end":9526838,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526843,"byte_end":9526921,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526926,"byte_end":9526974,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526979,"byte_end":9526982,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9526987,"byte_end":9527013,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527018,"byte_end":9527021,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527026,"byte_end":9527038,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527043,"byte_end":9527046,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527051,"byte_end":9527124,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527129,"byte_end":9527186,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527191,"byte_end":9527272,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527277,"byte_end":9527280,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527285,"byte_end":9527315,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527320,"byte_end":9527346,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527351,"byte_end":9527354,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527359,"byte_end":9527373,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527378,"byte_end":9527381,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527386,"byte_end":9527464,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527469,"byte_end":9527540,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527545,"byte_end":9527548,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527553,"byte_end":9527564,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527569,"byte_end":9527595,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527600,"byte_end":9527643,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527648,"byte_end":9527651,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527656,"byte_end":9527674,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527679,"byte_end":9527700,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527705,"byte_end":9527753,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527758,"byte_end":9527761,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527766,"byte_end":9527799,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527804,"byte_end":9527832,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527837,"byte_end":9527923,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527928,"byte_end":9527981,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9527986,"byte_end":9528013,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528018,"byte_end":9528035,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528040,"byte_end":9528053,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528058,"byte_end":9528069,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528074,"byte_end":9528077,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528082,"byte_end":9528127,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528132,"byte_end":9528168,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528173,"byte_end":9528229,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528234,"byte_end":9528243,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528248,"byte_end":9528253,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528258,"byte_end":9528265,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9528270,"byte_end":9528294,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":6952},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530160,"byte_end":9530170,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529079,"byte_end":9529161,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529166,"byte_end":9529169,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529174,"byte_end":9529266,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529271,"byte_end":9529298,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529303,"byte_end":9529306,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529311,"byte_end":9529404,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529409,"byte_end":9529504,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529509,"byte_end":9529602,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529607,"byte_end":9529702,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529707,"byte_end":9529754,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529759,"byte_end":9529762,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529767,"byte_end":9529861,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529866,"byte_end":9529934,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529939,"byte_end":9529942,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9529947,"byte_end":9530031,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530036,"byte_end":9530129,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530134,"byte_end":9530148,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6954},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532726,"byte_end":9532732,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"pub fn disarm(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530315,"byte_end":9530358,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530363,"byte_end":9530366,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530371,"byte_end":9530461,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530466,"byte_end":9530559,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530564,"byte_end":9530655,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530660,"byte_end":9530748,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530753,"byte_end":9530756,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530761,"byte_end":9530853,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530858,"byte_end":9530905,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530910,"byte_end":9530913,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530918,"byte_end":9530934,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530939,"byte_end":9530942,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9530947,"byte_end":9531042,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531047,"byte_end":9531141,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531146,"byte_end":9531240,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531245,"byte_end":9531319,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531324,"byte_end":9531327,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531332,"byte_end":9531350,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531355,"byte_end":9531365,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531370,"byte_end":9531403,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531408,"byte_end":9531460,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531465,"byte_end":9531492,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531497,"byte_end":9531511,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531516,"byte_end":9531530,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531535,"byte_end":9531542,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531547,"byte_end":9531552,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531557,"byte_end":9531564,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531569,"byte_end":9531572,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531577,"byte_end":9531670,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531675,"byte_end":9531770,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531775,"byte_end":9531861,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531866,"byte_end":9531961,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9531966,"byte_end":9532030,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532035,"byte_end":9532038,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532043,"byte_end":9532137,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532142,"byte_end":9532207,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532212,"byte_end":9532215,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532220,"byte_end":9532238,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532243,"byte_end":9532253,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532258,"byte_end":9532291,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532296,"byte_end":9532330,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532335,"byte_end":9532375,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532380,"byte_end":9532442,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532447,"byte_end":9532461,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532466,"byte_end":9532528,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532533,"byte_end":9532553,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532558,"byte_end":9532565,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532570,"byte_end":9532610,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532615,"byte_end":9532642,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532647,"byte_end":9532661,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532666,"byte_end":9532680,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532685,"byte_end":9532692,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532697,"byte_end":9532702,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9532707,"byte_end":9532714,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":7005},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9534724,"byte_end":9534730,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":7004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7179},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558327,"byte_end":9558342,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7181}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558169,"byte_end":9558223,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558224,"byte_end":9558227,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558228,"byte_end":9558260,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558261,"byte_end":9558315,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7188},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558920,"byte_end":9558937,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7190}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558759,"byte_end":9558816,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558817,"byte_end":9558820,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558821,"byte_end":9558853,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558854,"byte_end":9558908,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7194},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559748,"byte_end":9559765,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559236,"byte_end":9559312,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559313,"byte_end":9559323,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559324,"byte_end":9559327,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559328,"byte_end":9559408,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559409,"byte_end":9559488,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559489,"byte_end":9559502,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559503,"byte_end":9559506,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559507,"byte_end":9559586,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559587,"byte_end":9559663,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559664,"byte_end":9559740,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7200},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560213,"byte_end":9560222,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7201},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561385,"byte_end":9561389,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560315,"byte_end":9560361,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560366,"byte_end":9560369,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560374,"byte_end":9560446,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560451,"byte_end":9560505,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560510,"byte_end":9560513,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560518,"byte_end":9560532,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560537,"byte_end":9560540,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560545,"byte_end":9560552,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560557,"byte_end":9560583,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560588,"byte_end":9560591,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560596,"byte_end":9560614,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560619,"byte_end":9560640,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560645,"byte_end":9560698,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560703,"byte_end":9560706,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560711,"byte_end":9560744,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560749,"byte_end":9560787,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560792,"byte_end":9560803,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560808,"byte_end":9560811,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560816,"byte_end":9560867,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560872,"byte_end":9560914,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560919,"byte_end":9560924,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560929,"byte_end":9560936,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560941,"byte_end":9560944,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560949,"byte_end":9560973,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560978,"byte_end":9560981,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560986,"byte_end":9560993,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560998,"byte_end":9561024,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561029,"byte_end":9561032,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561037,"byte_end":9561055,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561060,"byte_end":9561081,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561086,"byte_end":9561139,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561144,"byte_end":9561147,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561152,"byte_end":9561186,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561191,"byte_end":9561225,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561230,"byte_end":9561233,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561238,"byte_end":9561289,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561294,"byte_end":9561345,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561350,"byte_end":9561355,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561360,"byte_end":9561367,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7206},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562074,"byte_end":9562082,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561511,"byte_end":9561584,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561589,"byte_end":9561592,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561597,"byte_end":9561669,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561674,"byte_end":9561745,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561750,"byte_end":9561803,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561808,"byte_end":9561811,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561816,"byte_end":9561888,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561893,"byte_end":9561917,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561922,"byte_end":9561925,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9561930,"byte_end":9562000,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562005,"byte_end":9562062,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562400,"byte_end":9562405,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562163,"byte_end":9562227,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562232,"byte_end":9562235,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562240,"byte_end":9562315,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562320,"byte_end":9562388,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7215},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563528,"byte_end":9563532,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562840,"byte_end":9562914,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562919,"byte_end":9562922,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562927,"byte_end":9563012,"line_start":166,"line_end":166,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563017,"byte_end":9563098,"line_start":167,"line_end":167,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563103,"byte_end":9563171,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563176,"byte_end":9563179,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563184,"byte_end":9563257,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563262,"byte_end":9563333,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563338,"byte_end":9563415,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563420,"byte_end":9563423,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563428,"byte_end":9563467,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9563472,"byte_end":9563516,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":7220},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":8035},{"krate":0,"index":8039},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":8042},{"krate":0,"index":8050},{"krate":0,"index":7228},{"krate":0,"index":7230},{"krate":0,"index":7233},{"krate":0,"index":8053},{"krate":0,"index":8056},{"krate":0,"index":7236},{"krate":0,"index":7238},{"krate":0,"index":8058},{"krate":0,"index":8066},{"krate":0,"index":8063},{"krate":0,"index":8064},{"krate":0,"index":7239},{"krate":0,"index":7241},{"krate":0,"index":8068},{"krate":0,"index":8071},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":7246},{"krate":0,"index":8078},{"krate":0,"index":8086},{"krate":0,"index":8073},{"krate":0,"index":8075}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563650,"byte_end":9563673,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8035},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563777,"byte_end":9563786,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563713,"byte_end":9563748,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":8038},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563790,"byte_end":9563795,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":8035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8044},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564339,"byte_end":9564343,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564207,"byte_end":9564275,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564280,"byte_end":9564334,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8047},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564444,"byte_end":9564450,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":8042},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564353,"byte_end":9564422,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564427,"byte_end":9564439,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8042},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564185,"byte_end":9564197,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8047}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564039,"byte_end":9564110,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564111,"byte_end":9564158,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565088,"byte_end":9565097,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565026,"byte_end":9565059,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8059},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565602,"byte_end":9565607,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565474,"byte_end":9565541,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565546,"byte_end":9565597,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8061},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565727,"byte_end":9565733,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8058},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565613,"byte_end":9565675,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565680,"byte_end":9565722,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":8058},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565455,"byte_end":9565467,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// This channel is currently empty, but the Sender(s) have not yet\n    /// disconnected, so data may yet become available.\n    Empty,\n\n    /// The channel's sending half has been closed, and there will\n    /// never be any more data received on it.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8059},{"krate":0,"index":8061}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565308,"byte_end":9565378,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565379,"byte_end":9565417,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":8068},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566224,"byte_end":9566235,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566123,"byte_end":9566195,"line_start":99,"line_end":99,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8080},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566841,"byte_end":9566848,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8083},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566961,"byte_end":9566967,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8078},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566679,"byte_end":9566695,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":8080},{"krate":0,"index":8083}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571898,"byte_end":9571903,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8091},{"krate":0,"index":8092}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567628,"byte_end":9567666,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567667,"byte_end":9567670,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567671,"byte_end":9567749,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567750,"byte_end":9567826,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567827,"byte_end":9567851,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567852,"byte_end":9567855,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567856,"byte_end":9567897,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567898,"byte_end":9567901,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567902,"byte_end":9567982,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9567983,"byte_end":9568062,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568063,"byte_end":9568126,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568127,"byte_end":9568130,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568131,"byte_end":9568210,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568211,"byte_end":9568291,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568292,"byte_end":9568370,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568371,"byte_end":9568450,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568451,"byte_end":9568529,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568530,"byte_end":9568610,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568611,"byte_end":9568624,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568625,"byte_end":9568628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568629,"byte_end":9568708,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568709,"byte_end":9568785,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568786,"byte_end":9568863,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568864,"byte_end":9568897,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568898,"byte_end":9568901,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568902,"byte_end":9568977,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9568978,"byte_end":9569056,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569057,"byte_end":9569099,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569100,"byte_end":9569103,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569104,"byte_end":9569131,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569132,"byte_end":9569180,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569181,"byte_end":9569259,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569260,"byte_end":9569263,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569264,"byte_end":9569279,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569280,"byte_end":9569283,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569284,"byte_end":9569302,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569303,"byte_end":9569330,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569331,"byte_end":9569354,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569355,"byte_end":9569358,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569359,"byte_end":9569377,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569378,"byte_end":9569399,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569400,"byte_end":9569444,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569445,"byte_end":9569484,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569485,"byte_end":9569488,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569489,"byte_end":9569522,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569523,"byte_end":9569569,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569570,"byte_end":9569593,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569594,"byte_end":9569605,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569606,"byte_end":9569609,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569610,"byte_end":9569652,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569653,"byte_end":9569672,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569673,"byte_end":9569678,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569679,"byte_end":9569686,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569687,"byte_end":9569690,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569691,"byte_end":9569694,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569695,"byte_end":9569713,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569714,"byte_end":9569741,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569742,"byte_end":9569765,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569766,"byte_end":9569769,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569770,"byte_end":9569788,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569789,"byte_end":9569810,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569811,"byte_end":9569855,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569856,"byte_end":9569859,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569860,"byte_end":9569883,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569884,"byte_end":9569930,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569931,"byte_end":9569968,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9569969,"byte_end":9570001,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570002,"byte_end":9570059,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570060,"byte_end":9570091,"line_start":77,"line_end":77,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570092,"byte_end":9570133,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570134,"byte_end":9570151,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570152,"byte_end":9570167,"line_start":80,"line_end":80,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570168,"byte_end":9570177,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570178,"byte_end":9570181,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570182,"byte_end":9570196,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570197,"byte_end":9570239,"line_start":84,"line_end":84,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570240,"byte_end":9570262,"line_start":85,"line_end":85,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570263,"byte_end":9570276,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570277,"byte_end":9570286,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570287,"byte_end":9570321,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570322,"byte_end":9570327,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570328,"byte_end":9570335,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570336,"byte_end":9570412,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570413,"byte_end":9570486,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570487,"byte_end":9570502,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570503,"byte_end":9570578,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570579,"byte_end":9570655,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570656,"byte_end":9570708,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570709,"byte_end":9570712,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570713,"byte_end":9570791,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570792,"byte_end":9570872,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570873,"byte_end":9570949,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9570950,"byte_end":9571027,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571028,"byte_end":9571106,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571107,"byte_end":9571187,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571188,"byte_end":9571268,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571269,"byte_end":9571338,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571339,"byte_end":9571342,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571343,"byte_end":9571422,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571423,"byte_end":9571502,"line_start":108,"line_end":108,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571503,"byte_end":9571581,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571582,"byte_end":9571643,"line_start":110,"line_end":110,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571644,"byte_end":9571647,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571648,"byte_end":9571675,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571676,"byte_end":9571713,"line_start":113,"line_end":113,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571714,"byte_end":9571748,"line_start":114,"line_end":114,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571749,"byte_end":9571798,"line_start":115,"line_end":115,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571799,"byte_end":9571836,"line_start":116,"line_end":116,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571837,"byte_end":9571869,"line_start":117,"line_end":117,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7257},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572332,"byte_end":9572342,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7260}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9571971,"byte_end":9572002,"line_start":124,"line_end":124,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572003,"byte_end":9572006,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572007,"byte_end":9572086,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572087,"byte_end":9572162,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572163,"byte_end":9572196,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572197,"byte_end":9572200,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572201,"byte_end":9572279,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572280,"byte_end":9572320,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7261},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573129,"byte_end":9573144,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7263}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572387,"byte_end":9572425,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572426,"byte_end":9572429,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572430,"byte_end":9572511,"line_start":138,"line_end":138,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572512,"byte_end":9572592,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572593,"byte_end":9572667,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572668,"byte_end":9572729,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572730,"byte_end":9572733,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572734,"byte_end":9572813,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572814,"byte_end":9572892,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572893,"byte_end":9572961,"line_start":145,"line_end":145,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572962,"byte_end":9572965,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9572966,"byte_end":9573044,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573045,"byte_end":9573085,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573086,"byte_end":9573089,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573090,"byte_end":9573117,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573852,"byte_end":9573864,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573644,"byte_end":9573701,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573702,"byte_end":9573705,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573706,"byte_end":9573778,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573779,"byte_end":9573782,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573783,"byte_end":9573823,"line_start":167,"line_end":167,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7277},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575080,"byte_end":9575083,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574877,"byte_end":9574935,"line_start":204,"line_end":204,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574940,"byte_end":9574943,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574948,"byte_end":9574962,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574967,"byte_end":9574970,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574975,"byte_end":9574982,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574987,"byte_end":9575014,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575019,"byte_end":9575022,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575027,"byte_end":9575056,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575061,"byte_end":9575068,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7278},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575708,"byte_end":9575712,"line_start":240,"line_end":240,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575248,"byte_end":9575294,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575299,"byte_end":9575345,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575350,"byte_end":9575421,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575426,"byte_end":9575429,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575434,"byte_end":9575448,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575453,"byte_end":9575456,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575461,"byte_end":9575468,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575473,"byte_end":9575500,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575505,"byte_end":9575508,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575513,"byte_end":9575531,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575536,"byte_end":9575557,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575562,"byte_end":9575596,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575601,"byte_end":9575604,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575609,"byte_end":9575648,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575653,"byte_end":9575668,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575673,"byte_end":9575678,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575683,"byte_end":9575690,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7281},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576739,"byte_end":9576749,"line_start":271,"line_end":271,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575818,"byte_end":9575892,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575897,"byte_end":9575964,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575969,"byte_end":9575993,"line_start":247,"line_end":247,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9575998,"byte_end":9576001,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576006,"byte_end":9576079,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576084,"byte_end":9576157,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576162,"byte_end":9576233,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576238,"byte_end":9576313,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576318,"byte_end":9576360,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576365,"byte_end":9576368,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576373,"byte_end":9576387,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576392,"byte_end":9576395,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576400,"byte_end":9576407,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576412,"byte_end":9576439,"line_start":258,"line_end":258,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576444,"byte_end":9576467,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576472,"byte_end":9576475,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576480,"byte_end":9576498,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576503,"byte_end":9576524,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576529,"byte_end":9576573,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576578,"byte_end":9576581,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576586,"byte_end":9576639,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576644,"byte_end":9576659,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576664,"byte_end":9576669,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576674,"byte_end":9576681,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576686,"byte_end":9576689,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9576694,"byte_end":9576721,"line_start":270,"line_end":270,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7288},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577626,"byte_end":9577634,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577158,"byte_end":9577227,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577232,"byte_end":9577274,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577279,"byte_end":9577282,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577287,"byte_end":9577321,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577326,"byte_end":9577340,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577345,"byte_end":9577348,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577353,"byte_end":9577360,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577365,"byte_end":9577392,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577397,"byte_end":9577460,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577465,"byte_end":9577468,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577473,"byte_end":9577503,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577508,"byte_end":9577511,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577516,"byte_end":9577546,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577551,"byte_end":9577573,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577578,"byte_end":9577590,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577595,"byte_end":9577602,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577607,"byte_end":9577614,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7289},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578755,"byte_end":9578769,"line_start":332,"line_end":332,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577843,"byte_end":9577917,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577922,"byte_end":9577959,"line_start":309,"line_end":309,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577964,"byte_end":9577967,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9577972,"byte_end":9578040,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578045,"byte_end":9578118,"line_start":312,"line_end":312,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578123,"byte_end":9578199,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578204,"byte_end":9578278,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578283,"byte_end":9578331,"line_start":315,"line_end":315,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578336,"byte_end":9578339,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578344,"byte_end":9578378,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578383,"byte_end":9578410,"line_start":318,"line_end":318,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578415,"byte_end":9578429,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578434,"byte_end":9578437,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578442,"byte_end":9578449,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578454,"byte_end":9578481,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578486,"byte_end":9578509,"line_start":323,"line_end":323,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578514,"byte_end":9578577,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578582,"byte_end":9578585,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578590,"byte_end":9578630,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578635,"byte_end":9578638,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578643,"byte_end":9578687,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578692,"byte_end":9578714,"line_start":329,"line_end":329,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578719,"byte_end":9578731,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578736,"byte_end":9578743,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7290},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579327,"byte_end":9579337,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9578994,"byte_end":9579048,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579053,"byte_end":9579067,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579072,"byte_end":9579075,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579080,"byte_end":9579087,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579092,"byte_end":9579119,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579124,"byte_end":9579127,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579132,"byte_end":9579150,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579155,"byte_end":9579176,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579181,"byte_end":9579215,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579220,"byte_end":9579223,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579228,"byte_end":9579263,"line_start":349,"line_end":349,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579268,"byte_end":9579293,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579298,"byte_end":9579303,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579308,"byte_end":9579315,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8101},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584367,"byte_end":9584373,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":8102},{"krate":0,"index":8103}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581557,"byte_end":9581593,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581594,"byte_end":9581597,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581598,"byte_end":9581674,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581675,"byte_end":9581755,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581756,"byte_end":9581797,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581798,"byte_end":9581801,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581802,"byte_end":9581876,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581877,"byte_end":9581958,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9581959,"byte_end":9582025,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582026,"byte_end":9582029,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582030,"byte_end":9582088,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582089,"byte_end":9582169,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582170,"byte_end":9582250,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582251,"byte_end":9582330,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582331,"byte_end":9582381,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582382,"byte_end":9582385,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582386,"byte_end":9582465,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582466,"byte_end":9582541,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582542,"byte_end":9582612,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582613,"byte_end":9582616,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582617,"byte_end":9582697,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582698,"byte_end":9582771,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582772,"byte_end":9582843,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582844,"byte_end":9582847,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582848,"byte_end":9582862,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582863,"byte_end":9582866,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582867,"byte_end":9582883,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582884,"byte_end":9582887,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582888,"byte_end":9582895,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582896,"byte_end":9582924,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582925,"byte_end":9582948,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582949,"byte_end":9582952,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582953,"byte_end":9582971,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582972,"byte_end":9582993,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9582994,"byte_end":9583039,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583040,"byte_end":9583077,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583078,"byte_end":9583081,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583082,"byte_end":9583115,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583116,"byte_end":9583153,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583154,"byte_end":9583200,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583201,"byte_end":9583212,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583213,"byte_end":9583216,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583217,"byte_end":9583258,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583259,"byte_end":9583283,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583284,"byte_end":9583289,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583290,"byte_end":9583297,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583298,"byte_end":9583301,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583302,"byte_end":9583327,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583328,"byte_end":9583331,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583332,"byte_end":9583339,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583340,"byte_end":9583368,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583369,"byte_end":9583372,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583373,"byte_end":9583408,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583409,"byte_end":9583434,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583435,"byte_end":9583438,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583439,"byte_end":9583462,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583463,"byte_end":9583498,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583499,"byte_end":9583522,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583523,"byte_end":9583528,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583529,"byte_end":9583532,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583533,"byte_end":9583557,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583558,"byte_end":9583596,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583597,"byte_end":9583636,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583637,"byte_end":9583671,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583672,"byte_end":9583675,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583676,"byte_end":9583731,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583732,"byte_end":9583765,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583766,"byte_end":9583775,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583776,"byte_end":9583779,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583780,"byte_end":9583819,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583820,"byte_end":9583838,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583839,"byte_end":9583870,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583871,"byte_end":9583949,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583950,"byte_end":9583983,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9583984,"byte_end":9584001,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584002,"byte_end":9584005,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584006,"byte_end":9584056,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584057,"byte_end":9584102,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584103,"byte_end":9584116,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584117,"byte_end":9584126,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584127,"byte_end":9584132,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584133,"byte_end":9584140,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584141,"byte_end":9584144,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584145,"byte_end":9584174,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584175,"byte_end":9584216,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584217,"byte_end":9584261,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584262,"byte_end":9584296,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9584297,"byte_end":9584338,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7358},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585605,"byte_end":9585608,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585401,"byte_end":9585457,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585462,"byte_end":9585465,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585470,"byte_end":9585484,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585489,"byte_end":9585492,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585497,"byte_end":9585504,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585509,"byte_end":9585537,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585542,"byte_end":9585545,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585550,"byte_end":9585581,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585586,"byte_end":9585593,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7359},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586680,"byte_end":9586688,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"pub async fn notified<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585750,"byte_end":9585778,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585783,"byte_end":9585786,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585791,"byte_end":9585867,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585872,"byte_end":9585946,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585951,"byte_end":9586026,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586031,"byte_end":9586100,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586105,"byte_end":9586108,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586113,"byte_end":9586145,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586150,"byte_end":9586153,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586158,"byte_end":9586172,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586177,"byte_end":9586180,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586185,"byte_end":9586192,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586197,"byte_end":9586225,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586230,"byte_end":9586253,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586258,"byte_end":9586261,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586266,"byte_end":9586284,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586289,"byte_end":9586310,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586315,"byte_end":9586360,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586365,"byte_end":9586402,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586407,"byte_end":9586410,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586415,"byte_end":9586448,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586453,"byte_end":9586490,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586495,"byte_end":9586541,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586546,"byte_end":9586557,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586562,"byte_end":9586565,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586570,"byte_end":9586611,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586616,"byte_end":9586640,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586645,"byte_end":9586650,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9586655,"byte_end":9586662,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7362},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588184,"byte_end":9588190,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"pub fn notify(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587025,"byte_end":9587052,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587057,"byte_end":9587060,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587065,"byte_end":9587136,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587141,"byte_end":9587209,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587214,"byte_end":9587290,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587295,"byte_end":9587336,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587341,"byte_end":9587344,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587349,"byte_end":9587423,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587428,"byte_end":9587502,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587507,"byte_end":9587579,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587584,"byte_end":9587598,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587603,"byte_end":9587606,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587611,"byte_end":9587655,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587660,"byte_end":9587663,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587668,"byte_end":9587682,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587687,"byte_end":9587690,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587695,"byte_end":9587702,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587707,"byte_end":9587735,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587740,"byte_end":9587763,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587768,"byte_end":9587771,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587776,"byte_end":9587794,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587799,"byte_end":9587820,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587825,"byte_end":9587870,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587875,"byte_end":9587912,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587917,"byte_end":9587920,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587925,"byte_end":9587958,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9587963,"byte_end":9588000,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588005,"byte_end":9588051,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588056,"byte_end":9588067,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588072,"byte_end":9588075,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588080,"byte_end":9588121,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588126,"byte_end":9588150,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588155,"byte_end":9588160,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9588165,"byte_end":9588172,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7384},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7390},{"krate":0,"index":7391},{"krate":0,"index":7392},{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":15541},{"krate":0,"index":7395},{"krate":0,"index":15543},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":15545},{"krate":0,"index":7398},{"krate":0,"index":15547},{"krate":0,"index":7399},{"krate":0,"index":7400},{"krate":0,"index":7401},{"krate":0,"index":7402},{"krate":0,"index":8130},{"krate":0,"index":8133},{"krate":0,"index":8136},{"krate":0,"index":8139},{"krate":0,"index":7403},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":8167},{"krate":0,"index":8171},{"krate":0,"index":8170},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7440},{"krate":0,"index":7443},{"krate":0,"index":7447},{"krate":0,"index":7471},{"krate":0,"index":7473},{"krate":0,"index":7475},{"krate":0,"index":7479},{"krate":0,"index":7483},{"krate":0,"index":7484},{"krate":0,"index":7485},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7501}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9599966,"byte_end":9600036,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600515,"byte_end":9600521,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8132}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600368,"byte_end":9600415,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600416,"byte_end":9600419,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600420,"byte_end":9600486,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600713,"byte_end":9600721,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8138}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600564,"byte_end":9600613,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600614,"byte_end":9600617,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600618,"byte_end":9600684,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7403},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600772,"byte_end":9600777,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7404},{"krate":0,"index":8142},{"krate":0,"index":8152},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":8154},{"krate":0,"index":8165},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":7405},{"krate":0,"index":7407},{"krate":0,"index":7408},{"krate":0,"index":7410}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600784,"byte_end":9600807,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8142},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600949,"byte_end":9600958,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600832,"byte_end":9600897,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8155},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601180,"byte_end":9601185,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601113,"byte_end":9601171,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8157},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601274,"byte_end":9601280,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8154},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601196,"byte_end":9601265,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":8154},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601090,"byte_end":9601102,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":8155},{"krate":0,"index":8157}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9600980,"byte_end":9601040,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7418},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603277,"byte_end":9603284,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602462,"byte_end":9602541,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602542,"byte_end":9602552,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602553,"byte_end":9602556,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602557,"byte_end":9602633,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602634,"byte_end":9602712,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602713,"byte_end":9602759,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602760,"byte_end":9602763,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602764,"byte_end":9602810,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602811,"byte_end":9602814,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602815,"byte_end":9602829,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602830,"byte_end":9602833,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602834,"byte_end":9602841,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602842,"byte_end":9602871,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602872,"byte_end":9602875,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602876,"byte_end":9602894,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602895,"byte_end":9602916,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602917,"byte_end":9602959,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602960,"byte_end":9602963,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602964,"byte_end":9602997,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9602998,"byte_end":9603038,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603039,"byte_end":9603088,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603089,"byte_end":9603102,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603103,"byte_end":9603114,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603115,"byte_end":9603118,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603119,"byte_end":9603143,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603144,"byte_end":9603191,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603192,"byte_end":9603245,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603246,"byte_end":9603255,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603256,"byte_end":9603261,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603262,"byte_end":9603269,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7422},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605320,"byte_end":9605324,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603749,"byte_end":9603824,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603829,"byte_end":9603845,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603850,"byte_end":9603853,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603858,"byte_end":9603937,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603942,"byte_end":9604017,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604022,"byte_end":9604098,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604103,"byte_end":9604175,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604180,"byte_end":9604193,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604198,"byte_end":9604201,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604206,"byte_end":9604282,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604287,"byte_end":9604363,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604368,"byte_end":9604440,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604445,"byte_end":9604518,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604523,"byte_end":9604597,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604602,"byte_end":9604674,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604679,"byte_end":9604716,"line_start":159,"line_end":159,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604721,"byte_end":9604724,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604729,"byte_end":9604743,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604748,"byte_end":9604751,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604756,"byte_end":9604788,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604793,"byte_end":9604796,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604801,"byte_end":9604808,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604813,"byte_end":9604842,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604847,"byte_end":9604850,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604855,"byte_end":9604873,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604878,"byte_end":9604899,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604904,"byte_end":9604946,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604951,"byte_end":9604954,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604959,"byte_end":9604992,"line_start":172,"line_end":172,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9604997,"byte_end":9605037,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605042,"byte_end":9605091,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605096,"byte_end":9605109,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605114,"byte_end":9605125,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605130,"byte_end":9605133,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605138,"byte_end":9605162,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605167,"byte_end":9605214,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605219,"byte_end":9605272,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605277,"byte_end":9605286,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605291,"byte_end":9605296,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605301,"byte_end":9605308,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7425},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9605725,"byte_end":9605736,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608978,"byte_end":9608984,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607093,"byte_end":9607151,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607156,"byte_end":9607159,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607164,"byte_end":9607238,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607243,"byte_end":9607277,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607282,"byte_end":9607285,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607290,"byte_end":9607355,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607360,"byte_end":9607432,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607437,"byte_end":9607440,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607445,"byte_end":9607457,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607462,"byte_end":9607465,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607470,"byte_end":9607518,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607523,"byte_end":9607526,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607531,"byte_end":9607557,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607562,"byte_end":9607592,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607597,"byte_end":9607600,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607605,"byte_end":9607619,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607624,"byte_end":9607627,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607632,"byte_end":9607647,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607652,"byte_end":9607655,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607660,"byte_end":9607667,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607672,"byte_end":9607701,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607706,"byte_end":9607709,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607714,"byte_end":9607732,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607737,"byte_end":9607758,"line_start":272,"line_end":272,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607763,"byte_end":9607815,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607820,"byte_end":9607823,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607828,"byte_end":9607861,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607866,"byte_end":9607887,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607892,"byte_end":9607903,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607908,"byte_end":9607911,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607916,"byte_end":9607942,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607947,"byte_end":9607988,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9607993,"byte_end":9607998,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608003,"byte_end":9608010,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608015,"byte_end":9608018,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608023,"byte_end":9608045,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608050,"byte_end":9608053,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608058,"byte_end":9608065,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608070,"byte_end":9608099,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608104,"byte_end":9608142,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608147,"byte_end":9608150,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608155,"byte_end":9608192,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608197,"byte_end":9608200,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608205,"byte_end":9608239,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608244,"byte_end":9608295,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608300,"byte_end":9608325,"line_start":294,"line_end":294,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608330,"byte_end":9608335,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608340,"byte_end":9608343,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608348,"byte_end":9608366,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608371,"byte_end":9608392,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608397,"byte_end":9608443,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608448,"byte_end":9608451,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608456,"byte_end":9608489,"line_start":301,"line_end":301,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608494,"byte_end":9608515,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608520,"byte_end":9608563,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608568,"byte_end":9608643,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608648,"byte_end":9608665,"line_start":305,"line_end":305,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608670,"byte_end":9608715,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608720,"byte_end":9608763,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608768,"byte_end":9608785,"line_start":308,"line_end":308,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608790,"byte_end":9608803,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608808,"byte_end":9608819,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608824,"byte_end":9608827,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608832,"byte_end":9608868,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608873,"byte_end":9608938,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608943,"byte_end":9608948,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9608953,"byte_end":9608960,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7432},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609854,"byte_end":9609863,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609095,"byte_end":9609169,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609174,"byte_end":9609177,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609182,"byte_end":9609256,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609261,"byte_end":9609295,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609300,"byte_end":9609303,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609308,"byte_end":9609383,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609388,"byte_end":9609391,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609396,"byte_end":9609422,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609427,"byte_end":9609457,"line_start":330,"line_end":330,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609462,"byte_end":9609465,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609470,"byte_end":9609484,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609489,"byte_end":9609492,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609497,"byte_end":9609504,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609509,"byte_end":9609538,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609543,"byte_end":9609546,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609551,"byte_end":9609569,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609574,"byte_end":9609595,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609600,"byte_end":9609642,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609647,"byte_end":9609650,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609655,"byte_end":9609688,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609693,"byte_end":9609696,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609701,"byte_end":9609718,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609723,"byte_end":9609726,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609731,"byte_end":9609763,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609768,"byte_end":9609820,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609825,"byte_end":9609830,"line_start":347,"line_end":347,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9609835,"byte_end":9609842,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7438},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611841,"byte_end":9611846,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610203,"byte_end":9610270,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610275,"byte_end":9610278,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610283,"byte_end":9610357,"line_start":368,"line_end":368,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610362,"byte_end":9610430,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610435,"byte_end":9610501,"line_start":370,"line_end":370,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610506,"byte_end":9610520,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610525,"byte_end":9610528,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610533,"byte_end":9610609,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610614,"byte_end":9610677,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610682,"byte_end":9610685,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610690,"byte_end":9610712,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610717,"byte_end":9610753,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610758,"byte_end":9610761,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610766,"byte_end":9610780,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610785,"byte_end":9610788,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610793,"byte_end":9610828,"line_start":381,"line_end":381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610833,"byte_end":9610836,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610841,"byte_end":9610848,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610853,"byte_end":9610882,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610887,"byte_end":9610937,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610942,"byte_end":9610945,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610950,"byte_end":9610968,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610973,"byte_end":9610994,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610999,"byte_end":9611045,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611050,"byte_end":9611053,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611058,"byte_end":9611091,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611096,"byte_end":9611099,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611104,"byte_end":9611123,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611128,"byte_end":9611131,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611136,"byte_end":9611168,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611173,"byte_end":9611225,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611230,"byte_end":9611233,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611238,"byte_end":9611267,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611272,"byte_end":9611315,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611320,"byte_end":9611352,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611357,"byte_end":9611366,"line_start":401,"line_end":401,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611371,"byte_end":9611376,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611381,"byte_end":9611388,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611393,"byte_end":9611396,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611401,"byte_end":9611452,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611457,"byte_end":9611460,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611465,"byte_end":9611472,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611477,"byte_end":9611506,"line_start":408,"line_end":408,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611511,"byte_end":9611514,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611519,"byte_end":9611537,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611542,"byte_end":9611563,"line_start":411,"line_end":411,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611568,"byte_end":9611614,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611619,"byte_end":9611622,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611627,"byte_end":9611676,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611681,"byte_end":9611684,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611689,"byte_end":9611708,"line_start":416,"line_end":416,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611713,"byte_end":9611716,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611721,"byte_end":9611762,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611767,"byte_end":9611807,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611812,"byte_end":9611817,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611822,"byte_end":9611829,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7439},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613829,"byte_end":9613837,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611944,"byte_end":9611976,"line_start":427,"line_end":427,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611981,"byte_end":9611984,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9611989,"byte_end":9612062,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612067,"byte_end":9612133,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612138,"byte_end":9612162,"line_start":431,"line_end":431,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612167,"byte_end":9612170,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612175,"byte_end":9612241,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612246,"byte_end":9612268,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612273,"byte_end":9612276,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612281,"byte_end":9612293,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612298,"byte_end":9612301,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612306,"byte_end":9612357,"line_start":438,"line_end":438,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612362,"byte_end":9612425,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612430,"byte_end":9612505,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612510,"byte_end":9612524,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612529,"byte_end":9612532,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612537,"byte_end":9612551,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612556,"byte_end":9612559,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612564,"byte_end":9612614,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612619,"byte_end":9612622,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612627,"byte_end":9612634,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612639,"byte_end":9612668,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612673,"byte_end":9612723,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612728,"byte_end":9612731,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612736,"byte_end":9612754,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612759,"byte_end":9612780,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612785,"byte_end":9612831,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612836,"byte_end":9612839,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612844,"byte_end":9612873,"line_start":455,"line_end":455,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612878,"byte_end":9612923,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612928,"byte_end":9612970,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9612975,"byte_end":9613007,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613012,"byte_end":9613021,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613026,"byte_end":9613029,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613034,"byte_end":9613057,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613062,"byte_end":9613096,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613101,"byte_end":9613104,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613109,"byte_end":9613138,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613143,"byte_end":9613195,"line_start":465,"line_end":465,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613200,"byte_end":9613232,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613237,"byte_end":9613246,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613251,"byte_end":9613256,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613261,"byte_end":9613268,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613273,"byte_end":9613276,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613281,"byte_end":9613342,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613347,"byte_end":9613350,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613355,"byte_end":9613362,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613367,"byte_end":9613396,"line_start":474,"line_end":474,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613401,"byte_end":9613451,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613456,"byte_end":9613459,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613464,"byte_end":9613482,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613487,"byte_end":9613508,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613513,"byte_end":9613565,"line_start":479,"line_end":479,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613570,"byte_end":9613573,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613578,"byte_end":9613595,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613600,"byte_end":9613603,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613608,"byte_end":9613637,"line_start":483,"line_end":483,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613642,"byte_end":9613696,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613701,"byte_end":9613744,"line_start":485,"line_end":485,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613749,"byte_end":9613781,"line_start":486,"line_end":486,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613786,"byte_end":9613795,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613800,"byte_end":9613805,"line_start":488,"line_end":488,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9613810,"byte_end":9613817,"line_start":489,"line_end":489,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8234},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682328,"byte_end":9682337,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8235}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681677,"byte_end":9681742,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681743,"byte_end":9681746,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681747,"byte_end":9681822,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681823,"byte_end":9681899,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681900,"byte_end":9681980,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681981,"byte_end":9681990,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681991,"byte_end":9681994,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9681995,"byte_end":9682068,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682069,"byte_end":9682148,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682149,"byte_end":9682227,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682228,"byte_end":9682299,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8238},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682586,"byte_end":9682601,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8240},{"krate":0,"index":8241}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682402,"byte_end":9682434,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682435,"byte_end":9682438,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682439,"byte_end":9682490,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682491,"byte_end":9682494,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682495,"byte_end":9682545,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682546,"byte_end":9682557,"line_start":26,"line_end":26,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8245},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682862,"byte_end":9682882,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8246},{"krate":0,"index":8247}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682653,"byte_end":9682692,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682693,"byte_end":9682696,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682697,"byte_end":9682754,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682755,"byte_end":9682758,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682759,"byte_end":9682821,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682822,"byte_end":9682833,"line_start":38,"line_end":38,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8250},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683178,"byte_end":9683193,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682931,"byte_end":9682995,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9682996,"byte_end":9682999,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683000,"byte_end":9683077,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683078,"byte_end":9683090,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683091,"byte_end":9683094,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683095,"byte_end":9683149,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7736},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683747,"byte_end":9683750,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683672,"byte_end":9683735,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7737},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683926,"byte_end":9683943,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683862,"byte_end":9683914,"line_start":77,"line_end":77,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684190,"byte_end":9684201,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684013,"byte_end":9684055,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684060,"byte_end":9684063,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684068,"byte_end":9684178,"line_start":84,"line_end":84,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684321,"byte_end":9684328,"line_start":90,"line_end":90,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684264,"byte_end":9684303,"line_start":89,"line_end":89,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7742},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684564,"byte_end":9684575,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684503,"byte_end":9684552,"line_start":98,"line_end":98,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7743},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685036,"byte_end":9685049,"line_start":114,"line_end":114,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684858,"byte_end":9684897,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684902,"byte_end":9684905,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684910,"byte_end":9684978,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684983,"byte_end":9684986,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9684991,"byte_end":9685018,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7746},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685429,"byte_end":9685446,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685247,"byte_end":9685296,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685301,"byte_end":9685304,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685309,"byte_end":9685377,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685382,"byte_end":9685385,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685390,"byte_end":9685417,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7749},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685961,"byte_end":9685967,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685786,"byte_end":9685856,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685861,"byte_end":9685930,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685935,"byte_end":9685949,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7751},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686222,"byte_end":9686228,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686047,"byte_end":9686117,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686122,"byte_end":9686191,"line_start":149,"line_end":149,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686196,"byte_end":9686210,"line_start":150,"line_end":150,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8255},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689251,"byte_end":9689257,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8257},{"krate":0,"index":8258}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9686721,"byte_end":9686759,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9686760,"byte_end":9686763,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9686764,"byte_end":9686841,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9686842,"byte_end":9686921,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9686922,"byte_end":9687001,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687002,"byte_end":9687060,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687061,"byte_end":9687064,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687065,"byte_end":9687143,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687144,"byte_end":9687222,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687223,"byte_end":9687301,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687302,"byte_end":9687367,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687368,"byte_end":9687371,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687372,"byte_end":9687436,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687437,"byte_end":9687509,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687510,"byte_end":9687590,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687591,"byte_end":9687671,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687672,"byte_end":9687752,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687753,"byte_end":9687822,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687823,"byte_end":9687893,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687894,"byte_end":9687932,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687933,"byte_end":9687936,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9687937,"byte_end":9688014,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688015,"byte_end":9688100,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688101,"byte_end":9688181,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688182,"byte_end":9688229,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688230,"byte_end":9688302,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688303,"byte_end":9688306,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688307,"byte_end":9688321,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688322,"byte_end":9688325,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688326,"byte_end":9688333,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688334,"byte_end":9688362,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688363,"byte_end":9688366,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688367,"byte_end":9688385,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688386,"byte_end":9688407,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688408,"byte_end":9688442,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688443,"byte_end":9688446,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688447,"byte_end":9688495,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688496,"byte_end":9688505,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688506,"byte_end":9688545,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688546,"byte_end":9688585,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688586,"byte_end":9688617,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688618,"byte_end":9688649,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688650,"byte_end":9688699,"line_start":53,"line_end":53,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688700,"byte_end":9688703,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688704,"byte_end":9688755,"line_start":55,"line_end":55,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688756,"byte_end":9688765,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688766,"byte_end":9688809,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688810,"byte_end":9688830,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688831,"byte_end":9688861,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688862,"byte_end":9688901,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688902,"byte_end":9688907,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688908,"byte_end":9688915,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688916,"byte_end":9688919,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688920,"byte_end":9688954,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688955,"byte_end":9688984,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9688985,"byte_end":9689032,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689033,"byte_end":9689082,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689083,"byte_end":9689120,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689121,"byte_end":9689222,"line_start":69,"line_end":69,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8262},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689619,"byte_end":9689634,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8265},{"krate":0,"index":8266}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689391,"byte_end":9689463,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689464,"byte_end":9689476,"line_start":80,"line_end":80,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689477,"byte_end":9689480,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689481,"byte_end":9689536,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689537,"byte_end":9689552,"line_start":83,"line_end":83,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689553,"byte_end":9689556,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689557,"byte_end":9689590,"line_start":85,"line_end":85,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8271},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689985,"byte_end":9690001,"line_start":101,"line_end":101,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8274},{"krate":0,"index":8275}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689716,"byte_end":9689792,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689793,"byte_end":9689805,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689806,"byte_end":9689809,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689810,"byte_end":9689867,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689868,"byte_end":9689886,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689887,"byte_end":9689890,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689891,"byte_end":9689926,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9689927,"byte_end":9689956,"line_start":99,"line_end":99,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":7787},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692066,"byte_end":9692069,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691856,"byte_end":9691919,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691924,"byte_end":9691927,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691932,"byte_end":9691946,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691951,"byte_end":9691954,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691959,"byte_end":9691966,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691971,"byte_end":9691999,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692004,"byte_end":9692007,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692012,"byte_end":9692042,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692047,"byte_end":9692054,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693284,"byte_end":9693288,"line_start":212,"line_end":212,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692246,"byte_end":9692317,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692322,"byte_end":9692368,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692373,"byte_end":9692376,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692381,"byte_end":9692450,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692455,"byte_end":9692531,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692536,"byte_end":9692560,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692565,"byte_end":9692568,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692573,"byte_end":9692587,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692592,"byte_end":9692595,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692600,"byte_end":9692607,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692612,"byte_end":9692635,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692640,"byte_end":9692668,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692673,"byte_end":9692676,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692681,"byte_end":9692699,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692704,"byte_end":9692725,"line_start":195,"line_end":195,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692730,"byte_end":9692774,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692779,"byte_end":9692813,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692818,"byte_end":9692821,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692826,"byte_end":9692860,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692865,"byte_end":9692891,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692896,"byte_end":9692899,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692904,"byte_end":9692937,"line_start":202,"line_end":202,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9692942,"byte_end":9693012,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693017,"byte_end":9693057,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693062,"byte_end":9693092,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693097,"byte_end":9693153,"line_start":206,"line_end":206,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693158,"byte_end":9693161,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693166,"byte_end":9693224,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693229,"byte_end":9693245,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693250,"byte_end":9693254,"line_start":210,"line_end":210,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693259,"byte_end":9693266,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7792},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694319,"byte_end":9694324,"line_start":243,"line_end":243,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693678,"byte_end":9693753,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693758,"byte_end":9693804,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693809,"byte_end":9693812,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693817,"byte_end":9693887,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693892,"byte_end":9693930,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693935,"byte_end":9693938,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9693943,"byte_end":9694016,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694021,"byte_end":9694038,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694043,"byte_end":9694046,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694051,"byte_end":9694065,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694070,"byte_end":9694073,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694078,"byte_end":9694085,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694090,"byte_end":9694118,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694123,"byte_end":9694126,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694131,"byte_end":9694149,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694154,"byte_end":9694175,"line_start":236,"line_end":236,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694180,"byte_end":9694212,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694217,"byte_end":9694220,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694225,"byte_end":9694262,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694267,"byte_end":9694280,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694285,"byte_end":9694289,"line_start":241,"line_end":241,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694294,"byte_end":9694301,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7796},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694839,"byte_end":9694849,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694774,"byte_end":9694827,"line_start":255,"line_end":255,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":7864},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7865},{"krate":0,"index":7866},{"krate":0,"index":7867},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":15685},{"krate":0,"index":7872},{"krate":0,"index":15687},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7875},{"krate":0,"index":7876},{"krate":0,"index":7877},{"krate":0,"index":7878},{"krate":0,"index":7879},{"krate":0,"index":7880},{"krate":0,"index":15699},{"krate":0,"index":7881},{"krate":0,"index":15701},{"krate":0,"index":7882},{"krate":0,"index":7883},{"krate":0,"index":7884},{"krate":0,"index":8289},{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8299},{"krate":0,"index":8302},{"krate":0,"index":8306},{"krate":0,"index":7885},{"krate":0,"index":8316},{"krate":0,"index":8322},{"krate":0,"index":7892},{"krate":0,"index":8325},{"krate":0,"index":8330},{"krate":0,"index":8328},{"krate":0,"index":8332},{"krate":0,"index":8335},{"krate":0,"index":7893},{"krate":0,"index":7894},{"krate":0,"index":7898},{"krate":0,"index":7903},{"krate":0,"index":7910},{"krate":0,"index":7915},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7929},{"krate":0,"index":7931},{"krate":0,"index":7934},{"krate":0,"index":7938},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7949}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21247,"byte_end":21271,"line_start":231,"line_end":231,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708364,"byte_end":9708443,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708444,"byte_end":9708454,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708455,"byte_end":9708458,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708459,"byte_end":9708535,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708536,"byte_end":9708610,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708611,"byte_end":9708614,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708615,"byte_end":9708626,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708627,"byte_end":9708630,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708631,"byte_end":9708698,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ the producer and sender halves of the channel. The channel is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708699,"byte_end":9708764,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708765,"byte_end":9708830,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ be ready upon creation and will yield either this initial value or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708831,"byte_end":9708901,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ the latest value that has been sent by `Sender`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708902,"byte_end":9708954,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708955,"byte_end":9708958,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9708959,"byte_end":9709026,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709027,"byte_end":9709030,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709031,"byte_end":9709045,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709046,"byte_end":9709049,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709050,"byte_end":9709057,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709058,"byte_end":9709085,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709086,"byte_end":9709089,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709090,"byte_end":9709154,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709155,"byte_end":9709206,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709207,"byte_end":9709210,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709211,"byte_end":9709244,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709245,"byte_end":9709298,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709299,"byte_end":9709350,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709351,"byte_end":9709364,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709365,"byte_end":9709376,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709377,"byte_end":9709380,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709381,"byte_end":9709412,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709413,"byte_end":9709425,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709426,"byte_end":9709433,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709434,"byte_end":9709441,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709442,"byte_end":9709445,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709446,"byte_end":9709459,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709460,"byte_end":9709463,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709464,"byte_end":9709538,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709539,"byte_end":9709618,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ in the values being produced and work can be stopped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709619,"byte_end":9709676,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709677,"byte_end":9709680,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709681,"byte_end":9709700,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709701,"byte_end":9709704,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709705,"byte_end":9709785,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709786,"byte_end":9709865,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709866,"byte_end":9709938,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709939,"byte_end":9709942,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709943,"byte_end":9709985,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9709986,"byte_end":9710032,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710033,"byte_end":9710091,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710092,"byte_end":9710136,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710137,"byte_end":9710195,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8289},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710683,"byte_end":9710691,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8291},{"krate":0,"index":8292}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710517,"byte_end":9710583,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710584,"byte_end":9710587,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710588,"byte_end":9710654,"line_start":67,"line_end":67,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8296},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710998,"byte_end":9711004,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8298}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710833,"byte_end":9710898,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710899,"byte_end":9710902,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9710903,"byte_end":9710969,"line_start":79,"line_end":79,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8302},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711325,"byte_end":9711328,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8305}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711042,"byte_end":9711084,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711085,"byte_end":9711088,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711089,"byte_end":9711165,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711166,"byte_end":9711245,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711246,"byte_end":9711296,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":7885},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711384,"byte_end":9711389,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":7886},{"krate":0,"index":8310},{"krate":0,"index":8313},{"krate":0,"index":7887},{"krate":0,"index":7890}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711396,"byte_end":9711417,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711525,"byte_end":9711534,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8312}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711442,"byte_end":9711488,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":7894},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713313,"byte_end":9713320,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T: Clone>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712545,"byte_end":9712621,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712622,"byte_end":9712625,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712626,"byte_end":9712708,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712709,"byte_end":9712785,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712786,"byte_end":9712822,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712823,"byte_end":9712826,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712827,"byte_end":9712841,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712842,"byte_end":9712845,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712846,"byte_end":9712853,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712854,"byte_end":9712881,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712882,"byte_end":9712885,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712886,"byte_end":9712950,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9712951,"byte_end":9713002,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713003,"byte_end":9713006,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713007,"byte_end":9713040,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713041,"byte_end":9713094,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713095,"byte_end":9713146,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713147,"byte_end":9713160,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713161,"byte_end":9713172,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713173,"byte_end":9713176,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713177,"byte_end":9713208,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713209,"byte_end":9713221,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713222,"byte_end":9713229,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713230,"byte_end":9713237,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713238,"byte_end":9713241,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713242,"byte_end":9713271,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9713272,"byte_end":9713305,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7900},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714489,"byte_end":9714495,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714027,"byte_end":9714082,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714087,"byte_end":9714090,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714095,"byte_end":9714171,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714176,"byte_end":9714252,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714257,"byte_end":9714288,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714293,"byte_end":9714296,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714301,"byte_end":9714315,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714320,"byte_end":9714323,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714328,"byte_end":9714335,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714340,"byte_end":9714367,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714372,"byte_end":9714375,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714380,"byte_end":9714422,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714427,"byte_end":9714465,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714470,"byte_end":9714477,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7901},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714655,"byte_end":9714668,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"pub fn poll_recv_ref<'a>(&'a mut Self, &mut Context) -> Poll<Option<Ref>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7905},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716389,"byte_end":9716393,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715307,"byte_end":9715367,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715372,"byte_end":9715375,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715380,"byte_end":9715448,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715453,"byte_end":9715527,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715532,"byte_end":9715605,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715610,"byte_end":9715649,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715654,"byte_end":9715657,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715662,"byte_end":9715717,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715722,"byte_end":9715725,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715730,"byte_end":9715744,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715749,"byte_end":9715752,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715757,"byte_end":9715764,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715769,"byte_end":9715796,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715801,"byte_end":9715804,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715809,"byte_end":9715827,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715832,"byte_end":9715853,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715858,"byte_end":9715909,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715914,"byte_end":9715917,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715922,"byte_end":9715963,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715968,"byte_end":9715999,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716004,"byte_end":9716007,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716012,"byte_end":9716045,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716050,"byte_end":9716095,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716100,"byte_end":9716111,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716116,"byte_end":9716119,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716124,"byte_end":9716186,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716191,"byte_end":9716232,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716237,"byte_end":9716270,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716275,"byte_end":9716278,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716283,"byte_end":9716315,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716320,"byte_end":9716349,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716354,"byte_end":9716359,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716364,"byte_end":9716371,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7923},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717459,"byte_end":9717468,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"pub fn broadcast(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717379,"byte_end":9717447,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7924},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718299,"byte_end":9718305,"line_start":348,"line_end":348,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718088,"byte_end":9718134,"line_start":344,"line_end":344,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718139,"byte_end":9718142,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718147,"byte_end":9718221,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718226,"byte_end":9718281,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":8337},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8339},{"krate":0,"index":8341},{"krate":0,"index":8348},{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8351},{"krate":0,"index":8352},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":8363},{"krate":0,"index":8374},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454},{"krate":0,"index":8455},{"krate":0,"index":8516}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21559,"byte_end":21586,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720051,"byte_end":9720082,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720083,"byte_end":9720086,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720087,"byte_end":9720109,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720110,"byte_end":9720113,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720114,"byte_end":9720195,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720196,"byte_end":9720276,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720277,"byte_end":9720357,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720358,"byte_end":9720432,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720433,"byte_end":9720508,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720509,"byte_end":9720531,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720532,"byte_end":9720535,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720536,"byte_end":9720571,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720572,"byte_end":9720575,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720576,"byte_end":9720650,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720651,"byte_end":9720730,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720731,"byte_end":9720803,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720804,"byte_end":9720879,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720880,"byte_end":9720933,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720934,"byte_end":9720937,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9720938,"byte_end":9721015,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721016,"byte_end":9721089,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721090,"byte_end":9721169,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721170,"byte_end":9721248,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721249,"byte_end":9721321,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721322,"byte_end":9721397,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721398,"byte_end":9721472,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721473,"byte_end":9721548,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721549,"byte_end":9721579,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721580,"byte_end":9721583,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721584,"byte_end":9721662,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721663,"byte_end":9721738,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721739,"byte_end":9721816,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721817,"byte_end":9721896,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721897,"byte_end":9721975,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9721976,"byte_end":9722051,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722052,"byte_end":9722127,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722128,"byte_end":9722189,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722190,"byte_end":9722193,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722194,"byte_end":9722218,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722219,"byte_end":9722283,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722284,"byte_end":9722344,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722345,"byte_end":9722434,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722435,"byte_end":9722523,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722524,"byte_end":9722527,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722528,"byte_end":9722553,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722554,"byte_end":9722557,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722558,"byte_end":9722625,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722626,"byte_end":9722629,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722630,"byte_end":9722646,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722647,"byte_end":9722650,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722651,"byte_end":9722730,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722731,"byte_end":9722810,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722811,"byte_end":9722890,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722891,"byte_end":9722958,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722959,"byte_end":9722962,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722963,"byte_end":9722970,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722971,"byte_end":9722991,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722992,"byte_end":9722995,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9722996,"byte_end":9723018,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723019,"byte_end":9723042,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723043,"byte_end":9723079,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723080,"byte_end":9723087,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723088,"byte_end":9723095,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723096,"byte_end":9723103,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723104,"byte_end":9723107,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723108,"byte_end":9723187,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723188,"byte_end":9723266,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723267,"byte_end":9723301,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723302,"byte_end":9723305,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723306,"byte_end":9723313,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723314,"byte_end":9723334,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723335,"byte_end":9723338,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723339,"byte_end":9723419,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723420,"byte_end":9723454,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723455,"byte_end":9723469,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723470,"byte_end":9723492,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723493,"byte_end":9723500,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723501,"byte_end":9723504,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723505,"byte_end":9723515,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723516,"byte_end":9723519,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723520,"byte_end":9723564,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723565,"byte_end":9723594,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723595,"byte_end":9723634,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723635,"byte_end":9723647,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723648,"byte_end":9723655,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723656,"byte_end":9723663,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723664,"byte_end":9723667,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723668,"byte_end":9723748,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723749,"byte_end":9723825,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723826,"byte_end":9723838,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723839,"byte_end":9723842,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723843,"byte_end":9723850,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723851,"byte_end":9723871,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723872,"byte_end":9723875,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723876,"byte_end":9723914,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723915,"byte_end":9723949,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723950,"byte_end":9723991,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9723992,"byte_end":9723999,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724000,"byte_end":9724003,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724004,"byte_end":9724062,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724063,"byte_end":9724096,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724097,"byte_end":9724104,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724105,"byte_end":9724112,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724113,"byte_end":9724116,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724117,"byte_end":9724190,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724191,"byte_end":9724219,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724220,"byte_end":9724223,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724224,"byte_end":9724265,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724266,"byte_end":9724299,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724300,"byte_end":9724346,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724347,"byte_end":9724390,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724391,"byte_end":9724433,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724434,"byte_end":9724475,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724476,"byte_end":9724479,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724480,"byte_end":9724509,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724510,"byte_end":9724513,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724514,"byte_end":9724594,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724595,"byte_end":9724674,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724675,"byte_end":9724754,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724755,"byte_end":9724795,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724796,"byte_end":9724799,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724800,"byte_end":9724874,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724875,"byte_end":9724955,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724956,"byte_end":9724959,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724960,"byte_end":9724983,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724984,"byte_end":9724987,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9724988,"byte_end":9725068,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725069,"byte_end":9725135,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725136,"byte_end":9725203,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725204,"byte_end":9725278,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725279,"byte_end":9725291,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725292,"byte_end":9725295,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725296,"byte_end":9725303,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725304,"byte_end":9725324,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725325,"byte_end":9725328,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725329,"byte_end":9725352,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725353,"byte_end":9725382,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725383,"byte_end":9725445,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725446,"byte_end":9725453,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725454,"byte_end":9725461,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725462,"byte_end":9725469,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725470,"byte_end":9725473,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725474,"byte_end":9725548,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725549,"byte_end":9725616,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725617,"byte_end":9725620,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725621,"byte_end":9725632,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725633,"byte_end":9725655,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725656,"byte_end":9725720,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725721,"byte_end":9725761,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725762,"byte_end":9725824,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725825,"byte_end":9725853,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725854,"byte_end":9725861,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725862,"byte_end":9725865,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725866,"byte_end":9725895,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725896,"byte_end":9725941,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725942,"byte_end":9725954,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725955,"byte_end":9725962,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725963,"byte_end":9725970,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725971,"byte_end":9725974,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725975,"byte_end":9725998,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9725999,"byte_end":9726002,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726003,"byte_end":9726083,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726084,"byte_end":9726158,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726159,"byte_end":9726235,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726236,"byte_end":9726310,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726311,"byte_end":9726390,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726391,"byte_end":9726473,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726474,"byte_end":9726495,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726496,"byte_end":9726499,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726500,"byte_end":9726516,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726517,"byte_end":9726520,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726521,"byte_end":9726528,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726529,"byte_end":9726549,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726550,"byte_end":9726553,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726554,"byte_end":9726577,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726578,"byte_end":9726620,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726621,"byte_end":9726683,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726684,"byte_end":9726712,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726713,"byte_end":9726720,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726721,"byte_end":9726724,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726725,"byte_end":9726770,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726771,"byte_end":9726778,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726779,"byte_end":9726786,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726787,"byte_end":9726790,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726791,"byte_end":9726809,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726810,"byte_end":9726813,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726814,"byte_end":9726888,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726889,"byte_end":9726967,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9726968,"byte_end":9727044,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727045,"byte_end":9727102,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727103,"byte_end":9727181,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727182,"byte_end":9727210,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727211,"byte_end":9727214,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727215,"byte_end":9727226,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727227,"byte_end":9727247,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727248,"byte_end":9727251,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727252,"byte_end":9727290,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727291,"byte_end":9727302,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727303,"byte_end":9727330,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727331,"byte_end":9727349,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727350,"byte_end":9727392,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727393,"byte_end":9727404,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727405,"byte_end":9727408,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727409,"byte_end":9727476,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727477,"byte_end":9727509,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727510,"byte_end":9727546,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727547,"byte_end":9727552,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727553,"byte_end":9727566,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727567,"byte_end":9727574,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727575,"byte_end":9727582,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727583,"byte_end":9727586,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727587,"byte_end":9727644,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727645,"byte_end":9727702,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727703,"byte_end":9727762,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727763,"byte_end":9727812,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/mod.rs","byte_start":9727813,"byte_end":9727862,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8342},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9730462,"byte_end":9730476,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-threaded\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22029,"byte_end":22060,"line_start":272,"line_end":272,"column_start":13,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8345},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/blocking.rs","byte_start":9733365,"byte_end":9733379,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"blocking\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":16564,"byte_end":16592,"line_start":15,"line_end":15,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":8364},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/spawn.rs","byte_start":9737551,"byte_end":9737556,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8366},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9738629,"byte_end":9738638,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":21701,"byte_end":21728,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9738548,"byte_end":9738611,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9743036,"byte_end":9743044,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":8526},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9745056,"byte_end":9745067,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":22242,"byte_end":22269,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8407},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9745964,"byte_end":9745967,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9745919,"byte_end":9745952,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8408},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747672,"byte_end":9747683,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746509,"byte_end":9746559,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746564,"byte_end":9746567,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746572,"byte_end":9746632,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746637,"byte_end":9746640,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746645,"byte_end":9746717,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746722,"byte_end":9746792,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746797,"byte_end":9746808,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746813,"byte_end":9746833,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746838,"byte_end":9746841,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746846,"byte_end":9746864,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746869,"byte_end":9746890,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746895,"byte_end":9746937,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746942,"byte_end":9746945,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9746950,"byte_end":9747022,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747027,"byte_end":9747080,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747085,"byte_end":9747118,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747123,"byte_end":9747140,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747145,"byte_end":9747156,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747161,"byte_end":9747164,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747169,"byte_end":9747203,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747208,"byte_end":9747244,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747249,"byte_end":9747267,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747272,"byte_end":9747289,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747294,"byte_end":9747297,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747302,"byte_end":9747373,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747378,"byte_end":9747428,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747433,"byte_end":9747466,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747471,"byte_end":9747488,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747493,"byte_end":9747504,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747509,"byte_end":9747512,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747517,"byte_end":9747553,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747558,"byte_end":9747576,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747581,"byte_end":9747598,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747603,"byte_end":9747608,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747613,"byte_end":9747620,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9747625,"byte_end":9747660,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8410},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750418,"byte_end":9750426,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748026,"byte_end":9748100,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748105,"byte_end":9748164,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748169,"byte_end":9748172,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748177,"byte_end":9748244,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748249,"byte_end":9748322,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748327,"byte_end":9748403,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748408,"byte_end":9748488,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748493,"byte_end":9748512,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748517,"byte_end":9748520,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748525,"byte_end":9748591,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748596,"byte_end":9748599,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748604,"byte_end":9748616,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748621,"byte_end":9748624,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748629,"byte_end":9748701,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748706,"byte_end":9748779,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748784,"byte_end":9748787,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748792,"byte_end":9748803,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748808,"byte_end":9748811,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748816,"byte_end":9748890,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748895,"byte_end":9748970,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9748975,"byte_end":9749050,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749055,"byte_end":9749132,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749137,"byte_end":9749140,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749145,"byte_end":9749178,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749183,"byte_end":9749202,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749207,"byte_end":9749239,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749244,"byte_end":9749264,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749269,"byte_end":9749272,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749277,"byte_end":9749318,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749323,"byte_end":9749361,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749366,"byte_end":9749401,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749406,"byte_end":9749450,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749455,"byte_end":9749514,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749519,"byte_end":9749541,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749546,"byte_end":9749561,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749566,"byte_end":9749584,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749589,"byte_end":9749600,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749605,"byte_end":9749633,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749638,"byte_end":9749644,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749649,"byte_end":9749656,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749661,"byte_end":9749695,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749700,"byte_end":9749707,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749712,"byte_end":9749744,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749749,"byte_end":9749769,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749774,"byte_end":9749777,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749782,"byte_end":9749823,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749828,"byte_end":9749866,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749871,"byte_end":9749906,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749911,"byte_end":9749955,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9749960,"byte_end":9750019,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750024,"byte_end":9750046,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750051,"byte_end":9750072,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750077,"byte_end":9750095,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750100,"byte_end":9750111,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750116,"byte_end":9750144,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750149,"byte_end":9750155,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750160,"byte_end":9750167,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750172,"byte_end":9750175,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750180,"byte_end":9750215,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750220,"byte_end":9750287,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750292,"byte_end":9750347,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750352,"byte_end":9750406,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8412},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751677,"byte_end":9751686,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750585,"byte_end":9750655,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750660,"byte_end":9750663,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750668,"byte_end":9750738,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750743,"byte_end":9750819,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750824,"byte_end":9750892,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750897,"byte_end":9750977,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9750982,"byte_end":9751054,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751059,"byte_end":9751134,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751139,"byte_end":9751195,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751200,"byte_end":9751203,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751208,"byte_end":9751222,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751227,"byte_end":9751230,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751235,"byte_end":9751246,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751251,"byte_end":9751271,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751276,"byte_end":9751279,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751284,"byte_end":9751302,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751307,"byte_end":9751328,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751333,"byte_end":9751380,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751385,"byte_end":9751427,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751432,"byte_end":9751454,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751459,"byte_end":9751489,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751494,"byte_end":9751512,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751517,"byte_end":9751534,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751539,"byte_end":9751544,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751549,"byte_end":9751556,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751561,"byte_end":9751564,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751569,"byte_end":9751604,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9751609,"byte_end":9751659,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8469},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760603,"byte_end":9760611,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8471}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759770,"byte_end":9759800,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759801,"byte_end":9759804,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759805,"byte_end":9759859,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759860,"byte_end":9759863,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759864,"byte_end":9759930,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759931,"byte_end":9759998,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9759999,"byte_end":9760056,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760057,"byte_end":9760126,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760127,"byte_end":9760130,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760131,"byte_end":9760145,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760146,"byte_end":9760149,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760150,"byte_end":9760157,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760158,"byte_end":9760180,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760181,"byte_end":9760205,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760206,"byte_end":9760233,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760234,"byte_end":9760239,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760240,"byte_end":9760243,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760244,"byte_end":9760276,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760277,"byte_end":9760313,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760314,"byte_end":9760327,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760328,"byte_end":9760331,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760332,"byte_end":9760364,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760365,"byte_end":9760401,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760402,"byte_end":9760405,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760406,"byte_end":9760442,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760443,"byte_end":9760483,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760484,"byte_end":9760501,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760502,"byte_end":9760515,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760516,"byte_end":9760523,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760524,"byte_end":9760531,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760532,"byte_end":9760591,"line_start":92,"line_end":92,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8471},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760653,"byte_end":9760658,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8474},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761186,"byte_end":9761191,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760736,"byte_end":9760800,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760805,"byte_end":9760808,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760813,"byte_end":9760874,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760879,"byte_end":9760882,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760887,"byte_end":9760903,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760908,"byte_end":9760911,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760916,"byte_end":9760923,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760928,"byte_end":9760950,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760955,"byte_end":9760979,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760984,"byte_end":9761011,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761016,"byte_end":9761021,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761026,"byte_end":9761029,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761034,"byte_end":9761066,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761071,"byte_end":9761126,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761131,"byte_end":9761144,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761149,"byte_end":9761156,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761161,"byte_end":9761168,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8478},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761665,"byte_end":9761669,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761416,"byte_end":9761482,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761487,"byte_end":9761490,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761495,"byte_end":9761507,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761512,"byte_end":9761515,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761520,"byte_end":9761581,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761586,"byte_end":9761653,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8481},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762157,"byte_end":9762165,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761910,"byte_end":9761976,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761981,"byte_end":9761984,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9761989,"byte_end":9762055,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762060,"byte_end":9762125,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762130,"byte_end":9762145,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8487},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762625,"byte_end":9762628,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762520,"byte_end":9762562,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762567,"byte_end":9762613,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8529},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764117,"byte_end":9764128,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8530}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763992,"byte_end":9764067,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8541},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8620},{"krate":0,"index":8621},{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8645},{"krate":0,"index":8822},{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899},{"krate":0,"index":8900},{"krate":0,"index":8934},{"krate":0,"index":8935},{"krate":0,"index":8936},{"krate":0,"index":8937},{"krate":0,"index":8938},{"krate":0,"index":9174},{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":8939},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9009}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/cfg.rs","byte_start":23098,"byte_end":23122,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764501,"byte_end":9764533,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764534,"byte_end":9764537,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764538,"byte_end":9764618,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764619,"byte_end":9764631,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764632,"byte_end":9764635,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764636,"byte_end":9764717,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764718,"byte_end":9764732,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764733,"byte_end":9764736,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764737,"byte_end":9764807,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764808,"byte_end":9764888,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764889,"byte_end":9764903,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764904,"byte_end":9764907,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764908,"byte_end":9764987,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9764988,"byte_end":9765060,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765061,"byte_end":9765130,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765131,"byte_end":9765134,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765135,"byte_end":9765212,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765213,"byte_end":9765231,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765232,"byte_end":9765235,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765236,"byte_end":9765307,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765308,"byte_end":9765327,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765328,"byte_end":9765331,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765332,"byte_end":9765402,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765403,"byte_end":9765406,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765407,"byte_end":9765421,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765422,"byte_end":9765425,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765426,"byte_end":9765472,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765473,"byte_end":9765476,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765477,"byte_end":9765484,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765485,"byte_end":9765516,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765517,"byte_end":9765520,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765521,"byte_end":9765549,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765550,"byte_end":9765553,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765554,"byte_end":9765557,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765558,"byte_end":9765576,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765577,"byte_end":9765598,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765599,"byte_end":9765651,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765652,"byte_end":9765692,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765693,"byte_end":9765698,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765699,"byte_end":9765706,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765707,"byte_end":9765710,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765711,"byte_end":9765790,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765791,"byte_end":9765869,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765870,"byte_end":9765882,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765883,"byte_end":9765886,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765887,"byte_end":9765894,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765895,"byte_end":9765936,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765937,"byte_end":9765940,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765941,"byte_end":9765969,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765970,"byte_end":9765993,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9765994,"byte_end":9765999,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766000,"byte_end":9766003,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766004,"byte_end":9766026,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766027,"byte_end":9766094,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766095,"byte_end":9766098,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766099,"byte_end":9766120,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766121,"byte_end":9766161,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766162,"byte_end":9766167,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766168,"byte_end":9766175,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766176,"byte_end":9766183,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766184,"byte_end":9766187,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766188,"byte_end":9766264,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766265,"byte_end":9766268,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766269,"byte_end":9766337,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766338,"byte_end":9766410,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766411,"byte_end":9766486,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766487,"byte_end":9766565,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766566,"byte_end":9766569,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766570,"byte_end":9766648,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766649,"byte_end":9766719,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766720,"byte_end":9766732,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766733,"byte_end":9766736,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766737,"byte_end":9766744,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766745,"byte_end":9766765,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766766,"byte_end":9766769,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766770,"byte_end":9766811,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766812,"byte_end":9766838,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766839,"byte_end":9766898,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766899,"byte_end":9766904,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766905,"byte_end":9766908,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766909,"byte_end":9766927,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766928,"byte_end":9766949,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9766950,"byte_end":9767022,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767023,"byte_end":9767047,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767048,"byte_end":9767082,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767083,"byte_end":9767128,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767129,"byte_end":9767138,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767139,"byte_end":9767144,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767145,"byte_end":9767152,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767153,"byte_end":9767156,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767157,"byte_end":9767200,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767201,"byte_end":9767242,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":8544},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547},{"krate":0,"index":8548},{"krate":0,"index":8549},{"krate":0,"index":8550},{"krate":0,"index":8551},{"krate":0,"index":8552},{"krate":0,"index":8553},{"krate":0,"index":8554},{"krate":0,"index":8555},{"krate":0,"index":8556},{"krate":0,"index":8557},{"krate":0,"index":15823},{"krate":0,"index":8558},{"krate":0,"index":8559},{"krate":0,"index":8560},{"krate":0,"index":8561},{"krate":0,"index":9026},{"krate":0,"index":9034},{"krate":0,"index":9037},{"krate":0,"index":9042},{"krate":0,"index":9045},{"krate":0,"index":9049},{"krate":0,"index":9047},{"krate":0,"index":9051},{"krate":0,"index":9055},{"krate":0,"index":9058},{"krate":0,"index":9065},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":8599},{"krate":0,"index":8609},{"krate":0,"index":8612},{"krate":0,"index":8614}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773393,"byte_end":9773425,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773426,"byte_end":9773429,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773430,"byte_end":9773470,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773471,"byte_end":9773474,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773475,"byte_end":9773512,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9026},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777771,"byte_end":9777781,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":9028},{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9031},{"krate":0,"index":9032},{"krate":0,"index":9033}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773753,"byte_end":9773785,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773786,"byte_end":9773789,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773790,"byte_end":9773867,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773868,"byte_end":9773908,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773909,"byte_end":9773912,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773913,"byte_end":9773924,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773925,"byte_end":9773928,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773929,"byte_end":9773996,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9773997,"byte_end":9774077,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774078,"byte_end":9774156,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774157,"byte_end":9774193,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774194,"byte_end":9774197,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774198,"byte_end":9774268,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774269,"byte_end":9774347,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774348,"byte_end":9774421,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774422,"byte_end":9774491,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774492,"byte_end":9774495,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774496,"byte_end":9774525,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774526,"byte_end":9774529,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774530,"byte_end":9774608,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774609,"byte_end":9774689,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774690,"byte_end":9774766,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774767,"byte_end":9774779,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774780,"byte_end":9774783,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774784,"byte_end":9774863,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774864,"byte_end":9774941,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9774942,"byte_end":9775018,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775019,"byte_end":9775052,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775053,"byte_end":9775056,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775057,"byte_end":9775135,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775136,"byte_end":9775212,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775213,"byte_end":9775291,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775292,"byte_end":9775331,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775332,"byte_end":9775335,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775336,"byte_end":9775356,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775357,"byte_end":9775360,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775361,"byte_end":9775459,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775460,"byte_end":9775557,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775558,"byte_end":9775599,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775600,"byte_end":9775603,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775604,"byte_end":9775704,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775705,"byte_end":9775770,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775771,"byte_end":9775774,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775775,"byte_end":9775857,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775858,"byte_end":9775885,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775886,"byte_end":9775889,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775890,"byte_end":9775901,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775902,"byte_end":9775905,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775906,"byte_end":9775953,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775954,"byte_end":9775957,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775958,"byte_end":9775976,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9775977,"byte_end":9776031,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776032,"byte_end":9776035,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776036,"byte_end":9776059,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776060,"byte_end":9776094,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776095,"byte_end":9776130,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776131,"byte_end":9776159,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776160,"byte_end":9776189,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776190,"byte_end":9776216,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776217,"byte_end":9776220,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776221,"byte_end":9776239,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776240,"byte_end":9776302,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776303,"byte_end":9776345,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776346,"byte_end":9776351,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776352,"byte_end":9776355,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776356,"byte_end":9776385,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776386,"byte_end":9776389,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776390,"byte_end":9776406,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776407,"byte_end":9776466,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776467,"byte_end":9776507,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776508,"byte_end":9776576,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776577,"byte_end":9776580,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776581,"byte_end":9776634,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776635,"byte_end":9776644,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776645,"byte_end":9776648,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776649,"byte_end":9776706,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776707,"byte_end":9776740,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776741,"byte_end":9776778,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776779,"byte_end":9776788,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776789,"byte_end":9776792,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776793,"byte_end":9776839,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776840,"byte_end":9776908,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776909,"byte_end":9776961,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776962,"byte_end":9776975,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776976,"byte_end":9776985,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776986,"byte_end":9776989,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9776990,"byte_end":9777073,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777074,"byte_end":9777151,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777152,"byte_end":9777185,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777186,"byte_end":9777239,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777240,"byte_end":9777253,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777254,"byte_end":9777257,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777258,"byte_end":9777289,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777290,"byte_end":9777299,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777300,"byte_end":9777305,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777306,"byte_end":9777313,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777314,"byte_end":9777317,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777318,"byte_end":9777353,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777354,"byte_end":9777395,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777396,"byte_end":9777419,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777420,"byte_end":9777496,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777497,"byte_end":9777528,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ [`Stream::poll`]: method@Self::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777529,"byte_end":9777568,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777569,"byte_end":9777606,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777607,"byte_end":9777645,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777646,"byte_end":9777664,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777665,"byte_end":9777704,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9777705,"byte_end":9777742,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9037},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778472,"byte_end":9778479,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778278,"byte_end":9778336,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778337,"byte_end":9778340,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778341,"byte_end":9778389,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778390,"byte_end":9778393,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778394,"byte_end":9778443,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":9045},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778947,"byte_end":9778950,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":9046}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778647,"byte_end":9778693,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778694,"byte_end":9778697,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778698,"byte_end":9778779,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778780,"byte_end":9778815,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778816,"byte_end":9778819,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778820,"byte_end":9778857,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9778858,"byte_end":9778911,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8565},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779928,"byte_end":9779931,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779628,"byte_end":9779666,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779671,"byte_end":9779674,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779679,"byte_end":9779752,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779757,"byte_end":9779760,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779765,"byte_end":9779779,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779784,"byte_end":9779787,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779792,"byte_end":9779803,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779808,"byte_end":9779842,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779847,"byte_end":9779904,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779909,"byte_end":9779916,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8566},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780849,"byte_end":9780862,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780001,"byte_end":9780068,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780073,"byte_end":9780076,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780081,"byte_end":9780152,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780157,"byte_end":9780226,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780231,"byte_end":9780243,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780248,"byte_end":9780251,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780256,"byte_end":9780270,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780275,"byte_end":9780278,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780283,"byte_end":9780294,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780299,"byte_end":9780333,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780338,"byte_end":9780368,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780373,"byte_end":9780376,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780381,"byte_end":9780401,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780406,"byte_end":9780429,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780434,"byte_end":9780494,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780499,"byte_end":9780502,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780507,"byte_end":9780570,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780575,"byte_end":9780599,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780604,"byte_end":9780662,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780667,"byte_end":9780676,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780681,"byte_end":9780684,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780689,"byte_end":9780752,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780757,"byte_end":9780813,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780818,"byte_end":9780825,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9780830,"byte_end":9780837,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8567},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782898,"byte_end":9782907,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781161,"byte_end":9781234,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781239,"byte_end":9781248,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781253,"byte_end":9781256,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781261,"byte_end":9781335,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781340,"byte_end":9781360,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781365,"byte_end":9781368,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781373,"byte_end":9781448,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781453,"byte_end":9781523,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781528,"byte_end":9781592,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781597,"byte_end":9781600,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781605,"byte_end":9781680,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781685,"byte_end":9781760,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781765,"byte_end":9781835,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781840,"byte_end":9781913,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781918,"byte_end":9781994,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9781999,"byte_end":9782033,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782038,"byte_end":9782041,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782046,"byte_end":9782098,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782103,"byte_end":9782106,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782111,"byte_end":9782123,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782128,"byte_end":9782131,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782136,"byte_end":9782196,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782201,"byte_end":9782204,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782209,"byte_end":9782223,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782228,"byte_end":9782231,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782236,"byte_end":9782251,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782256,"byte_end":9782259,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782264,"byte_end":9782275,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782280,"byte_end":9782333,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782338,"byte_end":9782341,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782346,"byte_end":9782366,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782371,"byte_end":9782394,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782399,"byte_end":9782447,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782452,"byte_end":9782492,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782497,"byte_end":9782557,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782562,"byte_end":9782565,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782570,"byte_end":9782597,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782602,"byte_end":9782646,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782651,"byte_end":9782694,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782699,"byte_end":9782706,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782711,"byte_end":9782718,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782723,"byte_end":9782726,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782731,"byte_end":9782762,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782767,"byte_end":9782802,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782807,"byte_end":9782840,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782845,"byte_end":9782868,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9782873,"byte_end":9782886,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8568},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784267,"byte_end":9784279,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784059,"byte_end":9784134,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784139,"byte_end":9784215,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784220,"byte_end":9784255,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":8571},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786651,"byte_end":9786657,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784896,"byte_end":9784973,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784978,"byte_end":9784990,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9784995,"byte_end":9784998,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785003,"byte_end":9785072,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785077,"byte_end":9785105,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785110,"byte_end":9785113,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785118,"byte_end":9785193,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785198,"byte_end":9785268,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785273,"byte_end":9785337,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785342,"byte_end":9785345,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785350,"byte_end":9785425,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785430,"byte_end":9785505,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785510,"byte_end":9785580,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785585,"byte_end":9785658,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785663,"byte_end":9785739,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785744,"byte_end":9785778,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785783,"byte_end":9785786,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785791,"byte_end":9785843,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785848,"byte_end":9785851,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785856,"byte_end":9785868,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785873,"byte_end":9785876,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785881,"byte_end":9785956,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785961,"byte_end":9785974,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785979,"byte_end":9785982,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9785987,"byte_end":9786001,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786006,"byte_end":9786009,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786014,"byte_end":9786029,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786034,"byte_end":9786037,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786042,"byte_end":9786053,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786058,"byte_end":9786090,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786095,"byte_end":9786123,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786128,"byte_end":9786131,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786136,"byte_end":9786156,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786161,"byte_end":9786184,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786189,"byte_end":9786237,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786242,"byte_end":9786310,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786315,"byte_end":9786318,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786323,"byte_end":9786350,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786355,"byte_end":9786399,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786404,"byte_end":9786447,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786452,"byte_end":9786459,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786464,"byte_end":9786471,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786476,"byte_end":9786479,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786484,"byte_end":9786515,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786520,"byte_end":9786555,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786560,"byte_end":9786593,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786598,"byte_end":9786621,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9786626,"byte_end":9786639,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8576},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788202,"byte_end":9788208,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787348,"byte_end":9787406,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787411,"byte_end":9787414,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787419,"byte_end":9787492,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787497,"byte_end":9787570,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787575,"byte_end":9787592,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787597,"byte_end":9787600,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787605,"byte_end":9787617,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787622,"byte_end":9787625,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787630,"byte_end":9787693,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787698,"byte_end":9787701,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787706,"byte_end":9787720,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787725,"byte_end":9787728,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787733,"byte_end":9787748,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787753,"byte_end":9787756,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787761,"byte_end":9787772,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787777,"byte_end":9787809,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787814,"byte_end":9787842,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787847,"byte_end":9787850,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787855,"byte_end":9787875,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787880,"byte_end":9787903,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787908,"byte_end":9787956,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9787961,"byte_end":9788029,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788034,"byte_end":9788037,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788042,"byte_end":9788069,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788074,"byte_end":9788118,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788123,"byte_end":9788166,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788171,"byte_end":9788178,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788183,"byte_end":9788190,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8578},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789860,"byte_end":9789868,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788746,"byte_end":9788819,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788824,"byte_end":9788827,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788832,"byte_end":9788907,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788912,"byte_end":9788929,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788934,"byte_end":9788937,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9788942,"byte_end":9789017,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789022,"byte_end":9789098,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789103,"byte_end":9789118,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789123,"byte_end":9789126,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789131,"byte_end":9789143,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789148,"byte_end":9789151,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789156,"byte_end":9789230,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789235,"byte_end":9789266,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789271,"byte_end":9789274,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789279,"byte_end":9789293,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789298,"byte_end":9789301,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789306,"byte_end":9789321,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789326,"byte_end":9789329,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789334,"byte_end":9789345,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789350,"byte_end":9789403,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789408,"byte_end":9789411,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789416,"byte_end":9789436,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789441,"byte_end":9789464,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789469,"byte_end":9789517,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789522,"byte_end":9789590,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789595,"byte_end":9789598,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789603,"byte_end":9789660,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789665,"byte_end":9789668,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789673,"byte_end":9789750,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789755,"byte_end":9789758,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789763,"byte_end":9789824,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789829,"byte_end":9789836,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9789841,"byte_end":9789848,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791761,"byte_end":9791766,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790611,"byte_end":9790679,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790684,"byte_end":9790698,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790703,"byte_end":9790706,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790711,"byte_end":9790786,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790791,"byte_end":9790811,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790816,"byte_end":9790819,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790824,"byte_end":9790894,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790899,"byte_end":9790969,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9790974,"byte_end":9791002,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791007,"byte_end":9791010,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791015,"byte_end":9791027,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791032,"byte_end":9791035,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791040,"byte_end":9791115,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791120,"byte_end":9791175,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791180,"byte_end":9791183,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791188,"byte_end":9791202,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791207,"byte_end":9791210,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791215,"byte_end":9791230,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791235,"byte_end":9791238,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791243,"byte_end":9791254,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791259,"byte_end":9791291,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791296,"byte_end":9791324,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791329,"byte_end":9791332,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791337,"byte_end":9791357,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791362,"byte_end":9791385,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791390,"byte_end":9791438,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791443,"byte_end":9791511,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791516,"byte_end":9791519,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791524,"byte_end":9791581,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791586,"byte_end":9791589,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791594,"byte_end":9791651,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791656,"byte_end":9791659,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791664,"byte_end":9791725,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791730,"byte_end":9791737,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791742,"byte_end":9791749,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8582},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792608,"byte_end":9792613,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791875,"byte_end":9791916,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791921,"byte_end":9791924,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9791929,"byte_end":9791995,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792000,"byte_end":9792003,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792008,"byte_end":9792074,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792079,"byte_end":9792082,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: method@Self::poll","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792087,"byte_end":9792118,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792123,"byte_end":9792126,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792131,"byte_end":9792145,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792150,"byte_end":9792153,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792158,"byte_end":9792169,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792174,"byte_end":9792206,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792211,"byte_end":9792239,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792244,"byte_end":9792247,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792252,"byte_end":9792272,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792277,"byte_end":9792300,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792305,"byte_end":9792353,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792358,"byte_end":9792361,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792366,"byte_end":9792424,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792429,"byte_end":9792432,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792437,"byte_end":9792478,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792483,"byte_end":9792486,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792491,"byte_end":9792519,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792524,"byte_end":9792527,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792532,"byte_end":9792572,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792577,"byte_end":9792584,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792589,"byte_end":9792596,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8583},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793085,"byte_end":9793093,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792768,"byte_end":9792843,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792848,"byte_end":9792851,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792856,"byte_end":9792870,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792875,"byte_end":9792878,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792883,"byte_end":9792894,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792899,"byte_end":9792931,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792936,"byte_end":9792939,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9792944,"byte_end":9793013,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793018,"byte_end":9793061,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793066,"byte_end":9793073,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8584},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793661,"byte_end":9793664,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793152,"byte_end":9793210,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793215,"byte_end":9793218,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793223,"byte_end":9793237,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793242,"byte_end":9793245,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793250,"byte_end":9793261,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793266,"byte_end":9793298,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793303,"byte_end":9793331,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793336,"byte_end":9793339,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793344,"byte_end":9793364,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793369,"byte_end":9793392,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793397,"byte_end":9793474,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793479,"byte_end":9793520,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793525,"byte_end":9793579,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793584,"byte_end":9793625,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793630,"byte_end":9793637,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793642,"byte_end":9793649,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8585},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794873,"byte_end":9794880,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793718,"byte_end":9793789,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793794,"byte_end":9793817,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793822,"byte_end":9793825,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793830,"byte_end":9793905,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793910,"byte_end":9793986,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9793991,"byte_end":9794067,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794072,"byte_end":9794148,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794153,"byte_end":9794176,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794181,"byte_end":9794184,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794189,"byte_end":9794261,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794266,"byte_end":9794299,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794304,"byte_end":9794307,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794312,"byte_end":9794324,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794329,"byte_end":9794332,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794337,"byte_end":9794409,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794414,"byte_end":9794436,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794441,"byte_end":9794444,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794449,"byte_end":9794463,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794468,"byte_end":9794471,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794476,"byte_end":9794483,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794488,"byte_end":9794520,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794525,"byte_end":9794553,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794558,"byte_end":9794561,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794566,"byte_end":9794586,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794591,"byte_end":9794614,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794619,"byte_end":9794667,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794672,"byte_end":9794675,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794680,"byte_end":9794741,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794746,"byte_end":9794778,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794783,"byte_end":9794786,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794791,"byte_end":9794837,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794842,"byte_end":9794849,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794854,"byte_end":9794861,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8586},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795596,"byte_end":9795604,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9794963,"byte_end":9795017,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795022,"byte_end":9795025,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795030,"byte_end":9795104,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795109,"byte_end":9795165,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795170,"byte_end":9795173,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795178,"byte_end":9795192,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795197,"byte_end":9795200,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795205,"byte_end":9795212,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795217,"byte_end":9795249,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795254,"byte_end":9795282,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795287,"byte_end":9795290,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795295,"byte_end":9795315,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795320,"byte_end":9795343,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795348,"byte_end":9795396,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795401,"byte_end":9795441,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795446,"byte_end":9795449,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795454,"byte_end":9795514,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795519,"byte_end":9795560,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795565,"byte_end":9795572,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9795577,"byte_end":9795584,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8616},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800267,"byte_end":9800274,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800212,"byte_end":9800255,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8617},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800383,"byte_end":9800390,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800320,"byte_end":9800371,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8618},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800508,"byte_end":9800518,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800448,"byte_end":9800496,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8619},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800629,"byte_end":9800637,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800561,"byte_end":9800617,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8631},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801215,"byte_end":9801226,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9800841,"byte_end":9800879,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9800880,"byte_end":9800883,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9800884,"byte_end":9800959,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9800960,"byte_end":9801037,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801038,"byte_end":9801073,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801074,"byte_end":9801077,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801078,"byte_end":9801096,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801097,"byte_end":9801100,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801101,"byte_end":9801177,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801178,"byte_end":9801207,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":8632},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802292,"byte_end":9802301,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801365,"byte_end":9801404,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801405,"byte_end":9801408,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801409,"byte_end":9801484,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801485,"byte_end":9801520,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801521,"byte_end":9801524,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801525,"byte_end":9801600,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801601,"byte_end":9801678,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801679,"byte_end":9801714,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801715,"byte_end":9801718,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801719,"byte_end":9801782,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801783,"byte_end":9801786,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801787,"byte_end":9801805,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801806,"byte_end":9801809,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801810,"byte_end":9801886,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801887,"byte_end":9801916,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801917,"byte_end":9801920,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801921,"byte_end":9801935,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801936,"byte_end":9801939,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801940,"byte_end":9801987,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801988,"byte_end":9801991,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9801992,"byte_end":9801999,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802000,"byte_end":9802043,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802044,"byte_end":9802047,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802048,"byte_end":9802066,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802067,"byte_end":9802088,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802089,"byte_end":9802141,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802142,"byte_end":9802182,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802183,"byte_end":9802188,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802189,"byte_end":9802196,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802197,"byte_end":9802200,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802201,"byte_end":9802242,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9068},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802561,"byte_end":9802566,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":9069}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802379,"byte_end":9802434,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802435,"byte_end":9802464,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802482,"byte_end":9802549,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8635},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803006,"byte_end":9803014,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802936,"byte_end":9802994,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8636},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803218,"byte_end":9803228,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803083,"byte_end":9803128,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803133,"byte_end":9803136,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803141,"byte_end":9803206,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8637},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803617,"byte_end":9803622,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803296,"byte_end":9803346,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803351,"byte_end":9803354,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803359,"byte_end":9803433,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803438,"byte_end":9803505,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803510,"byte_end":9803513,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803518,"byte_end":9803586,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803591,"byte_end":9803605,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":9125},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837092,"byte_end":9837097,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9835979,"byte_end":9836030,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836031,"byte_end":9836034,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836035,"byte_end":9836096,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836097,"byte_end":9836100,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836101,"byte_end":9836175,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836176,"byte_end":9836255,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836256,"byte_end":9836331,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836332,"byte_end":9836407,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836408,"byte_end":9836436,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836437,"byte_end":9836440,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836441,"byte_end":9836518,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836519,"byte_end":9836597,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836598,"byte_end":9836674,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836675,"byte_end":9836755,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836756,"byte_end":9836833,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836834,"byte_end":9836915,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836916,"byte_end":9836998,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9836999,"byte_end":9837002,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837003,"byte_end":9837063,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":8827},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837248,"byte_end":9837256,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837185,"byte_end":9837236,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837388,"byte_end":9837399,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837305,"byte_end":9837376,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":8829},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837587,"byte_end":9837598,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837521,"byte_end":9837575,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8830},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837735,"byte_end":9837749,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837649,"byte_end":9837723,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":9137},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838589,"byte_end":9838596,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":9138}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838393,"byte_end":9838453,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838454,"byte_end":9838516,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":8841},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838843,"byte_end":9838846,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838650,"byte_end":9838696,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838701,"byte_end":9838704,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838709,"byte_end":9838723,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838728,"byte_end":9838731,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838736,"byte_end":9838743,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838748,"byte_end":9838777,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838782,"byte_end":9838785,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838790,"byte_end":9838819,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838824,"byte_end":9838831,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8842},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838972,"byte_end":9838980,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838896,"byte_end":9838960,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8843},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839116,"byte_end":9839124,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839054,"byte_end":9839104,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8844},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839368,"byte_end":9839382,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839183,"byte_end":9839255,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839260,"byte_end":9839263,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839268,"byte_end":9839280,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839285,"byte_end":9839288,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839293,"byte_end":9839356,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8845},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840073,"byte_end":9840095,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839478,"byte_end":9839553,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839558,"byte_end":9839606,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839611,"byte_end":9839614,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839619,"byte_end":9839633,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839638,"byte_end":9839641,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839646,"byte_end":9839653,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839658,"byte_end":9839710,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839715,"byte_end":9839718,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839723,"byte_end":9839741,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839746,"byte_end":9839767,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839772,"byte_end":9839805,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839810,"byte_end":9839855,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839860,"byte_end":9839897,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839902,"byte_end":9839964,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9839969,"byte_end":9840039,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840044,"byte_end":9840049,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840054,"byte_end":9840061,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8846},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840818,"byte_end":9840843,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840207,"byte_end":9840282,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840287,"byte_end":9840346,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840351,"byte_end":9840354,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840359,"byte_end":9840373,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840378,"byte_end":9840381,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840386,"byte_end":9840393,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840398,"byte_end":9840450,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840455,"byte_end":9840458,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840463,"byte_end":9840481,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840486,"byte_end":9840507,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840512,"byte_end":9840545,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840550,"byte_end":9840595,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840600,"byte_end":9840637,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840642,"byte_end":9840707,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840712,"byte_end":9840784,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840789,"byte_end":9840794,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840799,"byte_end":9840806,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8847},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841614,"byte_end":9841621,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9840950,"byte_end":9841020,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841025,"byte_end":9841028,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841033,"byte_end":9841045,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841050,"byte_end":9841053,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841058,"byte_end":9841126,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841131,"byte_end":9841197,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841202,"byte_end":9841229,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841234,"byte_end":9841237,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841242,"byte_end":9841256,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841261,"byte_end":9841264,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841269,"byte_end":9841276,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841281,"byte_end":9841333,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841338,"byte_end":9841341,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841346,"byte_end":9841364,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841369,"byte_end":9841390,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841395,"byte_end":9841432,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841437,"byte_end":9841485,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841490,"byte_end":9841526,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841531,"byte_end":9841580,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841585,"byte_end":9841590,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841595,"byte_end":9841602,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8848},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841902,"byte_end":9841913,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841685,"byte_end":9841760,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841765,"byte_end":9841836,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9841841,"byte_end":9841890,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8849},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842252,"byte_end":9842263,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842035,"byte_end":9842110,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842115,"byte_end":9842186,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842191,"byte_end":9842240,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":8885},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845727,"byte_end":9845735,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9843985,"byte_end":9844062,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844063,"byte_end":9844094,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844095,"byte_end":9844098,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844099,"byte_end":9844179,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844180,"byte_end":9844219,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844220,"byte_end":9844223,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844224,"byte_end":9844297,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844298,"byte_end":9844301,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844302,"byte_end":9844314,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844315,"byte_end":9844318,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844319,"byte_end":9844364,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844365,"byte_end":9844368,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844369,"byte_end":9844383,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844384,"byte_end":9844387,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844388,"byte_end":9844395,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844396,"byte_end":9844434,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844435,"byte_end":9844438,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844439,"byte_end":9844457,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844458,"byte_end":9844479,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844480,"byte_end":9844549,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844550,"byte_end":9844553,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844554,"byte_end":9844584,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844585,"byte_end":9844615,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844616,"byte_end":9844646,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844647,"byte_end":9844650,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844651,"byte_end":9844694,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844695,"byte_end":9844700,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844701,"byte_end":9844708,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844709,"byte_end":9844712,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844713,"byte_end":9844787,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844788,"byte_end":9844791,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844792,"byte_end":9844869,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844870,"byte_end":9844945,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9844946,"byte_end":9845022,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845023,"byte_end":9845084,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845085,"byte_end":9845088,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845089,"byte_end":9845167,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845168,"byte_end":9845238,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845239,"byte_end":9845251,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845252,"byte_end":9845255,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845256,"byte_end":9845263,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845264,"byte_end":9845284,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845285,"byte_end":9845288,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845289,"byte_end":9845330,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845331,"byte_end":9845357,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845358,"byte_end":9845417,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845418,"byte_end":9845423,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845424,"byte_end":9845427,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845428,"byte_end":9845446,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845447,"byte_end":9845468,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845469,"byte_end":9845541,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845542,"byte_end":9845566,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845567,"byte_end":9845601,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845602,"byte_end":9845647,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845648,"byte_end":9845657,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845658,"byte_end":9845663,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845664,"byte_end":9845671,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845672,"byte_end":9845675,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845676,"byte_end":9845719,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":8886},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846621,"byte_end":9846632,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845885,"byte_end":9845958,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845959,"byte_end":9845993,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845994,"byte_end":9845997,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9845998,"byte_end":9846078,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846079,"byte_end":9846118,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846119,"byte_end":9846122,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846123,"byte_end":9846135,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846136,"byte_end":9846139,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846140,"byte_end":9846185,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846186,"byte_end":9846189,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846190,"byte_end":9846204,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846205,"byte_end":9846208,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846209,"byte_end":9846216,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846217,"byte_end":9846271,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846272,"byte_end":9846275,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846276,"byte_end":9846294,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846295,"byte_end":9846316,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846317,"byte_end":9846380,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846381,"byte_end":9846454,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846455,"byte_end":9846458,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846459,"byte_end":9846489,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846490,"byte_end":9846520,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846521,"byte_end":9846551,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846552,"byte_end":9846555,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846556,"byte_end":9846599,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846600,"byte_end":9846605,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846606,"byte_end":9846613,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9160},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846938,"byte_end":9846946,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":9161},{"krate":0,"index":9162}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9846830,"byte_end":9846909,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8888},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847191,"byte_end":9847200,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8889},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848292,"byte_end":9848296,"line_start":158,"line_end":158,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847687,"byte_end":9847756,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847761,"byte_end":9847764,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847769,"byte_end":9847783,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847788,"byte_end":9847791,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847796,"byte_end":9847803,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847808,"byte_end":9847828,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847833,"byte_end":9847836,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847841,"byte_end":9847869,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847874,"byte_end":9847877,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847882,"byte_end":9847900,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847905,"byte_end":9847926,"line_start":147,"line_end":147,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847931,"byte_end":9848000,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848005,"byte_end":9848008,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848013,"byte_end":9848043,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848048,"byte_end":9848078,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848083,"byte_end":9848113,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848118,"byte_end":9848121,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848126,"byte_end":9848169,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848174,"byte_end":9848179,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848184,"byte_end":9848191,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848196,"byte_end":9848236,"line_start":157,"line_end":157,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":8913},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849978,"byte_end":9849985,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9848963,"byte_end":9849040,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849041,"byte_end":9849044,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849045,"byte_end":9849124,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849125,"byte_end":9849197,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849198,"byte_end":9849211,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849212,"byte_end":9849215,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849216,"byte_end":9849233,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849234,"byte_end":9849237,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849238,"byte_end":9849316,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849317,"byte_end":9849347,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849348,"byte_end":9849351,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849352,"byte_end":9849432,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849433,"byte_end":9849460,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849461,"byte_end":9849464,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849465,"byte_end":9849479,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849480,"byte_end":9849483,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849484,"byte_end":9849544,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849545,"byte_end":9849548,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849549,"byte_end":9849560,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849561,"byte_end":9849590,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849591,"byte_end":9849620,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849621,"byte_end":9849624,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849625,"byte_end":9849653,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849654,"byte_end":9849657,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849658,"byte_end":9849680,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849681,"byte_end":9849719,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849720,"byte_end":9849747,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849748,"byte_end":9849751,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849752,"byte_end":9849825,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849826,"byte_end":9849892,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849893,"byte_end":9849948,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849949,"byte_end":9849954,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849955,"byte_end":9849962,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9849963,"byte_end":9849970,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8915},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851207,"byte_end":9851217,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850176,"byte_end":9850248,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850249,"byte_end":9850252,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850253,"byte_end":9850330,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850331,"byte_end":9850386,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850387,"byte_end":9850390,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850391,"byte_end":9850408,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850409,"byte_end":9850412,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850413,"byte_end":9850491,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850492,"byte_end":9850522,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850523,"byte_end":9850526,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850527,"byte_end":9850607,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850608,"byte_end":9850635,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850636,"byte_end":9850639,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850640,"byte_end":9850654,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850655,"byte_end":9850658,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850659,"byte_end":9850719,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850720,"byte_end":9850723,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850724,"byte_end":9850735,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850736,"byte_end":9850779,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850780,"byte_end":9850809,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850810,"byte_end":9850813,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850814,"byte_end":9850842,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850843,"byte_end":9850846,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850847,"byte_end":9850869,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850870,"byte_end":9850908,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850909,"byte_end":9850936,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850937,"byte_end":9850940,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9850941,"byte_end":9851019,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851020,"byte_end":9851034,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851035,"byte_end":9851121,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851122,"byte_end":9851177,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851178,"byte_end":9851183,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851184,"byte_end":9851191,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851192,"byte_end":9851199,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9625},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851592,"byte_end":9851599,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9627},{"krate":0,"index":9628}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9165},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851756,"byte_end":9851763,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851684,"byte_end":9851716,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8922},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852114,"byte_end":9852121,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852041,"byte_end":9852102,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8923},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852249,"byte_end":9852256,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852168,"byte_end":9852237,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":8924},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852385,"byte_end":9852395,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852315,"byte_end":9852373,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":9187},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870528,"byte_end":9870536,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9869954,"byte_end":9870013,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870014,"byte_end":9870083,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870084,"byte_end":9870087,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870088,"byte_end":9870101,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870102,"byte_end":9870105,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870106,"byte_end":9870136,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870137,"byte_end":9870155,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870156,"byte_end":9870184,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870185,"byte_end":9870218,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870219,"byte_end":9870249,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870250,"byte_end":9870253,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870254,"byte_end":9870276,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870277,"byte_end":9870368,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870369,"byte_end":9870372,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870373,"byte_end":9870383,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870384,"byte_end":9870446,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870447,"byte_end":9870498,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870499,"byte_end":9870504,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870505,"byte_end":9870512,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9870513,"byte_end":9870520,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9579},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871031,"byte_end":9871039,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":9581},{"krate":0,"index":9582},{"krate":0,"index":9583},{"krate":0,"index":9584}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8457379,"byte_end":8457388,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9191},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871506,"byte_end":9871513,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871399,"byte_end":9871472,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871477,"byte_end":9871494,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":9192},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871822,"byte_end":9871829,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871561,"byte_end":9871639,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871644,"byte_end":9871664,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871669,"byte_end":9871672,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871677,"byte_end":9871757,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871762,"byte_end":9871810,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9193},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9872124,"byte_end":9872134,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871889,"byte_end":9871951,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871956,"byte_end":9871959,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871964,"byte_end":9872041,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9872046,"byte_end":9872112,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":8971},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869087,"byte_end":9869092,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869037,"byte_end":9869077,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":8972},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869150,"byte_end":9869158,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869123,"byte_end":9869140,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":8973},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869247,"byte_end":9869252,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":8970},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869165,"byte_end":9869237,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181032,"byte_end":181038,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180941,"byte_end":180970,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180975,"byte_end":180978,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180983,"byte_end":181022,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181068,"byte_end":181074,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181045,"byte_end":181058,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197659,"byte_end":197671,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\", feature = \"stream\"))","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":197524,"byte_end":197575,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684513,"byte_end":8684523,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690294,"byte_end":8690298,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703523,"byte_end":8703527,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8706011,"byte_end":8706015,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8708440,"byte_end":8708444,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711415,"byte_end":8711419,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711517,"byte_end":8711521,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711750,"byte_end":8711754,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716679,"byte_end":8716690,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8727159,"byte_end":8727170,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8727288,"byte_end":8727299,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730573,"byte_end":8730584,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731413,"byte_end":8731423,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734495,"byte_end":8734502,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8735737,"byte_end":8735744,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736571,"byte_end":8736579,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740361,"byte_end":8740369,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8746344,"byte_end":8746352,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8746625,"byte_end":8746633,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8748238,"byte_end":8748246,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8750971,"byte_end":8750974,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8752789,"byte_end":8752792,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8765065,"byte_end":8765076,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8765835,"byte_end":8765846,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8766053,"byte_end":8766064,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8768686,"byte_end":8768697,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8754434,"byte_end":8754440,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757301,"byte_end":8757307,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757675,"byte_end":8757681,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757817,"byte_end":8757823,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8758966,"byte_end":8758972,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8759050,"byte_end":8759056,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8759191,"byte_end":8759196,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8760740,"byte_end":8760749,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775255,"byte_end":8775266,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8783057,"byte_end":8783068,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8783561,"byte_end":8783572,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8784653,"byte_end":8784664,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8784837,"byte_end":8784848,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8786996,"byte_end":8787008,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797878,"byte_end":8797890,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797915,"byte_end":8797927,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797946,"byte_end":8797958,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8800517,"byte_end":8800523,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8800831,"byte_end":8800837,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8803245,"byte_end":8803250,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8803554,"byte_end":8803559,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8806342,"byte_end":8806348,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8806656,"byte_end":8806662,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808782,"byte_end":8808790,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809707,"byte_end":8809716,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809966,"byte_end":8809974,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8810529,"byte_end":8810538,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8811487,"byte_end":8811492,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8811885,"byte_end":8811890,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812143,"byte_end":8812148,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812271,"byte_end":8812279,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812316,"byte_end":8812325,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812362,"byte_end":8812370,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812407,"byte_end":8812416,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812459,"byte_end":8812467,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812635,"byte_end":8812644,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8813334,"byte_end":8813338,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8825288,"byte_end":8825289,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8864574,"byte_end":8864575,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866333,"byte_end":8866334,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8901611,"byte_end":8901612,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903028,"byte_end":8903037,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8905216,"byte_end":8905225,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8906201,"byte_end":8906210,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8907041,"byte_end":8907050,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8907766,"byte_end":8907775,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909282,"byte_end":8909291,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8911128,"byte_end":8911137,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8911279,"byte_end":8911288,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8912000,"byte_end":8912009,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8912539,"byte_end":8912548,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8913027,"byte_end":8913036,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8914990,"byte_end":8914999,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8917277,"byte_end":8917286,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918176,"byte_end":8918185,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918667,"byte_end":8918676,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918963,"byte_end":8918972,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920141,"byte_end":8920146,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921286,"byte_end":8921291,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921570,"byte_end":8921575,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8922398,"byte_end":8922403,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8925446,"byte_end":8925450,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8928560,"byte_end":8928565,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8928894,"byte_end":8928899,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8929132,"byte_end":8929137,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8929958,"byte_end":8929963,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931143,"byte_end":8931148,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932400,"byte_end":8932405,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8933152,"byte_end":8933157,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8934555,"byte_end":8934559,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8935620,"byte_end":8935627,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8936992,"byte_end":8937001,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8944536,"byte_end":8944544,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2385}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8945770,"byte_end":8945775,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8947451,"byte_end":8947460,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8949524,"byte_end":8949536,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8952188,"byte_end":8952197,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8954031,"byte_end":8954037,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8955159,"byte_end":8955167,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2473},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8957000,"byte_end":8957004,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8957514,"byte_end":8957518,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958483,"byte_end":8958488,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959227,"byte_end":8959232,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8960011,"byte_end":8960016,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973555,"byte_end":8973567,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8974072,"byte_end":8974084,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8975623,"byte_end":8975635,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3018},{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961184,"byte_end":8961188,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962816,"byte_end":8962820,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8963477,"byte_end":8963481,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8965038,"byte_end":8965043,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8965836,"byte_end":8965844,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8967352,"byte_end":8967360,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980557,"byte_end":8980568,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991272,"byte_end":8991283,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991598,"byte_end":8991609,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992049,"byte_end":8992060,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992386,"byte_end":8992397,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992613,"byte_end":8992624,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993456,"byte_end":8993464,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8994102,"byte_end":8994110,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996260,"byte_end":8996268,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998723,"byte_end":8998731,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999051,"byte_end":8999060,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999873,"byte_end":8999881,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999975,"byte_end":8999984,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003047,"byte_end":9003059,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003262,"byte_end":9003274,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003284,"byte_end":9003297,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006131,"byte_end":9006144,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006449,"byte_end":9006463,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9007015,"byte_end":9007029,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9007189,"byte_end":9007203,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9008024,"byte_end":9008037,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9008133,"byte_end":9008147,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010282,"byte_end":9010291,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3460},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035097,"byte_end":9035106,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035542,"byte_end":9035551,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035904,"byte_end":9035913,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9036227,"byte_end":9036236,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9036980,"byte_end":9036989,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9037203,"byte_end":9037212,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038218,"byte_end":9038227,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3602},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3617},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051783,"byte_end":9051792,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3638},{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052228,"byte_end":9052237,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3641},{"krate":0,"index":3642}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052557,"byte_end":9052566,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052785,"byte_end":9052794,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054875,"byte_end":9054887,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055090,"byte_end":9055102,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055629,"byte_end":9055637,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3670}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057269,"byte_end":9057277,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3680}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058597,"byte_end":9058605,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058696,"byte_end":9058704,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059520,"byte_end":9059532,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066155,"byte_end":9066167,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066609,"byte_end":9066621,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066950,"byte_end":9066962,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3770}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9067087,"byte_end":9067099,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3772}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067457,"byte_end":9067465,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9068197,"byte_end":9068205,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3786},{"krate":0,"index":3787}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070332,"byte_end":9070344,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074848,"byte_end":9074860,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075176,"byte_end":9075188,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075630,"byte_end":9075642,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3829},{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075962,"byte_end":9075974,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9076099,"byte_end":9076111,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077103,"byte_end":9077111,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077431,"byte_end":9077440,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077924,"byte_end":9077932,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3857}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9078028,"byte_end":9078037,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9078975,"byte_end":9078985,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082318,"byte_end":9082328,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3911},{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082766,"byte_end":9082776,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083089,"byte_end":9083099,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3918}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083413,"byte_end":9083423,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3920},{"krate":0,"index":3921},{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083910,"byte_end":9083920,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9085437,"byte_end":9085447,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9085572,"byte_end":9085582,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9089939,"byte_end":9089945,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9090751,"byte_end":9090757,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4031}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9090971,"byte_end":9090977,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4084},{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":9131868,"byte_end":9131883,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":9132127,"byte_end":9132142,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4130},{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9136723,"byte_end":9136729,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9136873,"byte_end":9136879,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9137046,"byte_end":9137052,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9137519,"byte_end":9137525,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9139820,"byte_end":9139826,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9140002,"byte_end":9140008,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126484,"byte_end":9126489,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4210},{"krate":0,"index":4211}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126667,"byte_end":9126672,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4213}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126917,"byte_end":9126934,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4217}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9127083,"byte_end":9127100,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9127447,"byte_end":9127452,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4224}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128121,"byte_end":9128126,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128213,"byte_end":9128218,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128315,"byte_end":9128320,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128583,"byte_end":9128585,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4235}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128740,"byte_end":9128742,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128972,"byte_end":9128974,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4242}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9129097,"byte_end":9129099,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096515,"byte_end":9096522,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4285},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4318},{"krate":0,"index":4321}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112772,"byte_end":9112779,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4325}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113109,"byte_end":9113123,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113329,"byte_end":9113343,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113480,"byte_end":9113494,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115343,"byte_end":9115348,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9117861,"byte_end":9117866,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118831,"byte_end":9118841,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9119366,"byte_end":9119377,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4360},{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9119841,"byte_end":9119852,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120443,"byte_end":9120453,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4374}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120578,"byte_end":9120589,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4376}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120714,"byte_end":9120725,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9155937,"byte_end":9155951,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9159490,"byte_end":9159495,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9160182,"byte_end":9160196,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4524}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161083,"byte_end":9161097,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161263,"byte_end":9161270,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4532}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161728,"byte_end":9161735,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161903,"byte_end":9161906,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9163004,"byte_end":9163010,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4544},{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9170693,"byte_end":9170699,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9170724,"byte_end":9170730,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9171089,"byte_end":9171093,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9171871,"byte_end":9171875,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4607},{"krate":0,"index":4609},{"krate":0,"index":4611},{"krate":0,"index":4613},{"krate":0,"index":4615},{"krate":0,"index":4618},{"krate":0,"index":4620},{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9177626,"byte_end":9177632,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178257,"byte_end":9178266,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4639},{"krate":0,"index":4640},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181345,"byte_end":9181354,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181597,"byte_end":9181606,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181883,"byte_end":9181892,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181926,"byte_end":9181931,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4653}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9182609,"byte_end":9182616,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9183093,"byte_end":9183100,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4688},{"krate":0,"index":4699},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9185271,"byte_end":9185276,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4698}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197580,"byte_end":9197590,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197627,"byte_end":9197637,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197653,"byte_end":9197663,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197839,"byte_end":9197849,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197876,"byte_end":9197886,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4742},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9199112,"byte_end":9199122,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9199388,"byte_end":9199398,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9200645,"byte_end":9200652,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9202183,"byte_end":9202190,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9202280,"byte_end":9202287,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9204969,"byte_end":9204974,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9213830,"byte_end":9213838,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9215715,"byte_end":9215720,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4878}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9215879,"byte_end":9215887,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":9217705,"byte_end":9217713,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4906},{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9219461,"byte_end":9219474,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9220632,"byte_end":9220636,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9221036,"byte_end":9221040,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164023,"byte_end":9164027,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164058,"byte_end":9164062,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164199,"byte_end":9164207,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164248,"byte_end":9164256,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166180,"byte_end":9166184,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4958},{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166481,"byte_end":9166489,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5052},{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166740,"byte_end":9166744,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166937,"byte_end":9166945,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167076,"byte_end":9167080,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4962}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167249,"byte_end":9167257,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4965},{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167543,"byte_end":9167547,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4969}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167787,"byte_end":9167791,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167943,"byte_end":9167951,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9168167,"byte_end":9168171,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979},{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9223348,"byte_end":9223360,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5108}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9224996,"byte_end":9225008,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9225094,"byte_end":9225106,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9225267,"byte_end":9225274,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9227438,"byte_end":9227443,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9230112,"byte_end":9230119,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":9230622,"byte_end":9230634,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":9231507,"byte_end":9231515,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233135,"byte_end":9233147,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5156}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233373,"byte_end":9233385,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233415,"byte_end":9233427,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5196}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5206},{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9235398,"byte_end":9235404,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9235873,"byte_end":9235879,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5318}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236195,"byte_end":9236201,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236853,"byte_end":9236861,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236930,"byte_end":9236935,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9243983,"byte_end":9243988,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244019,"byte_end":9244024,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244055,"byte_end":9244061,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244092,"byte_end":9244098,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244957,"byte_end":9244962,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5423},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9251496,"byte_end":9251501,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256669,"byte_end":9256674,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5441}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256770,"byte_end":9256775,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256934,"byte_end":9256939,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5447}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9257127,"byte_end":9257133,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9260638,"byte_end":9260644,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264798,"byte_end":9264808,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264845,"byte_end":9264855,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264871,"byte_end":9264881,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5483},{"krate":0,"index":5484}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9265668,"byte_end":9265678,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5491}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9266484,"byte_end":9266488,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9270361,"byte_end":9270366,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9271844,"byte_end":9271849,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5526}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9272022,"byte_end":9272027,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9277791,"byte_end":9277796,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5685}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9281561,"byte_end":9281567,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5589}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9282342,"byte_end":9282349,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9286615,"byte_end":9286619,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9291405,"byte_end":9291411,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9291851,"byte_end":9291854,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":5626},{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9294425,"byte_end":9294431,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635},{"krate":0,"index":5636},{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9262696,"byte_end":9262706,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9263861,"byte_end":9263871,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264010,"byte_end":9264020,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5659}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264127,"byte_end":9264134,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5661}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264479,"byte_end":9264486,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5664}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5741}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5748},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9302278,"byte_end":9302281,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5778},{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9303003,"byte_end":9303011,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9303101,"byte_end":9303109,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5791},{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9305262,"byte_end":9305269,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5800}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9305377,"byte_end":9305384,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311456,"byte_end":9311465,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311579,"byte_end":9311588,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5846},{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311976,"byte_end":9311987,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5853}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312273,"byte_end":9312283,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858},{"krate":0,"index":5859},{"krate":0,"index":5860},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9316079,"byte_end":9316089,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5872}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9318438,"byte_end":9318444,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5879}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9318729,"byte_end":9318735,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324924,"byte_end":9324930,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326788,"byte_end":9326794,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361786,"byte_end":9361795,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361941,"byte_end":9361950,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361989,"byte_end":9361998,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9362949,"byte_end":9362958,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9363104,"byte_end":9363113,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9363152,"byte_end":9363161,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9364084,"byte_end":9364089,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9364269,"byte_end":9364274,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5993}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365852,"byte_end":9365859,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9366143,"byte_end":9366150,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6018},{"krate":0,"index":6019}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367126,"byte_end":9367132,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367187,"byte_end":9367193,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367582,"byte_end":9367585,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367631,"byte_end":9367634,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368017,"byte_end":9368020,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368068,"byte_end":9368071,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368586,"byte_end":9368592,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368681,"byte_end":9368687,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9369765,"byte_end":9369770,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9369818,"byte_end":9369823,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370223,"byte_end":9370231,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370279,"byte_end":9370287,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6075},{"krate":0,"index":6076},{"krate":0,"index":6077},{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371558,"byte_end":9371563,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371594,"byte_end":9371599,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371630,"byte_end":9371635,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372178,"byte_end":9372183,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6105},{"krate":0,"index":6106},{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9372797,"byte_end":9372803,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9373021,"byte_end":9373027,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9373146,"byte_end":9373152,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374238,"byte_end":9374247,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374468,"byte_end":9374477,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374599,"byte_end":9374608,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9375680,"byte_end":9375690,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6170}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9375886,"byte_end":9375896,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6175},{"krate":0,"index":6176}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9376795,"byte_end":9376799,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6187}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9376959,"byte_end":9376963,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377906,"byte_end":9377910,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378572,"byte_end":9378576,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379322,"byte_end":9379325,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379514,"byte_end":9379517,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379638,"byte_end":9379641,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9380486,"byte_end":9380491,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9380745,"byte_end":9380750,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382262,"byte_end":9382266,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382300,"byte_end":9382304,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382445,"byte_end":9382449,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382945,"byte_end":9382949,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383576,"byte_end":9383580,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384127,"byte_end":9384134,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384165,"byte_end":9384172,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384203,"byte_end":9384210,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384903,"byte_end":9384910,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390575,"byte_end":9390584,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6344},{"krate":0,"index":6347},{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397585,"byte_end":9397594,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9399133,"byte_end":9399142,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400358,"byte_end":9400362,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400572,"byte_end":9400576,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6381}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400709,"byte_end":9400713,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9401939,"byte_end":9401948,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6400}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9402169,"byte_end":9402178,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6404}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9402363,"byte_end":9402372,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403721,"byte_end":9403728,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403762,"byte_end":9403769,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6426}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403976,"byte_end":9403983,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6431},{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404593,"byte_end":9404597,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404807,"byte_end":9404811,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404944,"byte_end":9404948,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6454}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406467,"byte_end":9406476,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6467}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406736,"byte_end":9406745,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406938,"byte_end":9406947,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9438172,"byte_end":9438179,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6612}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9438534,"byte_end":9438541,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9361016,"byte_end":9361018,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457009,"byte_end":9457016,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6625},{"krate":0,"index":6626}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460296,"byte_end":9460313,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9470880,"byte_end":9470886,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6702}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471013,"byte_end":9471019,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471180,"byte_end":9471184,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471254,"byte_end":9471258,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474032,"byte_end":9474038,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474075,"byte_end":9474081,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474119,"byte_end":9474127,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474164,"byte_end":9474172,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474188,"byte_end":9474194,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9479830,"byte_end":9479834,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6734}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480226,"byte_end":9480232,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480412,"byte_end":9480418,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480572,"byte_end":9480580,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6743}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485445,"byte_end":9485453,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6762}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9488206,"byte_end":9488211,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491625,"byte_end":9491633,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6767},{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9492083,"byte_end":9492091,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9493275,"byte_end":9493279,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9494121,"byte_end":9494125,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6783},{"krate":0,"index":6784}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9494855,"byte_end":9494863,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8007}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9496175,"byte_end":9496179,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8012},{"krate":0,"index":8013}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9496903,"byte_end":9496907,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6788}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9497705,"byte_end":9497711,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498126,"byte_end":9498132,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498276,"byte_end":9498284,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498419,"byte_end":9498428,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498601,"byte_end":9498610,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6811}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498901,"byte_end":9498910,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6814}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499183,"byte_end":9499192,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499219,"byte_end":9499231,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499573,"byte_end":9499585,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9505894,"byte_end":9505899,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6868},{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9515881,"byte_end":9515887,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9516369,"byte_end":9516375,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6893},{"krate":0,"index":6894}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517013,"byte_end":9517019,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517151,"byte_end":9517157,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517564,"byte_end":9517572,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519344,"byte_end":9519352,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6935}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521780,"byte_end":9521788,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521848,"byte_end":9521856,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8020},{"krate":0,"index":8021}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522044,"byte_end":9522050,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6952},{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9533440,"byte_end":9533442,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6989}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9533843,"byte_end":9533845,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6997}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9534152,"byte_end":9534161,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7000}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9534423,"byte_end":9534435,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7003}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9536130,"byte_end":9536134,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7025}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9536767,"byte_end":9536775,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7032}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537041,"byte_end":9537045,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537094,"byte_end":9537098,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537577,"byte_end":9537579,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7045},{"krate":0,"index":7046},{"krate":0,"index":7047},{"krate":0,"index":7048}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538277,"byte_end":9538279,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7051}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538427,"byte_end":9538429,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538607,"byte_end":9538609,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7058}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9539009,"byte_end":9539011,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7062}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9539420,"byte_end":9539422,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7069},{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9542542,"byte_end":9542544,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9542980,"byte_end":9542984,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7085}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9543448,"byte_end":9543452,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7089}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9544001,"byte_end":9544013,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7094}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9545613,"byte_end":9545624,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7120},{"krate":0,"index":7121},{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9548341,"byte_end":9548343,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9554047,"byte_end":9554049,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9554326,"byte_end":9554328,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9557727,"byte_end":9557729,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558403,"byte_end":9558418,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558559,"byte_end":9558574,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559032,"byte_end":9559049,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560027,"byte_end":9560044,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7199},{"krate":0,"index":7200},{"krate":0,"index":7201},{"krate":0,"index":7206},{"krate":0,"index":7207}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562516,"byte_end":9562533,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562699,"byte_end":9562714,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563824,"byte_end":9563833,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7225}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563993,"byte_end":9564002,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564488,"byte_end":9564500,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564533,"byte_end":9564545,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7232}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564885,"byte_end":9564897,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7235}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565126,"byte_end":9565135,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565265,"byte_end":9565274,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565760,"byte_end":9565772,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7240}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566078,"byte_end":9566090,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566247,"byte_end":9566258,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7243}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566357,"byte_end":9566368,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7245}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566498,"byte_end":9566509,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9567013,"byte_end":9567029,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9567066,"byte_end":9567082,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8077}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573398,"byte_end":9573403,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573457,"byte_end":9573462,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573516,"byte_end":9573526,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573591,"byte_end":9573606,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573893,"byte_end":9573905,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7273}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574042,"byte_end":9574054,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574862,"byte_end":9574867,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7277},{"krate":0,"index":7278},{"krate":0,"index":7281},{"krate":0,"index":7284},{"krate":0,"index":7288},{"krate":0,"index":7289},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579440,"byte_end":9579445,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7293}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579529,"byte_end":9579534,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7296}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579683,"byte_end":9579693,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7299}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579794,"byte_end":9579804,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579951,"byte_end":9579961,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580118,"byte_end":9580128,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580294,"byte_end":9580304,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580482,"byte_end":9580497,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7315}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580594,"byte_end":9580609,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7318},{"krate":0,"index":7319}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580752,"byte_end":9580767,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580920,"byte_end":9580935,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7325}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9581097,"byte_end":9581112,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7328}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585076,"byte_end":9585084,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585117,"byte_end":9585125,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585388,"byte_end":9585394,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7362}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9589402,"byte_end":9589408,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7364}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9591146,"byte_end":9591154,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9591664,"byte_end":9591672,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9596502,"byte_end":9596510,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9599468,"byte_end":9599474,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601350,"byte_end":9601359,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7406}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601521,"byte_end":9601530,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601599,"byte_end":9601611,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7409}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601910,"byte_end":9601922,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603733,"byte_end":9603739,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7422},{"krate":0,"index":7425},{"krate":0,"index":7427},{"krate":0,"index":7432}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610040,"byte_end":9610046,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7435}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610185,"byte_end":9610193,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7439}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9614584,"byte_end":9614592,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7442}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9614739,"byte_end":9614747,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9615210,"byte_end":9615215,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7452},{"krate":0,"index":7453},{"krate":0,"index":7455},{"krate":0,"index":7459},{"krate":0,"index":7463},{"krate":0,"index":7465},{"krate":0,"index":7467},{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619587,"byte_end":9619592,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619629,"byte_end":9619634,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619659,"byte_end":9619664,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7477}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9620033,"byte_end":9620038,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7481}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9620433,"byte_end":9620438,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7488},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9622151,"byte_end":9622156,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9625634,"byte_end":9625643,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546},{"krate":0,"index":7547},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7553},{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9635564,"byte_end":9635573,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9635774,"byte_end":9635780,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7563},{"krate":0,"index":7564}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9636646,"byte_end":9636653,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9637331,"byte_end":9637338,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7570},{"krate":0,"index":7571}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9638137,"byte_end":9638144,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7575}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639786,"byte_end":9639793,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639840,"byte_end":9639852,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639945,"byte_end":9639957,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7580}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640101,"byte_end":9640113,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640160,"byte_end":9640175,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7583},{"krate":0,"index":7584}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640797,"byte_end":9640812,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9641098,"byte_end":9641113,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9641206,"byte_end":9641212,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9646481,"byte_end":9646490,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7635},{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7640},{"krate":0,"index":7642},{"krate":0,"index":7646},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9662684,"byte_end":9662693,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7659}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9662772,"byte_end":9662781,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7661}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663159,"byte_end":9663168,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663193,"byte_end":9663202,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663240,"byte_end":9663246,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7666},{"krate":0,"index":7668},{"krate":0,"index":7669},{"krate":0,"index":7673},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9669652,"byte_end":9669658,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9669731,"byte_end":9669737,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7681}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670159,"byte_end":9670171,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670351,"byte_end":9670363,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7686}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670507,"byte_end":9670519,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670566,"byte_end":9670581,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7689},{"krate":0,"index":7690}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671111,"byte_end":9671126,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7692}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671412,"byte_end":9671427,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671465,"byte_end":9671471,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9676884,"byte_end":9676892,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713},{"krate":0,"index":7714},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719},{"krate":0,"index":7720}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9680555,"byte_end":9680563,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7722}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9680916,"byte_end":9680927,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7724},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7728},{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7731}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683656,"byte_end":9683665,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7742},{"krate":0,"index":7743},{"krate":0,"index":7746}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685760,"byte_end":9685775,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686020,"byte_end":9686040,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7751}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686294,"byte_end":9686309,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686417,"byte_end":9686437,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9690258,"byte_end":9690273,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7771}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9690540,"byte_end":9690555,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7776}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691559,"byte_end":9691565,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691619,"byte_end":9691625,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691686,"byte_end":9691701,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691766,"byte_end":9691782,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691840,"byte_end":9691846,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7792},{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694963,"byte_end":9694978,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7799},{"krate":0,"index":7800}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695117,"byte_end":9695133,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7803},{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695275,"byte_end":9695291,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7807}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695413,"byte_end":9695419,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695503,"byte_end":9695509,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7813}],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9701784,"byte_end":9701795,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7844},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707722,"byte_end":9707733,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7848}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707819,"byte_end":9707830,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7850}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707963,"byte_end":9707974,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707999,"byte_end":9708010,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9708106,"byte_end":9708111,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7857},{"krate":0,"index":7858}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711652,"byte_end":9711661,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7889}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711841,"byte_end":9711850,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714009,"byte_end":9714017,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7900},{"krate":0,"index":7901}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715289,"byte_end":9715297,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7905}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716663,"byte_end":9716671,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716930,"byte_end":9716938,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7917}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717241,"byte_end":9717249,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717363,"byte_end":9717369,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718904,"byte_end":9718910,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719149,"byte_end":9719152,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719293,"byte_end":9719299,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719401,"byte_end":9719408,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7942}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719631,"byte_end":9719638,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7944}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719755,"byte_end":9719762,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719792,"byte_end":9719799,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719946,"byte_end":9719953,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7950},{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9738764,"byte_end":9738772,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8372},{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9745904,"byte_end":9745912,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8407},{"krate":0,"index":8408},{"krate":0,"index":8410},{"krate":0,"index":8412},{"krate":0,"index":8416},{"krate":0,"index":8418},{"krate":0,"index":8421}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9753754,"byte_end":9753762,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8425}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9753901,"byte_end":9753909,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8427},{"krate":0,"index":8428}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9754874,"byte_end":9754882,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8431}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9754963,"byte_end":9754971,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8433}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9755838,"byte_end":9755846,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8437},{"krate":0,"index":8438}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9756731,"byte_end":9756737,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8442},{"krate":0,"index":8444}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9757300,"byte_end":9757303,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8446},{"krate":0,"index":8448},{"krate":0,"index":8451}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760718,"byte_end":9760726,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8478},{"krate":0,"index":8481}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762502,"byte_end":9762510,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8487}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762718,"byte_end":9762726,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8491}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763047,"byte_end":9763062,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8495},{"krate":0,"index":8496}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763363,"byte_end":9763368,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8505}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763986,"byte_end":9763987,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764172,"byte_end":9764183,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8512}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764327,"byte_end":9764338,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8514}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764485,"byte_end":9764496,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9769081,"byte_end":9769086,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779608,"byte_end":9779618,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8565},{"krate":0,"index":8566},{"krate":0,"index":8567},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8576},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8581},{"krate":0,"index":8582},{"krate":0,"index":8583},{"krate":0,"index":8584},{"krate":0,"index":8585},{"krate":0,"index":8586},{"krate":0,"index":8587},{"krate":0,"index":8589}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797261,"byte_end":9797271,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797299,"byte_end":9797309,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8594}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797446,"byte_end":9797456,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8598}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797838,"byte_end":9797843,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8601},{"krate":0,"index":8602},{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9799970,"byte_end":9799975,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8611}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800105,"byte_end":9800108,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":8613}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800195,"byte_end":9800202,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802740,"byte_end":9802745,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8634},{"krate":0,"index":8635},{"krate":0,"index":8636},{"krate":0,"index":8637}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803723,"byte_end":9803728,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9817052,"byte_end":9817063,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656},{"krate":0,"index":8657},{"krate":0,"index":8658}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9819041,"byte_end":9819059,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8660},{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9819631,"byte_end":9819649,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8663}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9823622,"byte_end":9823627,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8689},{"krate":0,"index":8690},{"krate":0,"index":8691},{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8697},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8700},{"krate":0,"index":8701},{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9829855,"byte_end":9829860,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8705}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9830068,"byte_end":9830073,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9830098,"byte_end":9830103,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9830480,"byte_end":9830486,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9831131,"byte_end":9831137,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8721}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9831582,"byte_end":9831594,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8736},{"krate":0,"index":8737},{"krate":0,"index":8738},{"krate":0,"index":8739},{"krate":0,"index":8740}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9832504,"byte_end":9832516,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8743}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9832800,"byte_end":9832805,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8751}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9832896,"byte_end":9832901,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9808618,"byte_end":9808624,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9812273,"byte_end":9812279,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8806},{"krate":0,"index":8807},{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9814268,"byte_end":9814274,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8811}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9814751,"byte_end":9814756,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817},{"krate":0,"index":8818},{"krate":0,"index":8819}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9816373,"byte_end":9816378,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8821}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837173,"byte_end":9837178,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829},{"krate":0,"index":8830}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837893,"byte_end":9837898,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837925,"byte_end":9837930,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8833}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838636,"byte_end":9838643,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8841},{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846},{"krate":0,"index":8847},{"krate":0,"index":8848},{"krate":0,"index":8849}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842417,"byte_end":9842424,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8851}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842553,"byte_end":9842560,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8853}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842675,"byte_end":9842682,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8855},{"krate":0,"index":8856}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842847,"byte_end":9842854,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8858}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842959,"byte_end":9842966,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8860},{"krate":0,"index":8861}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843107,"byte_end":9843114,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8863},{"krate":0,"index":8864}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843275,"byte_end":9843282,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8866}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843389,"byte_end":9843396,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8868}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847132,"byte_end":9847140,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8888},{"krate":0,"index":8889}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848435,"byte_end":9848443,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8894},{"krate":0,"index":8895}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851775,"byte_end":9851782,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8918}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851911,"byte_end":9851918,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852456,"byte_end":9852463,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853041,"byte_end":9853048,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8930}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853192,"byte_end":9853199,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853236,"byte_end":9853241,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8933}],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871381,"byte_end":9871389,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9191},{"krate":0,"index":9192},{"krate":0,"index":9193}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9872204,"byte_end":9872212,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9196},{"krate":0,"index":9197}],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9863145,"byte_end":9863150,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8952},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9867902,"byte_end":9867907,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8961}],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9854966,"byte_end":9854971,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8992},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9860679,"byte_end":9860683,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9002}],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9873045,"byte_end":9873049,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237},{"krate":0,"index":9238}],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9874523,"byte_end":9874527,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9240}],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9881746,"byte_end":9881753,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9884782,"byte_end":9884792,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9278},{"krate":0,"index":9279},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9885931,"byte_end":9885936,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9306}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9886278,"byte_end":9886284,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9313},{"krate":0,"index":9316},{"krate":0,"index":9319},{"krate":0,"index":9322}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9890236,"byte_end":9890241,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9327}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9890547,"byte_end":9890553,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9331}],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9892696,"byte_end":9892701,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9345},{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352}],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9894380,"byte_end":9894385,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9355}],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9894762,"byte_end":9894766,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9368},{"krate":0,"index":9369},{"krate":0,"index":9370},{"krate":0,"index":9371},{"krate":0,"index":9372},{"krate":0,"index":9374}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9895737,"byte_end":9895750,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9386},{"krate":0,"index":9387},{"krate":0,"index":9388}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9896578,"byte_end":9896591,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9391}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876125,"byte_end":9876129,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876166,"byte_end":9876170,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876193,"byte_end":9876197,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9877712,"byte_end":9877716,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9414}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9463}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9471}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9475},{"krate":0,"index":9476}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897403,"byte_end":9897410,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897447,"byte_end":9897454,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897492,"byte_end":9897501,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897687,"byte_end":9897694,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9520},{"krate":0,"index":9521}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898328,"byte_end":9898337,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898469,"byte_end":9898478,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9528}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898600,"byte_end":9898609,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9531}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14158,"byte_end":14164,"line_start":347,"line_end":347,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/mod.rs","byte_start":16275,"byte_end":16282,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14189,"byte_end":14191,"line_start":350,"line_end":350,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":896}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/mod.rs","byte_start":8677492,"byte_end":8677494,"line_start":51,"line_end":51,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/mod.rs","byte_start":8727411,"byte_end":8727415,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1092}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14219,"byte_end":14225,"line_start":354,"line_end":354,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14236,"byte_end":14238,"line_start":356,"line_end":356,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14248,"byte_end":14251,"line_start":357,"line_end":357,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72787,"byte_end":72790,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3263}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72894,"byte_end":72897,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3566}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/mod.rs","byte_start":72961,"byte_end":72965,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3711}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14283,"byte_end":14290,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":556}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14320,"byte_end":14327,"line_start":365,"line_end":365,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4103}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14340,"byte_end":14347,"line_start":368,"line_end":368,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14398,"byte_end":14404,"line_start":373,"line_end":373,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5750}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/mod.rs","byte_start":9299448,"byte_end":9299452,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5811}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14435,"byte_end":14441,"line_start":377,"line_end":377,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":5931}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14470,"byte_end":14474,"line_start":381,"line_end":381,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6620}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454754,"byte_end":9454763,"line_start":435,"line_end":435,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6634}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9454921,"byte_end":9454925,"line_start":442,"line_end":442,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6821}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/mod.rs","byte_start":9503311,"byte_end":9503316,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7220}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455072,"byte_end":9455079,"line_start":450,"line_end":450,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7384}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mod.rs","byte_start":9455393,"byte_end":9455398,"line_start":463,"line_end":463,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7864}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14538,"byte_end":14542,"line_start":388,"line_end":388,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8337}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/lib.rs","byte_start":14596,"byte_end":14600,"line_start":393,"line_end":393,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8541}},{"kind":"Mod","span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/mod.rs","byte_start":9767370,"byte_end":9767381,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":8544}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29721,"byte_end":29730,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":29746,"byte_end":29755,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/macros/scoped_tls.rs","byte_start":30105,"byte_end":30110,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/dir_builder.rs","byte_start":8684513,"byte_end":8684523,"line_start":26,"line_end":26,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8690294,"byte_end":8690298,"line_start":104,"line_end":104,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8703523,"byte_end":8703527,"line_start":539,"line_end":539,"column_start":20,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8706011,"byte_end":8706015,"line_start":606,"line_end":606,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8708440,"byte_end":8708444,"line_start":676,"line_end":676,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711415,"byte_end":8711419,"line_start":764,"line_end":764,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711517,"byte_end":8711521,"line_start":770,"line_end":770,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/file.rs","byte_start":8711750,"byte_end":8711754,"line_start":779,"line_end":779,"column_start":37,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":967},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8716679,"byte_end":8716690,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8727159,"byte_end":8727170,"line_start":393,"line_end":393,"column_start":37,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/open_options.rs","byte_start":8727288,"byte_end":8727299,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1329},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/open_options_ext.rs","byte_start":8730573,"byte_end":8730584,"line_start":69,"line_end":69,"column_start":25,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1329},"to":{"krate":0,"index":1107}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/os/unix/dir_builder_ext.rs","byte_start":8731413,"byte_end":8731423,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":1116}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8734495,"byte_end":8734502,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8735737,"byte_end":8735744,"line_start":88,"line_end":88,"column_start":32,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1336},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8736571,"byte_end":8736579,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/fs/read_dir.rs","byte_start":8740361,"byte_end":8740369,"line_start":240,"line_end":240,"column_start":22,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1350},"to":{"krate":1,"index":8757}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":31866,"byte_end":31875,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":32038,"byte_end":32047,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/maybe_done.rs","byte_start":33234,"byte_end":33243,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":33997,"byte_end":34003,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34217,"byte_end":34223,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/poll_fn.rs","byte_start":34365,"byte_end":34371,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34902,"byte_end":34907,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/ready.rs","byte_start":34934,"byte_end":34939,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/future/try_join.rs","byte_start":36136,"byte_end":36144,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1375},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8746344,"byte_end":8746352,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8746625,"byte_end":8746633,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8748238,"byte_end":8748246,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1474},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8750971,"byte_end":8750974,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/blocking.rs","byte_start":8752789,"byte_end":8752792,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":47374,"byte_end":47383,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49833,"byte_end":49836,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":34}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":49996,"byte_end":49999,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":2,"index":32005},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_buf_read.rs","byte_start":50628,"byte_end":50634,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56598,"byte_end":56601,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":56744,"byte_end":56747,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":32005},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_read.rs","byte_start":57543,"byte_end":57549,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":59975,"byte_end":59978,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60121,"byte_end":60124,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":32005},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_seek.rs","byte_start":60578,"byte_end":60584,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68489,"byte_end":68492,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":68640,"byte_end":68643,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":32005},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69212,"byte_end":69215,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":69723,"byte_end":69729,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70242,"byte_end":70248,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":70764,"byte_end":70770,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/async_write.rs","byte_start":71281,"byte_end":71287,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":1,"index":7037},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8765065,"byte_end":8765076,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1705},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8765835,"byte_end":8765846,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8766053,"byte_end":8766064,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/scheduled_io.rs","byte_start":8768686,"byte_end":8768697,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1705},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8754434,"byte_end":8754440,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757301,"byte_end":8757307,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1573},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757675,"byte_end":8757681,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8757817,"byte_end":8757823,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8758966,"byte_end":8758972,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8759050,"byte_end":8759056,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8759191,"byte_end":8759196,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/driver/mod.rs","byte_start":8760740,"byte_end":8760749,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8775255,"byte_end":8775266,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8783057,"byte_end":8783068,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8783561,"byte_end":8783572,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1731},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8784653,"byte_end":8784664,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/poll_evented.rs","byte_start":8784837,"byte_end":8784848,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8786996,"byte_end":8787008,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797878,"byte_end":8797890,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797915,"byte_end":8797927,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/registration.rs","byte_start":8797946,"byte_end":8797958,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8800517,"byte_end":8800523,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1788},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stderr.rs","byte_start":8800831,"byte_end":8800837,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1788},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8803245,"byte_end":8803250,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1793},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdin.rs","byte_start":8803554,"byte_end":8803559,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1793},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8806342,"byte_end":8806348,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1798},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/stdout.rs","byte_start":8806656,"byte_end":8806662,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1798},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8808782,"byte_end":8808790,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809707,"byte_end":8809716,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8809966,"byte_end":8809974,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1916},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8810529,"byte_end":8810538,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1919},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8811487,"byte_end":8811492,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8811885,"byte_end":8811890,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812143,"byte_end":8812148,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1825},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812271,"byte_end":8812279,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812316,"byte_end":8812325,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812362,"byte_end":8812370,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812407,"byte_end":8812416,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812459,"byte_end":8812467,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1916},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/split.rs","byte_start":8812635,"byte_end":8812644,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1919},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/seek.rs","byte_start":8813334,"byte_end":8813338,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8816255,"byte_end":8816267,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_buf_read_ext.rs","byte_start":8825288,"byte_end":8825289,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1948},"to":{"krate":0,"index":2614}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8827316,"byte_end":8827325,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_read_ext.rs","byte_start":8864574,"byte_end":8864575,"line_start":1112,"line_end":1112,"column_start":46,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1995},"to":{"krate":0,"index":2622}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8865454,"byte_end":8865463,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_seek_ext.rs","byte_start":8866333,"byte_end":8866334,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2006},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8868391,"byte_end":8868401,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/async_write_ext.rs","byte_start":8901611,"byte_end":8901612,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8903028,"byte_end":8903037,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":12234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8905216,"byte_end":8905225,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8906201,"byte_end":8906210,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8907041,"byte_end":8907050,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12234},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_reader.rs","byte_start":8907766,"byte_end":8907775,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12234},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8909282,"byte_end":8909291,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8911128,"byte_end":8911137,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12220},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8911279,"byte_end":8911288,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12220},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8912000,"byte_end":8912009,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8912539,"byte_end":8912548,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_stream.rs","byte_start":8913027,"byte_end":8913036,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12220},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8914990,"byte_end":8914999,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8917277,"byte_end":8917286,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918176,"byte_end":8918185,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918667,"byte_end":8918676,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12157},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/buf_writer.rs","byte_start":8918963,"byte_end":8918972,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12157},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8920141,"byte_end":8920146,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921286,"byte_end":8921291,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12108},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8921570,"byte_end":8921575,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/chain.rs","byte_start":8922398,"byte_end":8922403,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12108},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/copy.rs","byte_start":8925446,"byte_end":8925450,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8928560,"byte_end":8928565,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8928894,"byte_end":8928899,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2740},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/empty.rs","byte_start":8929132,"byte_end":8929137,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/flush.rs","byte_start":8929958,"byte_end":8929963,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2743},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8931143,"byte_end":8931148,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":12085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8932400,"byte_end":8932405,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":12085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/lines.rs","byte_start":8933152,"byte_end":8933157,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":12085},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read.rs","byte_start":8934555,"byte_end":8934559,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2751},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_buf.rs","byte_start":8935620,"byte_end":8935627,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_exact.rs","byte_start":8936992,"byte_end":8937001,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2771},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_line.rs","byte_start":8944536,"byte_end":8944544,"line_start":85,"line_end":85,"column_start":51,"column_end":59},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2925},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8945770,"byte_end":8945775,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_end.rs","byte_start":8947451,"byte_end":8947460,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2936},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_to_string.rs","byte_start":8949524,"byte_end":8949536,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2947},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/read_until.rs","byte_start":8952188,"byte_end":8952197,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/repeat.rs","byte_start":8954031,"byte_end":8954037,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2970},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/shutdown.rs","byte_start":8955159,"byte_end":8955167,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2974},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8957000,"byte_end":8957004,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2982},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/sink.rs","byte_start":8957514,"byte_end":8957518,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8958483,"byte_end":8958488,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8959227,"byte_end":8959232,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/split.rs","byte_start":8960011,"byte_end":8960016,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11251},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8973555,"byte_end":8973567,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8974072,"byte_end":8974084,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11205},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/stream_reader.rs","byte_start":8975623,"byte_end":8975635,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11205},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8961184,"byte_end":8961188,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8962816,"byte_end":8962820,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11160},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/take.rs","byte_start":8963477,"byte_end":8963481,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11160},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write.rs","byte_start":8965038,"byte_end":8965043,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3023},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_all.rs","byte_start":8965836,"byte_end":8965844,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/io/util/write_buf.rs","byte_start":8967352,"byte_end":8967360,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3041},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":73921,"byte_end":73938,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":368},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74388,"byte_end":74398,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":147}},"from":{"krate":1,"index":7191},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74438,"byte_end":74448,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":7191},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74729,"byte_end":74741,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":1,"index":7219},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":74781,"byte_end":74793,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":1,"index":7219},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75053,"byte_end":75065,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":7222},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":75105,"byte_end":75117,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":7222},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78793,"byte_end":78799,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":78843,"byte_end":78849,"line_start":208,"line_end":208,"column_start":40,"column_end":46},"kind":{"Impl":{"id":156}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80215,"byte_end":80225,"line_start":259,"line_end":259,"column_start":25,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3235},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/addr.rs","byte_start":80873,"byte_end":80882,"line_start":277,"line_end":277,"column_start":27,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3244},"to":{"krate":2,"index":5285}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8980557,"byte_end":8980568,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991272,"byte_end":8991283,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3527},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8991598,"byte_end":8991609,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":161}},"from":{"krate":22,"index":1033},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992049,"byte_end":8992060,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992386,"byte_end":8992397,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3527},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/listener.rs","byte_start":8992613,"byte_end":8992624,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3527},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8993456,"byte_end":8993464,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/incoming.rs","byte_start":8994102,"byte_end":8994110,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3529},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8996260,"byte_end":8996268,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8998723,"byte_end":8998731,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3535},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999051,"byte_end":8999060,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999873,"byte_end":8999881,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split.rs","byte_start":8999975,"byte_end":8999984,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003047,"byte_end":9003059,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3558},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003262,"byte_end":9003274,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3558},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9003284,"byte_end":9003297,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006131,"byte_end":9006144,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3549},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9006449,"byte_end":9006463,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9007015,"byte_end":9007029,"line_start":220,"line_end":220,"column_start":15,"column_end":29},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9007189,"byte_end":9007203,"line_start":228,"line_end":228,"column_start":21,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3553},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9008024,"byte_end":9008037,"line_start":257,"line_end":257,"column_start":27,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/split_owned.rs","byte_start":9008133,"byte_end":9008147,"line_start":263,"line_end":263,"column_start":27,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3553},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9010282,"byte_end":9010291,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035097,"byte_end":9035106,"line_start":834,"line_end":834,"column_start":39,"column_end":48},"kind":{"Impl":{"id":182}},"from":{"krate":22,"index":977},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035542,"byte_end":9035551,"line_start":848,"line_end":848,"column_start":34,"column_end":43},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9035904,"byte_end":9035913,"line_start":862,"line_end":862,"column_start":20,"column_end":29},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9036227,"byte_end":9036236,"line_start":876,"line_end":876,"column_start":21,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9036980,"byte_end":9036989,"line_start":905,"line_end":905,"column_start":21,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3564},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/tcp/stream.rs","byte_start":9037203,"byte_end":9037212,"line_start":916,"line_end":916,"column_start":22,"column_end":31},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9038218,"byte_end":9038227,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9051783,"byte_end":9051792,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":189}},"from":{"krate":22,"index":1091},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052228,"byte_end":9052237,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052557,"byte_end":9052566,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/socket.rs","byte_start":9052785,"byte_end":9052794,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3693},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9054875,"byte_end":9054887,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3705},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055090,"byte_end":9055102,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3705},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9055629,"byte_end":9055637,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9057269,"byte_end":9057277,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058597,"byte_end":9058605,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3695},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/udp/split.rs","byte_start":9058696,"byte_end":9058704,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9059520,"byte_end":9059532,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066155,"byte_end":9066167,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":29,"index":182},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066609,"byte_end":9066621,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9066950,"byte_end":9066962,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/datagram.rs","byte_start":9067087,"byte_end":9067099,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3954},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9067457,"byte_end":9067465,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/incoming.rs","byte_start":9068197,"byte_end":9068205,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3956},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9070332,"byte_end":9070344,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9074848,"byte_end":9074860,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3962},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075176,"byte_end":9075188,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":208}},"from":{"krate":29,"index":186},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075630,"byte_end":9075642,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9075962,"byte_end":9075974,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3962},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/listener.rs","byte_start":9076099,"byte_end":9076111,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3962},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077103,"byte_end":9077111,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3964},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077431,"byte_end":9077440,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3971},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9077924,"byte_end":9077932,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3964},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/split.rs","byte_start":9078028,"byte_end":9078037,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3971},"to":{"krate":2,"index":1947}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9078975,"byte_end":9078985,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082318,"byte_end":9082328,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":29,"index":190},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9082766,"byte_end":9082776,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083089,"byte_end":9083099,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083413,"byte_end":9083423,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3978},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9083910,"byte_end":9083920,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9085437,"byte_end":9085447,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3978},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/net/unix/stream.rs","byte_start":9085572,"byte_end":9085582,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3978},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84289,"byte_end":84298,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84472,"byte_end":84481,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_ptr.rs","byte_start":84630,"byte_end":84639,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":84983,"byte_end":84992,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85017,"byte_end":85026,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85036,"byte_end":85045,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85531,"byte_end":85540,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u16.rs","byte_start":85825,"byte_end":85834,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86175,"byte_end":86184,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86209,"byte_end":86218,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86228,"byte_end":86237,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86416,"byte_end":86425,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u32.rs","byte_start":86710,"byte_end":86719,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88834,"byte_end":88842,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88867,"byte_end":88875,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":88885,"byte_end":88893,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89068,"byte_end":89076,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_u8.rs","byte_start":89360,"byte_end":89368,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89708,"byte_end":89719,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89744,"byte_end":89755,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":89765,"byte_end":89776,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90459,"byte_end":90470,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90760,"byte_end":90771,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/atomic_usize.rs","byte_start":90935,"byte_end":90946,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/loom/std/unsafe_cell.rs","byte_start":91134,"byte_end":91144,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9089939,"byte_end":9089945,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9090751,"byte_end":9090757,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/either.rs","byte_start":9090971,"byte_end":9090977,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4011},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96248,"byte_end":96258,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96523,"byte_end":96533,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4037},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":96992,"byte_end":96997,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101722,"byte_end":101732,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":101841,"byte_end":101853,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":102240,"byte_end":102256,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103103,"byte_end":103119,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4091},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103660,"byte_end":103672,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/thread.rs","byte_start":103884,"byte_end":103889,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94870,"byte_end":94874,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":94877,"byte_end":94881,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95350,"byte_end":95353,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":261}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/park/mod.rs","byte_start":95442,"byte_end":95445,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":4219},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":9131868,"byte_end":9131883,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/orphan.rs","byte_start":9132127,"byte_end":9132142,"line_start":61,"line_end":61,"column_start":34,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4379},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9136625,"byte_end":9136630,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2079},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9136723,"byte_end":9136729,"line_start":31,"line_end":31,"column_start":17,"column_end":23},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5923},"to":{"krate":0,"index":4149}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9136873,"byte_end":9136879,"line_start":37,"line_end":37,"column_start":25,"column_end":31},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9137046,"byte_end":9137052,"line_start":49,"line_end":49,"column_start":15,"column_end":21},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9137519,"byte_end":9137525,"line_start":71,"line_end":71,"column_start":26,"column_end":32},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9139820,"byte_end":9139826,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4385},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/reap.rs","byte_start":9140002,"byte_end":9140008,"line_start":131,"line_end":131,"column_start":24,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4385},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126484,"byte_end":9126489,"line_start":47,"line_end":47,"column_start":29,"column_end":34},"kind":{"Impl":{"id":271}},"from":{"krate":1,"index":4332},"to":{"krate":0,"index":4109}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126667,"byte_end":9126672,"line_start":57,"line_end":57,"column_start":29,"column_end":34},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":4332},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9126917,"byte_end":9126934,"line_start":69,"line_end":69,"column_start":21,"column_end":38},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4214},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9127083,"byte_end":9127100,"line_start":75,"line_end":75,"column_start":43,"column_end":60},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4214},"to":{"krate":0,"index":4116}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9127447,"byte_end":9127452,"line_start":90,"line_end":90,"column_start":21,"column_end":26},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128121,"byte_end":9128126,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128213,"byte_end":9128218,"line_start":122,"line_end":122,"column_start":15,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4221},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128315,"byte_end":9128320,"line_start":128,"line_end":128,"column_start":17,"column_end":22},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4221},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128583,"byte_end":9128585,"line_start":141,"line_end":141,"column_start":22,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":3065}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128740,"byte_end":9128742,"line_start":150,"line_end":150,"column_start":23,"column_end":25},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":3124}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9128972,"byte_end":9128974,"line_start":163,"line_end":163,"column_start":21,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4408},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/unix/mod.rs","byte_start":9129097,"byte_end":9129099,"line_start":172,"line_end":172,"column_start":21,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4408},"to":{"krate":22,"index":16}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9096515,"byte_end":9096522,"line_start":161,"line_end":161,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9112772,"byte_end":9112779,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4414},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113109,"byte_end":9113123,"line_start":683,"line_end":683,"column_start":24,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4419},"to":{"krate":0,"index":4255}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113329,"byte_end":9113343,"line_start":695,"line_end":695,"column_start":24,"column_end":38},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9113480,"byte_end":9113494,"line_start":703,"line_end":703,"column_start":26,"column_end":40},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4419},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9115343,"byte_end":9115348,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9117861,"byte_end":9117866,"line_start":832,"line_end":832,"column_start":17,"column_end":22},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4426},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9118831,"byte_end":9118841,"line_start":867,"line_end":867,"column_start":21,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4433},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9119366,"byte_end":9119377,"line_start":885,"line_end":885,"column_start":20,"column_end":31},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4437},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9119841,"byte_end":9119852,"line_start":900,"line_end":900,"column_start":20,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4441},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120443,"byte_end":9120453,"line_start":921,"line_end":921,"column_start":22,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4433},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120578,"byte_end":9120589,"line_start":927,"line_end":927,"column_start":22,"column_end":33},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4437},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/process/mod.rs","byte_start":9120714,"byte_end":9120725,"line_start":933,"line_end":933,"column_start":22,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4441},"to":{"krate":1,"index":8778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/context.rs","byte_start":126539,"byte_end":126548,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":571},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9155937,"byte_end":9155951,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9159490,"byte_end":9159495,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4513},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9160182,"byte_end":9160196,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161083,"byte_end":9161097,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161263,"byte_end":9161270,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161728,"byte_end":9161735,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4984},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9161903,"byte_end":9161906,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":5,"index":4219},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/basic_scheduler.rs","byte_start":9163004,"byte_end":9163010,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9170693,"byte_end":9170699,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9170724,"byte_end":9170730,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9171089,"byte_end":9171093,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9171871,"byte_end":9171875,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/core.rs","byte_start":9177626,"byte_end":9177632,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9178257,"byte_end":9178266,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181345,"byte_end":9181354,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181597,"byte_end":9181606,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4996},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181883,"byte_end":9181892,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4996},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/error.rs","byte_start":9181926,"byte_end":9181931,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9182609,"byte_end":9182616,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9183093,"byte_end":9183100,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/harness.rs","byte_start":9185271,"byte_end":9185276,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4690},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197580,"byte_end":9197590,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197627,"byte_end":9197637,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197653,"byte_end":9197663,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197839,"byte_end":9197849,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9197876,"byte_end":9197886,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9199112,"byte_end":9199122,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/join.rs","byte_start":9199388,"byte_end":9199398,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9200645,"byte_end":9200652,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9202183,"byte_end":9202190,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/raw.rs","byte_start":9202280,"byte_end":9202287,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4763},"to":{"krate":2,"index":2048}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9204969,"byte_end":9204974,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9213830,"byte_end":9213838,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9215715,"byte_end":9215720,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/state.rs","byte_start":9215879,"byte_end":9215887,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/waker.rs","byte_start":9217705,"byte_end":9217713,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4896},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9219461,"byte_end":9219474,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9220632,"byte_end":9220636,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":5285}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/stack.rs","byte_start":9221036,"byte_end":9221040,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5032},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164023,"byte_end":9164027,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164058,"byte_end":9164062,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164199,"byte_end":9164207,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164248,"byte_end":9164256,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164381,"byte_end":9164385,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9164388,"byte_end":9164393,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166180,"byte_end":9166184,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166481,"byte_end":9166489,"line_start":134,"line_end":134,"column_start":22,"column_end":30},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166740,"byte_end":9166744,"line_start":144,"line_end":144,"column_start":22,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9166937,"byte_end":9166945,"line_start":152,"line_end":152,"column_start":22,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167076,"byte_end":9167080,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167249,"byte_end":9167257,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167543,"byte_end":9167547,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167787,"byte_end":9167791,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4930},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9167943,"byte_end":9167951,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/task/mod.rs","byte_start":9168167,"byte_end":9168171,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4930},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9223348,"byte_end":9223360,"line_start":85,"line_end":85,"column_start":6,"column_end":18},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9224996,"byte_end":9225008,"line_start":136,"line_end":136,"column_start":15,"column_end":27},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9225094,"byte_end":9225106,"line_start":142,"line_end":142,"column_start":21,"column_end":33},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5079},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9225267,"byte_end":9225274,"line_start":150,"line_end":150,"column_start":6,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9227438,"byte_end":9227443,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/pool.rs","byte_start":9230112,"byte_end":9230119,"line_start":303,"line_end":303,"column_start":21,"column_end":28},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5166},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/schedule.rs","byte_start":9230622,"byte_end":9230634,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5131},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/shutdown.rs","byte_start":9231507,"byte_end":9231515,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233135,"byte_end":9233147,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233373,"byte_end":9233385,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/blocking/task.rs","byte_start":9233415,"byte_end":9233427,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":129965,"byte_end":129972,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":137892,"byte_end":137899,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138448,"byte_end":138455,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":138975,"byte_end":138982,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":140925,"byte_end":140932,"line_start":451,"line_end":451,"column_start":10,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142878,"byte_end":142885,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/builder.rs","byte_start":142964,"byte_end":142971,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":592},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":143766,"byte_end":143778,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":145431,"byte_end":145436,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":146656,"byte_end":146677,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5232},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":147507,"byte_end":147512,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":148422,"byte_end":148427,"line_start":174,"line_end":174,"column_start":10,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149620,"byte_end":149625,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/enter.rs","byte_start":149755,"byte_end":149760,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":150818,"byte_end":150824,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":153920,"byte_end":153926,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":159716,"byte_end":159722,"line_start":284,"line_end":284,"column_start":10,"column_end":16},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163286,"byte_end":163301,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163449,"byte_end":163464,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":670},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/handle.rs","byte_start":163622,"byte_end":163637,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9235398,"byte_end":9235404,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9235873,"byte_end":9235879,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5299},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236195,"byte_end":9236201,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5299},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236853,"byte_end":9236861,"line_start":109,"line_end":109,"column_start":17,"column_end":25},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":550}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/park.rs","byte_start":9236930,"byte_end":9236935,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":165926,"byte_end":165931,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/shell.rs","byte_start":166537,"byte_end":166543,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/spawner.rs","byte_start":167159,"byte_end":167166,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9243983,"byte_end":9243988,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244019,"byte_end":9244024,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5397},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244055,"byte_end":9244061,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244092,"byte_end":9244098,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9244957,"byte_end":9244962,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9251496,"byte_end":9251501,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256669,"byte_end":9256674,"line_start":441,"line_end":441,"column_start":19,"column_end":24},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5388},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256770,"byte_end":9256775,"line_start":447,"line_end":447,"column_start":18,"column_end":23},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5385},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9256934,"byte_end":9256939,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9257127,"byte_end":9257133,"line_start":464,"line_end":464,"column_start":18,"column_end":24},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/queue.rs","byte_start":9260638,"byte_end":9260644,"line_start":595,"line_end":595,"column_start":27,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5392},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264798,"byte_end":9264808,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264845,"byte_end":9264855,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9264871,"byte_end":9264881,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/atomic_cell.rs","byte_start":9265668,"byte_end":9265678,"line_start":47,"line_end":47,"column_start":18,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5472},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9266484,"byte_end":9266488,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9270361,"byte_end":9270366,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9271844,"byte_end":9271849,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/idle.rs","byte_start":9272022,"byte_end":9272027,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5666},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9277791,"byte_end":9277796,"line_start":185,"line_end":185,"column_start":23,"column_end":28},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5681},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9281561,"byte_end":9281567,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9282342,"byte_end":9282349,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9286615,"byte_end":9286619,"line_start":444,"line_end":444,"column_start":6,"column_end":10},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9291405,"byte_end":9291411,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9291851,"byte_end":9291854,"line_start":616,"line_end":616,"column_start":25,"column_end":28},"kind":{"Impl":{"id":414}},"from":{"krate":5,"index":4219},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/worker.rs","byte_start":9294425,"byte_end":9294431,"line_start":694,"line_end":694,"column_start":6,"column_end":12},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9262696,"byte_end":9262706,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9263861,"byte_end":9263871,"line_start":86,"line_end":86,"column_start":21,"column_end":31},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264010,"byte_end":9264020,"line_start":92,"line_end":92,"column_start":15,"column_end":25},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264127,"byte_end":9264134,"line_start":100,"line_end":100,"column_start":6,"column_end":13},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/thread_pool/mod.rs","byte_start":9264479,"byte_end":9264486,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5690},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/runtime/mod.rs","byte_start":115508,"byte_end":115515,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":171769,"byte_end":171775,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":172543,"byte_end":172549,"line_start":85,"line_end":85,"column_start":10,"column_end":16},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":173316,"byte_end":173326,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174173,"byte_end":174189,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":174321,"byte_end":174337,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5737},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/coop.rs","byte_start":176077,"byte_end":176083,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9302278,"byte_end":9302281,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":428}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9303003,"byte_end":9303011,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9303101,"byte_end":9303109,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9305262,"byte_end":9305269,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5795},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/registry.rs","byte_start":9305377,"byte_end":9305384,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311456,"byte_end":9311465,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311579,"byte_end":9311588,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5840},"to":{"krate":0,"index":5772}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9311976,"byte_end":9311987,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5906},"to":{"krate":0,"index":5782}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9312273,"byte_end":9312283,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9316079,"byte_end":9316089,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9318438,"byte_end":9318444,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9318729,"byte_end":9318735,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9324924,"byte_end":9324930,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/signal/unix.rs","byte_start":9326788,"byte_end":9326794,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5923},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361786,"byte_end":9361795,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361941,"byte_end":9361950,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/all.rs","byte_start":9361989,"byte_end":9361998,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6519},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9362949,"byte_end":9362958,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9363104,"byte_end":9363113,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/any.rs","byte_start":9363152,"byte_end":9363161,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6530},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9364084,"byte_end":9364089,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":10287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/chain.rs","byte_start":9364269,"byte_end":9364274,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":10287},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365819,"byte_end":9365833,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":6080},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9365852,"byte_end":9365859,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":10266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9366143,"byte_end":9366150,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":10266},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367126,"byte_end":9367132,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":452}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367187,"byte_end":9367193,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":453}},"from":{"krate":5,"index":5316},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367582,"byte_end":9367585,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":454}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9367631,"byte_end":9367634,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":455}},"from":{"krate":5,"index":4556},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368017,"byte_end":9368020,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":456}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368068,"byte_end":9368071,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":457}},"from":{"krate":5,"index":90},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368586,"byte_end":9368592,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":458}},"from":{"krate":2,"index":32019},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9368681,"byte_end":9368687,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":459}},"from":{"krate":2,"index":32019},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9369765,"byte_end":9369770,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":460}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9369818,"byte_end":9369823,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":461}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370223,"byte_end":9370231,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":6009}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/collect.rs","byte_start":9370279,"byte_end":9370287,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":463}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":6080}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371558,"byte_end":9371563,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371594,"byte_end":9371599,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9371630,"byte_end":9371635,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/empty.rs","byte_start":9372178,"byte_end":9372183,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6541},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9372797,"byte_end":9372803,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":10193},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9373021,"byte_end":9373027,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":10193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter.rs","byte_start":9373146,"byte_end":9373152,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":10193},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374238,"byte_end":9374247,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":10148},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374468,"byte_end":9374477,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":10148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/filter_map.rs","byte_start":9374599,"byte_end":9374608,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":10148},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9375680,"byte_end":9375690,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":10120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fold.rs","byte_start":9375886,"byte_end":9375896,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":10120},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9376795,"byte_end":9376799,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":10072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/fuse.rs","byte_start":9376959,"byte_end":9376963,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":10072},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9377906,"byte_end":9377910,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6548},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/iter.rs","byte_start":9378572,"byte_end":9378576,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6548},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379322,"byte_end":9379325,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":10005},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379514,"byte_end":9379517,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":10005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/map.rs","byte_start":9379638,"byte_end":9379641,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":10005},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9380486,"byte_end":9380491,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":9956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/merge.rs","byte_start":9380745,"byte_end":9380750,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":9956},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382262,"byte_end":9382266,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382300,"byte_end":9382304,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/next.rs","byte_start":9382445,"byte_end":9382449,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6554},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9382945,"byte_end":9382949,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6562},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/once.rs","byte_start":9383576,"byte_end":9383580,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6562},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384127,"byte_end":9384134,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384165,"byte_end":9384172,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384203,"byte_end":9384210,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/pending.rs","byte_start":9384903,"byte_end":9384910,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6568},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9390575,"byte_end":9390584,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9397585,"byte_end":9397594,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/stream_map.rs","byte_start":9399133,"byte_end":9399142,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6575},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400358,"byte_end":9400362,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":9919},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400572,"byte_end":9400576,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":9919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip.rs","byte_start":9400709,"byte_end":9400713,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":9919},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9401939,"byte_end":9401948,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9402169,"byte_end":9402178,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":9874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/skip_while.rs","byte_start":9402363,"byte_end":9402372,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":9874},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403721,"byte_end":9403728,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403762,"byte_end":9403769,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/try_next.rs","byte_start":9403976,"byte_end":9403983,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6587},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404593,"byte_end":9404597,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":9837},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404807,"byte_end":9404811,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":9837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take.rs","byte_start":9404944,"byte_end":9404948,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":9837},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406467,"byte_end":9406476,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":9788},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406736,"byte_end":9406745,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":9788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/take_while.rs","byte_start":9406938,"byte_end":9406947,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":9788},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9438172,"byte_end":9438179,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":9765},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/timeout.rs","byte_start":9438534,"byte_end":9438541,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":9765},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9337028,"byte_end":9337034,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":21,"index":68},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/stream/mod.rs","byte_start":9361016,"byte_end":9361018,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6517},"to":{"krate":0,"index":6482}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9457009,"byte_end":9457016,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/barrier.rs","byte_start":9460296,"byte_end":9460313,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9470880,"byte_end":9470886,"line_start":340,"line_end":340,"column_start":32,"column_end":38},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471013,"byte_end":9471019,"line_start":346,"line_end":346,"column_start":36,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1950}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471180,"byte_end":9471184,"line_start":352,"line_end":352,"column_start":61,"column_end":65},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9471254,"byte_end":9471258,"line_start":353,"line_end":353,"column_start":61,"column_end":65},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474032,"byte_end":9474038,"line_start":444,"line_end":444,"column_start":31,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474075,"byte_end":9474081,"line_start":445,"line_end":445,"column_start":31,"column_end":37},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474119,"byte_end":9474127,"line_start":447,"line_end":447,"column_start":31,"column_end":39},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474164,"byte_end":9474172,"line_start":448,"line_end":448,"column_start":31,"column_end":39},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9474188,"byte_end":9474194,"line_start":450,"line_end":450,"column_start":9,"column_end":15},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9479830,"byte_end":9479834,"line_start":637,"line_end":637,"column_start":6,"column_end":10},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480226,"byte_end":9480232,"line_start":652,"line_end":652,"column_start":19,"column_end":25},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480412,"byte_end":9480418,"line_start":661,"line_end":661,"column_start":18,"column_end":24},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9480572,"byte_end":9480580,"line_start":669,"line_end":669,"column_start":9,"column_end":17},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9485445,"byte_end":9485453,"line_start":787,"line_end":787,"column_start":9,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9488206,"byte_end":9488211,"line_start":856,"line_end":856,"column_start":30,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6752},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9491625,"byte_end":9491633,"line_start":960,"line_end":960,"column_start":35,"column_end":43},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6659},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9492083,"byte_end":9492091,"line_start":979,"line_end":979,"column_start":18,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9493275,"byte_end":9493279,"line_start":1019,"line_end":1019,"column_start":12,"column_end":16},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9494121,"byte_end":9494125,"line_start":1049,"line_end":1049,"column_start":23,"column_end":27},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9494855,"byte_end":9494863,"line_start":1073,"line_end":1073,"column_start":20,"column_end":28},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9496175,"byte_end":9496179,"line_start":1115,"line_end":1115,"column_start":34,"column_end":38},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6690},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9496903,"byte_end":9496907,"line_start":1137,"line_end":1137,"column_start":21,"column_end":25},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9497705,"byte_end":9497711,"line_start":1166,"line_end":1166,"column_start":35,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6681},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498126,"byte_end":9498132,"line_start":1183,"line_end":1183,"column_start":24,"column_end":30},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6656},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498276,"byte_end":9498284,"line_start":1189,"line_end":1189,"column_start":24,"column_end":32},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498419,"byte_end":9498428,"line_start":1195,"line_end":1195,"column_start":13,"column_end":22},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498601,"byte_end":9498610,"line_start":1204,"line_end":1204,"column_start":22,"column_end":31},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6686},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9498901,"byte_end":9498910,"line_start":1214,"line_end":1214,"column_start":23,"column_end":32},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499183,"byte_end":9499192,"line_start":1223,"line_end":1223,"column_start":28,"column_end":37},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7978},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499219,"byte_end":9499231,"line_start":1225,"line_end":1225,"column_start":23,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7990},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/broadcast.rs","byte_start":9499573,"byte_end":9499585,"line_start":1235,"line_end":1235,"column_start":28,"column_end":40},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":7990},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9505894,"byte_end":9505899,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9515881,"byte_end":9515887,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/block.rs","byte_start":9516369,"byte_end":9516375,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6853},"to":{"krate":2,"index":2314}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517013,"byte_end":9517019,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517151,"byte_end":9517157,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6907},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9517564,"byte_end":9517572,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9519344,"byte_end":9519352,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521780,"byte_end":9521788,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6916},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9521848,"byte_end":9521856,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6916},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/bounded.rs","byte_start":9522044,"byte_end":9522050,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9533440,"byte_end":9533442,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9533843,"byte_end":9533845,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9534152,"byte_end":9534161,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9534423,"byte_end":9534435,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9536130,"byte_end":9536134,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9536767,"byte_end":9536775,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537041,"byte_end":9537045,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537094,"byte_end":9537098,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9537577,"byte_end":9537579,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538277,"byte_end":9538279,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538427,"byte_end":9538429,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9538607,"byte_end":9538609,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9539009,"byte_end":9539011,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6981},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9539420,"byte_end":9539422,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9542542,"byte_end":9542544,"line_start":344,"line_end":344,"column_start":21,"column_end":23},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9542980,"byte_end":9542984,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9543448,"byte_end":9543452,"line_start":387,"line_end":387,"column_start":21,"column_end":25},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7014},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9544001,"byte_end":9544013,"line_start":404,"line_end":404,"column_start":32,"column_end":44},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8022},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/chan.rs","byte_start":9545613,"byte_end":9545624,"line_start":475,"line_end":475,"column_start":20,"column_end":31},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":7004}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9548341,"byte_end":9548343,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9554047,"byte_end":9554049,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7139},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9554326,"byte_end":9554328,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/list.rs","byte_start":9557727,"byte_end":9557729,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7143},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558403,"byte_end":9558418,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9558559,"byte_end":9558574,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7179},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9559032,"byte_end":9559049,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7188},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9560027,"byte_end":9560044,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562516,"byte_end":9562533,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7188},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/unbounded.rs","byte_start":9562699,"byte_end":9562714,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563824,"byte_end":9563833,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":8035},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9563993,"byte_end":9564002,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":8035},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564488,"byte_end":9564500,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":8042},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564533,"byte_end":9564545,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9564885,"byte_end":9564897,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":8042},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565126,"byte_end":9565135,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":8053},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565265,"byte_end":9565274,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8053},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9565760,"byte_end":9565772,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8058},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566078,"byte_end":9566090,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":8058},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566247,"byte_end":9566258,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566357,"byte_end":9566368,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8068},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9566498,"byte_end":9566509,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8068},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9567013,"byte_end":9567029,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8078},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mpsc/error.rs","byte_start":9567066,"byte_end":9567082,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8078},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573398,"byte_end":9573403,"line_start":158,"line_end":158,"column_start":25,"column_end":30},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573457,"byte_end":9573462,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573516,"byte_end":9573526,"line_start":160,"line_end":160,"column_start":25,"column_end":35},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573591,"byte_end":9573606,"line_start":161,"line_end":161,"column_start":25,"column_end":40},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9573893,"byte_end":9573905,"line_start":171,"line_end":171,"column_start":23,"column_end":35},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8096},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574042,"byte_end":9574054,"line_start":177,"line_end":177,"column_start":16,"column_end":28},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8096},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9574862,"byte_end":9574867,"line_start":203,"line_end":203,"column_start":17,"column_end":22},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579440,"byte_end":9579445,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579529,"byte_end":9579534,"line_start":367,"line_end":367,"column_start":21,"column_end":26},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8089},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579683,"byte_end":9579693,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579794,"byte_end":9579804,"line_start":384,"line_end":384,"column_start":27,"column_end":37},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9579951,"byte_end":9579961,"line_start":391,"line_end":391,"column_start":30,"column_end":40},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580118,"byte_end":9580128,"line_start":397,"line_end":397,"column_start":45,"column_end":55},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580294,"byte_end":9580304,"line_start":403,"line_end":403,"column_start":49,"column_end":59},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7257},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580482,"byte_end":9580497,"line_start":411,"line_end":411,"column_start":26,"column_end":41},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580594,"byte_end":9580609,"line_start":417,"line_end":417,"column_start":27,"column_end":42},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580752,"byte_end":9580767,"line_start":424,"line_end":424,"column_start":30,"column_end":45},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9580920,"byte_end":9580935,"line_start":430,"line_end":430,"column_start":45,"column_end":60},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/mutex.rs","byte_start":9581097,"byte_end":9581112,"line_start":436,"line_end":436,"column_start":49,"column_end":64},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7261},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585076,"byte_end":9585084,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585117,"byte_end":9585125,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9585388,"byte_end":9585394,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9589402,"byte_end":9589408,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8101},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9591146,"byte_end":9591154,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9591664,"byte_end":9591672,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9596502,"byte_end":9596510,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/notify.rs","byte_start":9599468,"byte_end":9599474,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":8106},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601350,"byte_end":9601359,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":8142},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601521,"byte_end":9601530,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":8142},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601599,"byte_end":9601611,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":8154},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9601910,"byte_end":9601922,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8154},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9603733,"byte_end":9603739,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610040,"byte_end":9610046,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8130},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9610185,"byte_end":9610193,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9614584,"byte_end":9614592,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9614739,"byte_end":9614747,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8136},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9615210,"byte_end":9615215,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619587,"byte_end":9619592,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619629,"byte_end":9619634,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9619659,"byte_end":9619664,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9620033,"byte_end":9620038,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7412},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9620433,"byte_end":9620438,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/oneshot.rs","byte_start":9622151,"byte_end":9622156,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":8167},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9625634,"byte_end":9625643,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9635564,"byte_end":9635573,"line_start":357,"line_end":357,"column_start":21,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9635774,"byte_end":9635780,"line_start":365,"line_end":365,"column_start":6,"column_end":12},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9636646,"byte_end":9636653,"line_start":394,"line_end":394,"column_start":17,"column_end":24},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9637331,"byte_end":9637338,"line_start":418,"line_end":418,"column_start":10,"column_end":17},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9638137,"byte_end":9638144,"line_start":448,"line_end":448,"column_start":15,"column_end":22},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639786,"byte_end":9639793,"line_start":485,"line_end":485,"column_start":22,"column_end":29},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7531},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639840,"byte_end":9639852,"line_start":489,"line_end":489,"column_start":6,"column_end":18},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":8180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9639945,"byte_end":9639957,"line_start":495,"line_end":495,"column_start":23,"column_end":35},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":8180},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640101,"byte_end":9640113,"line_start":501,"line_end":501,"column_start":28,"column_end":40},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640160,"byte_end":9640175,"line_start":505,"line_end":505,"column_start":6,"column_end":21},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9640797,"byte_end":9640812,"line_start":526,"line_end":526,"column_start":23,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8173},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9641098,"byte_end":9641113,"line_start":535,"line_end":535,"column_start":28,"column_end":43},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8173},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/batch_semaphore.rs","byte_start":9641206,"byte_end":9641212,"line_start":540,"line_end":540,"column_start":35,"column_end":41},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7537},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9646481,"byte_end":9646490,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9662684,"byte_end":9662693,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9662772,"byte_end":9662781,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663159,"byte_end":9663168,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663193,"byte_end":9663202,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7619},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9663240,"byte_end":9663246,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9669652,"byte_end":9669658,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9669731,"byte_end":9669737,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8185},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670159,"byte_end":9670171,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670351,"byte_end":9670363,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8190},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670507,"byte_end":9670519,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8190},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9670566,"byte_end":9670581,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671111,"byte_end":9671126,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8195},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671412,"byte_end":9671427,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8195},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9671465,"byte_end":9671471,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9676884,"byte_end":9676892,"line_start":1034,"line_end":1034,"column_start":6,"column_end":14},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9680555,"byte_end":9680563,"line_start":1172,"line_end":1172,"column_start":21,"column_end":29},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8208},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore_ll.rs","byte_start":9680916,"byte_end":9680927,"line_start":1188,"line_end":1188,"column_start":6,"column_end":17},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9683656,"byte_end":9683665,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9685760,"byte_end":9685775,"line_start":138,"line_end":138,"column_start":10,"column_end":25},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686020,"byte_end":9686040,"line_start":147,"line_end":147,"column_start":6,"column_end":26},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686294,"byte_end":9686309,"line_start":156,"line_end":156,"column_start":19,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8238},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/semaphore.rs","byte_start":9686417,"byte_end":9686437,"line_start":162,"line_end":162,"column_start":15,"column_end":35},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8245},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9690258,"byte_end":9690273,"line_start":113,"line_end":113,"column_start":21,"column_end":36},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9690540,"byte_end":9690555,"line_start":123,"line_end":123,"column_start":26,"column_end":41},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691559,"byte_end":9691565,"line_start":156,"line_end":156,"column_start":25,"column_end":31},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691619,"byte_end":9691625,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691686,"byte_end":9691701,"line_start":158,"line_end":158,"column_start":25,"column_end":40},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691766,"byte_end":9691782,"line_start":159,"line_end":159,"column_start":25,"column_end":41},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9691840,"byte_end":9691846,"line_start":161,"line_end":161,"column_start":17,"column_end":23},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":8255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9694963,"byte_end":9694978,"line_start":264,"line_end":264,"column_start":32,"column_end":47},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":8262},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695117,"byte_end":9695133,"line_start":272,"line_end":272,"column_start":32,"column_end":48},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695275,"byte_end":9695291,"line_start":280,"line_end":280,"column_start":35,"column_end":51},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":8271},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695413,"byte_end":9695419,"line_start":286,"line_end":286,"column_start":21,"column_end":27},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/rwlock.rs","byte_start":9695503,"byte_end":9695509,"line_start":292,"line_end":292,"column_start":21,"column_end":27},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9701784,"byte_end":9701795,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707722,"byte_end":9707733,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707819,"byte_end":9707830,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707963,"byte_end":9707974,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9707999,"byte_end":9708010,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":7830},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/task/atomic_waker.rs","byte_start":9708106,"byte_end":9708111,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":698}},"from":{"krate":2,"index":9249},"to":{"krate":0,"index":7853}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711652,"byte_end":9711661,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":8310},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9711841,"byte_end":9711850,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":8310},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9714009,"byte_end":9714017,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9715289,"byte_end":9715297,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":8289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716663,"byte_end":9716671,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":8289},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9716930,"byte_end":9716938,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":1736}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717241,"byte_end":9717249,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":8289},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9717363,"byte_end":9717369,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":8296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9718904,"byte_end":9718910,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8296},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719149,"byte_end":9719152,"line_start":384,"line_end":384,"column_start":24,"column_end":27},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8302},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719293,"byte_end":9719299,"line_start":394,"line_end":394,"column_start":18,"column_end":24},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8316},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719401,"byte_end":9719408,"line_start":402,"line_end":402,"column_start":6,"column_end":13},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719631,"byte_end":9719638,"line_start":411,"line_end":411,"column_start":30,"column_end":37},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1764}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719755,"byte_end":9719762,"line_start":417,"line_end":417,"column_start":23,"column_end":30},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":1769}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719792,"byte_end":9719799,"line_start":419,"line_end":419,"column_start":26,"column_end":33},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":6753}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/sync/watch.rs","byte_start":9719946,"byte_end":9719953,"line_start":425,"line_end":425,"column_start":26,"column_end":33},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8325},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/yield_now.rs","byte_start":9738764,"byte_end":9738772,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8369},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9745904,"byte_end":9745912,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9753754,"byte_end":9753762,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9753901,"byte_end":9753909,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9754874,"byte_end":9754882,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9754963,"byte_end":9754971,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9755838,"byte_end":9755846,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9719},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9756731,"byte_end":9756737,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/local.rs","byte_start":9757300,"byte_end":9757303,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":723}},"from":{"krate":5,"index":4219},"to":{"krate":0,"index":4948}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9760718,"byte_end":9760726,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762502,"byte_end":9762510,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9762718,"byte_end":9762726,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763047,"byte_end":9763062,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9642},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763363,"byte_end":9763368,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8497},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9763986,"byte_end":9763987,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8510},"to":{"krate":0,"index":8508}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764172,"byte_end":9764183,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764327,"byte_end":9764338,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8529},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/task/task_local.rs","byte_start":9764485,"byte_end":9764496,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8529},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/clock.rs","byte_start":9769081,"byte_end":9769086,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":9021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9779608,"byte_end":9779618,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":9026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797261,"byte_end":9797271,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":2079}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797299,"byte_end":9797309,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9026},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797446,"byte_end":9797456,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":9026},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9797838,"byte_end":9797843,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":9051},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9799970,"byte_end":9799975,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":9051},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800105,"byte_end":9800108,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":9045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay_queue.rs","byte_start":9800195,"byte_end":9800202,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":9037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9802740,"byte_end":9802745,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":9068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/delay.rs","byte_start":9803723,"byte_end":9803728,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":9068},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9817052,"byte_end":9817063,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":9072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9819041,"byte_end":9819059,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":5285}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/atomic_stack.rs","byte_start":9819631,"byte_end":9819649,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":9076},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9823622,"byte_end":9823627,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":9080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9829855,"byte_end":9829860,"line_start":329,"line_end":329,"column_start":15,"column_end":20},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9830068,"byte_end":9830073,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/entry.rs","byte_start":9830098,"byte_end":9830103,"line_start":341,"line_end":341,"column_start":22,"column_end":27},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":9080},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9830480,"byte_end":9830486,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":9104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/handle.rs","byte_start":9831131,"byte_end":9831137,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":9104},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9831582,"byte_end":9831594,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":9108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/registration.rs","byte_start":9832504,"byte_end":9832516,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":9108},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9832800,"byte_end":9832805,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":9112},"to":{"krate":2,"index":2026}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/stack.rs","byte_start":9832896,"byte_end":9832901,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":9112},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9808618,"byte_end":9808624,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":9116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9812273,"byte_end":9812279,"line_start":234,"line_end":234,"column_start":18,"column_end":24},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":9116},"to":{"krate":0,"index":544}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9814268,"byte_end":9814274,"line_start":308,"line_end":308,"column_start":18,"column_end":24},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":9116},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9814751,"byte_end":9814756,"line_start":327,"line_end":327,"column_start":6,"column_end":11},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":8785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/driver/mod.rs","byte_start":9816373,"byte_end":9816378,"line_start":389,"line_end":389,"column_start":21,"column_end":26},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":8785},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837173,"byte_end":9837178,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":9125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837893,"byte_end":9837898,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":9125},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/error.rs","byte_start":9837925,"byte_end":9837930,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9838636,"byte_end":9838643,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":9137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842417,"byte_end":9842424,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842553,"byte_end":9842560,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":767}},"from":{"krate":1,"index":8185},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842675,"byte_end":9842682,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2103}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842847,"byte_end":9842854,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2134}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9842959,"byte_end":9842966,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2108}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843107,"byte_end":9843114,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2108}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843275,"byte_end":9843282,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":2138}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/instant.rs","byte_start":9843389,"byte_end":9843396,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":9137},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9847132,"byte_end":9847140,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":9160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/interval.rs","byte_start":9848435,"byte_end":9848443,"line_start":164,"line_end":164,"column_start":32,"column_end":40},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":9160},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851775,"byte_end":9851782,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":9165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9851911,"byte_end":9851918,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":9625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9852456,"byte_end":9852463,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":9625},"to":{"krate":2,"index":9064}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853041,"byte_end":9853048,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":9165},"to":{"krate":2,"index":6570}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853192,"byte_end":9853199,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":9165},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/timeout.rs","byte_start":9853236,"byte_end":9853241,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":781}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9871381,"byte_end":9871389,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":9579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/throttle.rs","byte_start":9872204,"byte_end":9872212,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":9579},"to":{"krate":21,"index":68}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9863145,"byte_end":9863150,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":8943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/level.rs","byte_start":9867902,"byte_end":9867907,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":8943},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/stack.rs","byte_start":9869023,"byte_end":9869030,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2026},"to":{"krate":0,"index":8970}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9854966,"byte_end":9854971,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":9207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/time/wheel/mod.rs","byte_start":9860679,"byte_end":9860683,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":9221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9873045,"byte_end":9873049,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":9415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/bit.rs","byte_start":9874523,"byte_end":9874527,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":9415},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/addr.rs","byte_start":9881746,"byte_end":9881753,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":9421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/entry.rs","byte_start":9884388,"byte_end":9884395,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2026},"to":{"krate":0,"index":9270}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/generation.rs","byte_start":9884782,"byte_end":9884792,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":9436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9885931,"byte_end":9885936,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":9293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9886278,"byte_end":9886284,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":9295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9890236,"byte_end":9890241,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":9293},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/page.rs","byte_start":9890547,"byte_end":9890553,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":9295},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9892696,"byte_end":9892701,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":9339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/shard.rs","byte_start":9894380,"byte_end":9894385,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":9339},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/slot.rs","byte_start":9894762,"byte_end":9894766,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":9362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9895737,"byte_end":9895750,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":9383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/stack.rs","byte_start":9896578,"byte_end":9896591,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":9383},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876125,"byte_end":9876129,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876166,"byte_end":9876170,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9876193,"byte_end":9876197,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":9398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/slab/mod.rs","byte_start":9877712,"byte_end":9877716,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":9398},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180390,"byte_end":180400,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":180459,"byte_end":180469,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181758,"byte_end":181766,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181803,"byte_end":181811,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":181865,"byte_end":181875,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":184879,"byte_end":184889,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185134,"byte_end":185144,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185544,"byte_end":185554,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":185776,"byte_end":185780,"line_start":204,"line_end":204,"column_start":36,"column_end":40},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9464},"to":{"krate":2,"index":5285}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186227,"byte_end":186235,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/linked_list.rs","byte_start":186434,"byte_end":186442,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6565}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/rand.rs","byte_start":196514,"byte_end":196522,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":9477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198062,"byte_end":198066,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2038},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198069,"byte_end":198073,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/wake.rs","byte_start":198384,"byte_end":198392,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":9486},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897403,"byte_end":9897410,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":2038}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897447,"byte_end":9897454,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897492,"byte_end":9897501,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2050}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9897687,"byte_end":9897694,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":9502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898328,"byte_end":9898337,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898469,"byte_end":9898478,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/try_lock.rs","byte_start":9898600,"byte_end":9898609,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":9506},"to":{"krate":2,"index":2257}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202358,"byte_end":202366,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":9535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202616,"byte_end":202624,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":202729,"byte_end":202737,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":9535},"to":{"krate":2,"index":2246}},{"span":{"file_name":"/home/elliot/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.22/src/util/intrusive_double_linked_list.rs","byte_start":203046,"byte_end":203056,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":9544},"to":{"krate":4294967295,"index":4294967295}}]}